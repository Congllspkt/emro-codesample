<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="connect">
    <insert id="insertIpInfo">
	/* connect.saveIpInfo : IP연결확인정보 저장 */
		INSERT INTO OUTSDPARTY_FW(
			   TEN_ID
			  ,OUTSDPARTY_FW_UUID
			  ,OUTSDPARTY_IP
			  ,OUTSDPARTY_PORT
			  ,OUTSDPARTY_DOMAIN
			  ,FW_IP_CONN_STS
			  ,FW_DOMAIN_CONN_STS
			  ,FW_CONFM_DT
			  ,FW_CONN_FAIL_MSG
			  ,RMK
			  ,STS
			  ,MOD_DTTM
			  ,MODR_ID
			  ,REG_DTTM
			  ,REGR_ID)
		VALUES (
			   #{g.tenant}
			  ,#{p.outsdparty_fw_uuid}
			  ,#{p.outsdparty_ip}
			  ,#{p.outsdparty_port}
			  ,#{p.outsdparty_domain}
			  ,#{p.fw_ip_conn_sts}
			  ,#{p.fw_domain_conn_sts}
			  ,#{g.now}
			  <choose>
				<when test="p.fw_ip_conn_sts == &quot;Y&quot; and p.fw_domain_conn_sts == &quot;Y&quot; ">
				,''
				</when>
				<otherwise>
				,#{p.fw_conn_fail_msg}
				</otherwise>
    	      </choose>
    	      ,#{p.rmk}
    	      ,'C'
			  ,#{g.now}
			  ,#{g.username}
			  ,#{g.now}
			  ,#{g.username}
			)
    </insert>
    <update id="updateIpInfo">
	/* connect.updateIpInfo : IP 연결확인 정보 저장 */
    	UPDATE OUTSDPARTY_FW
    	   SET OUTSDPARTY_IP = #{p.outsdparty_ip}
    	      ,OUTSDPARTY_PORT = #{p.outsdparty_port}
    	      ,OUTSDPARTY_DOMAIN = #{p.outsdparty_domain}
    	      ,FW_IP_CONN_STS = #{p.fw_ip_conn_sts}
    	      ,FW_DOMAIN_CONN_STS = #{p.fw_domain_conn_sts}
    	      ,FW_CONFM_DT = #{g.now}
    	      ,RMK = #{p.rmk}
			<choose>
				<when test="p.fw_ip_conn_sts == &quot;Y&quot; and p.fw_domain_conn_sts == &quot;Y&quot; ">
					,FW_CONN_FAIL_MSG = ''
				</when>
				<otherwise>
					,FW_CONN_FAIL_MSG = #{p.fw_conn_fail_msg}
				</otherwise>
			</choose>
    	 WHERE TEN_ID = #{g.tenant}
    	   AND OUTSDPARTY_FW_UUID = #{p.outsdparty_fw_uuid}
    </update>
    <select id="selectIpList" resultType="map">
    /* connect.selectIpList IP 연결정보 조회 */
    	SELECT
    		   OUTSDPARTY_FW_UUID
    		  ,OUTSDPARTY_IP
    		  ,OUTSDPARTY_PORT
    		  ,OUTSDPARTY_DOMAIN
    		  ,FW_IP_CONN_STS
    		  ,FW_DOMAIN_CONN_STS
    		  ,FW_CONFM_DT
    		  ,FW_CONN_FAIL_MSG
    		  ,RMK
    	  FROM OUTSDPARTY_FW
    	 WHERE TEN_ID = #{g.tenant}
    	 ORDER BY REG_DTTM DESC
    </select>
    <delete id="deleteIpInfo">
    /* connect.deleteIpInfo : IP 정보 삭제 */
    	DELETE FROM OUTSDPARTY_FW
    		  WHERE TEN_ID = #{g.tenant}
    		    AND OUTSDPARTY_FW_UUID = #{p.outsdparty_fw_uuid}
    </delete>
    <update id="updateConnectInfo">
    /* connect.updateConnectInfo*/
    	UPDATE OUTSDPARTY_FW
    	   SET FW_IP_CONN_STS = #{p.fw_ip_conn_sts}
    	   	  ,FW_DOMAIN_CONN_STS = #{p.fw_domain_conn_sts}
    	      ,FW_CONFM_DT = #{g.now}
    	      ,OUTSDPARTY_IP = #{p.outsdparty_ip}
    	      ,OUTSDPARTY_PORT = #{p.outsdparty_port}
    	      ,OUTSDPARTY_DOMAIN = #{p.outsdparty_domain}
    	      ,RMK = #{p.rmk}
    	      <choose>
				<when test="p.fw_ip_conn_sts == &quot;Y&quot; and p.fw_domain_conn_sts == &quot;Y&quot; ">
				,FW_CONN_FAIL_MSG = ''
				</when>
				<otherwise>
				,FW_CONN_FAIL_MSG = #{p.fw_conn_fail_msg}
				</otherwise>
    	      </choose>
    	 WHERE TEN_ID = #{g.tenant}
    	   AND OUTSDPARTY_FW_UUID = #{p.outsdparty_fw_uuid}
    </update>
</mapper>
