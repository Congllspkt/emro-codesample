<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="clause">
	<resultMap id="resultMap-getAttrAll" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
	</resultMap>
	<select id="getAttrAll" resultMap="resultMap-getAttrAll">
		/* clause.getAttrAll */
		SELECT CNTR_CL_ID
			 , DFLT_VAL
			 , DAT_TYP_CCD
			 , CNTR_CL_AKA
			 , MOD_POSS_YN
			 , CNTR_CL_NM
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		  AND USE_YN ='Y'
	</select>
	<resultMap id="resultMap-searchListCntrItem" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
		<result column="DYN_TMPL_CONT" javaType="string" property="dyn_tmpl_cont" typeHandler="stringClob"/>
	</resultMap>
	<select id="searchListCntrItem" resultMap="resultMap-searchListCntrItem">
		/* clause.searchListCntrItem : 계약항목 목록 조회 */
		SELECT CNTR_CL_UUID				/*항목아이디 */
		, CNTR_CL_ID              /*항목명*/
		, CNTR_CL_NM           /*항목명*/
		, DAT_TYP_CCD             /*데이터유형*/
		, USE_YN               /*사용여부*/
		, MOD_POSS_YN          /*수정가능여부*/
		, CNTR_CL_AKA             /*맵핑컬럼이름*/
		, DFLT_VAL              /*기본값*/
		, MAND_YN          /*필수여부*/
		, DYN_TMPL_CONT			/*템플릿기초내용*/
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		<if test="p.cntr_cl_nm != null and p.cntr_cl_nm != &quot;&quot;">
			<bind name="pattern" value="'%' + p.cntr_cl_nm + '%'"/>
			AND UPPER(CNTR_CL_NM) LIKE UPPER(#{pattern})
		</if>
		<if test="p.cntr_cl_id != null and p.cntr_cl_id != &quot;&quot;">
			<bind name="attrNmPattern" value="'%' + p.cntr_cl_id + '%'"/>
			AND UPPER(CNTR_CL_ID) LIKE UPPER(#{attrNmPattern})
		</if>
		<if test="p.dat_typ_ccd != null and p.dat_typ_ccd != &quot;&quot;">
			AND DAT_TYP_CCD = #{p.dat_typ_ccd}
		</if>
		<if test="p.use_yn != null and p.use_yn != &quot;&quot;">
			AND USE_YN = #{p.use_yn}
		</if>
		<if test="p.mod_poss_yn != null and p.mod_poss_yn != &quot;&quot;">
			AND MOD_POSS_YN = #{p.mod_poss_yn}
		</if>
		<if test="p.mand_yn != null and p.mand_yn != &quot;&quot;">
			AND MAND_YN = #{p.mand_yn}
		</if>
		<if test="p.cntr_cl_aka != null and p.cntr_cl_aka != &quot;&quot;">
			<bind name="pattern2" value="'%' + p.cntr_cl_aka + '%'"/>
			AND UPPER(CNTR_CL_AKA) LIKE UPPER(#{pattern2})
		</if>
		ORDER BY CNTR_CL_NM
	</select>
	<resultMap id="resultMap-findListCntrItem" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
		<result column="DYN_TMPL_CONT" javaType="string" property="dyn_tmpl_cont" typeHandler="stringClob"/>
	</resultMap>
	<select id="findListCntrItem" resultMap="resultMap-findListCntrItem">
		/* clause.findListCntrItem : 계약항목 목록 조회 */
		SELECT CNTR_CL_UUID				/*항목아이디 */
		, CNTR_CL_ID              /*항목명*/
		, CNTR_CL_NM           /*항목명*/
		, DAT_TYP_CCD             /*데이터유형*/
		, USE_YN               /*사용여부*/
		, MOD_POSS_YN          /*수정가능여부*/
		, CNTR_CL_AKA             /*맵핑컬럼이름*/
		, DFLT_VAL              /*기본값*/
		, MAND_YN          /*필수여부*/
		, DYN_TMPL_CONT			/*템플릿기초내용*/
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		<bind name="attrNmPattern2" value="'%' + p.cntr_cl_id + '%'"/>
		AND UPPER(CNTR_CL_ID) LIKE UPPER(#{attrNmPattern2})
		<if test="p.dat_typ_ccd != null and p.dat_typ_ccd != &quot;&quot;">
			AND DAT_TYP_CCD = #{p.dat_typ_ccd}
		</if>
		<if test="p.use_yn != null and p.use_yn != &quot;&quot;">
			AND USE_YN = #{p.use_yn}
		</if>
		<if test="p.mod_poss_yn != null and p.mod_poss_yn != &quot;&quot;">
			AND MOD_POSS_YN = #{p.mod_poss_yn}
		</if>
		<if test="p.mand_yn != null and p.mand_yn != &quot;&quot;">
			AND MAND_YN = #{p.mand_yn}
		</if>
		<if test="p.cntr_cl_aka != null and p.cntr_cl_aka != &quot;&quot;">
			<bind name="pattern3" value="'%' + p.cntr_cl_aka + '%'"/>
			AND UPPER(CNTR_CL_AKA) LIKE UPPER(#{pattern3})
		</if>
		ORDER BY REG_DTTM DESC
	</select>
	<select id="checkCntrItemName" resultType="int">
		/* clause.checkCntrItemName : 계약항목명 중복체크 */
		SELECT COUNT(*)
		FROM CNTR_CL
		WHERE TEN_ID     = #{g.tenant}
		AND CNTR_CL_NM = #{p.cntr_cl_nm}
		<if test="p.cntr_cl_uuid != null and p.cntr_cl_uuid != &quot;&quot;">
			AND CNTR_CL_UUID != #{p.cntr_cl_uuid}
		</if>
	</select>
	<select id="checkCntrTmpItemVariable" resultType="int">
		/* clause.checkCntrTmpItemVariable : 템플릿 맵핑컬럼명 중복체크 */
		SELECT COUNT(*)
		FROM CNTR_CL
		WHERE TEN_ID     = #{g.tenant}
		  AND CNTR_CL_AKA = #{p.cntr_cl_aka}
	</select>
	<insert id="insertCntrItem">
		/* clause.insertCntrItem : 계약항목 신규 저장 */
		INSERT INTO CNTR_CL (
			TEN_ID,                 /*시스템아이디*/
			CNTR_CL_UUID,			/*항목아이디*/
			CNTR_CL_ID,             /*항목명*/
			CNTR_CL_NM,             /*항목명*/
			DAT_TYP_CCD,            /*데이터유형*/
			USE_YN,                 /*사용여부*/
			MOD_POSS_YN,            /*수정가능여부*/
			MAND_YN,            	/*필수여부*/
			CNTR_CL_AKA,            /*맵핑컬럼이름*/
			DFLT_VAL,               /*기본값*/
			DYN_TMPL_CONT,			/*템플릿기초내용*/
			CL_GRP_CCD,
			RMK,                    /*기타*/
			STS,                    /*상태*/
			REGR_ID,                /*등록자*/
			REG_DTTM,				/*등록일자*/
			MODR_ID,				/*수정자*/
			MOD_DTTM				/*수정일자*/
		) VALUES (
			         #{g.tenant},
			         #{p.cntr_cl_uuid},
			         #{p.cntr_cl_id},
			         #{p.cntr_cl_nm},
			         #{p.dat_typ_ccd},
			         #{p.use_yn},
			         #{p.mod_poss_yn},
			         #{p.mand_yn},
			         #{p.cntr_cl_aka},
			         #{p.dflt_val},
			         #{p.dyn_tmpl_cont},
			         #{p.cl_grp_ccd},
			         #{p.rmk},
			         'C',
			         #{g.username},
			         #{g.now},
			         #{g.username},
			         #{g.now}
		         )
	</insert>
	<delete id="deleteCntrItem">
		/* clause.deleteCntrItem : 계약항목 삭제 */
		DELETE
		FROM CNTR_CL
		WHERE TEN_ID  = #{g.tenant}
		  AND CNTR_CL_UUID = #{p.cntr_cl_uuid}
	</delete>
	<resultMap id="resultMap-findDynamicTmpById" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
		<result column="DYN_TMPL_CONT" javaType="string" property="dyn_tmpl_cont" typeHandler="stringClob"/>
	</resultMap>
	<select id="findDynamicTmpById" resultMap="resultMap-findDynamicTmpById">
		/* clause.findDynamicTmpById : 계약서식 동적 템플릿 조회 */
		SELECT AFAB.CNTR_CL_UUID
			 , AFAB.DFLT_VAL
			 , AFAB.DYN_TMPL_CONT	/*동적생성 템플릿 조회*/
			 , AFAB.DAT_TYP_CCD 	/*데이터유형*/
		FROM CNTR_CL AFAB
		WHERE AFAB.TEN_ID  = #{g.tenant}
		  AND AFAB.CNTR_CL_UUID = #{p.cntr_cl_uuid}
	</select>
	<update id="saveDynamicTmp">
		/* clause.saveDynamicTmp : 계약서식 동적 템플릿 저장*/
		UPDATE CNTR_CL
		SET DFLT_VAL = #{p.dflt_val}
		  , DYN_TMPL_CONT = #{p.dyn_tmpl_cont}
		WHERE TEN_ID = #{g.tenant}
		  AND CNTR_CL_UUID = #{p.cntr_cl_uuid}
	</update>
	<update id="updateCntrItem">
		/* clause.updateCntrItem : 계약항목 갱신 */
		UPDATE CNTR_CL
		SET CNTR_CL_NM	= #{p.cntr_cl_nm}		/*항목명*/
		  , DAT_TYP_CCD		= #{p.dat_typ_ccd}			/*데이터유형*/
		  , USE_YN		= #{p.use_yn}			/*사용여부*/
		  , MOD_POSS_YN	= #{p.mod_poss_yn}		/*수정가능여부*/
		  , MAND_YN	= #{p.mand_yn}		/*필수여부*/
		  , CNTR_CL_AKA		= #{p.cntr_cl_aka}			/*맵핑컬럼이름*/
		  , DFLT_VAL		= #{p.dflt_val}			/*기본값*/
		  , CL_GRP_CCD	= #{p.cl_grp_ccd}
		  , RMK			= #{p.rmk}
		  , STS			= 'U'
		  , MODR_ID		= #{g.username}			/*수정자*/
		  , MOD_DTTM		= #{g.now}				/*수정일자*/
		WHERE TEN_ID		= #{g.tenant}
		  AND CNTR_CL_UUID		= #{p.cntr_cl_uuid}
	</update>
	<resultMap id="resultMap-findDynamicTmpByVariable" type="map">
		<result column="DYN_TMPL_CONT" javaType="string" property="dyn_tmpl_cont" typeHandler="stringClob"/>
	</resultMap>
	<select id="findDynamicTmpByVariable" resultMap="resultMap-findDynamicTmpByVariable">
		/* clause.findDynamicTmpByVariable : 계약서식 동적 템플릿 조회 */
		SELECT AFAB.CNTR_CL_UUID
		,AFAB.CNTR_CL_ID
		,AFAB.CNTR_CL_AKA
		,AFAB.DYN_TMPL_CONT	/*동적생성 템플릿 조회*/
		FROM CNTR_CL AFAB
		WHERE AFAB.TEN_ID  = #{g.tenant}
		AND AFAB.CNTR_CL_AKA IN
		<foreach close=")" collection="p.variables" item="cntr_cl_aka" open="(" separator=",">
			#{cntr_cl_aka}
		</foreach>
	</select>
	<resultMap id="resultMap-findListCntrClause" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
	</resultMap>
	<select id="findListCntrClause" resultMap="resultMap-findListCntrClause">
		/* clause.findListCntrClause : 계약 조항 목록 조회 */
		SELECT T.*
		FROM (
		SELECT DTL.DTLCD      AS CNTR_CL_UUID
		, NULL           AS CNTR_CL_ID
		, DTLML.DTLCD_NM AS CNTR_CL_NM
		, NULL           AS USE_YN
		, NULL           AS DAT_TYP_CCD
		, NULL           AS CNTR_CL_AKA
		, NULL           AS MOD_POSS_YN
		, NULL           AS MAND_YN
		, NULL           AS DFLT_VAL
		, DTL.DTLCD      AS CL_GRP_CCD
		, 'ROOT'         AS UP_CL_GRP_CCD
		, DTL.DTLCD_SORT AS SORT_ORD
		FROM DTLCD DTL
		LEFT OUTER JOIN DTLCD_MULTLANG DTLML
		ON DTL.TEN_ID = DTLML.TEN_ID
		AND DTL.CCD = DTLML.CCD
		AND DTL.DTLCD = DTLML.DTLCD
		AND DTLML.LANG_CCD = #{g.locale}
		WHERE DTL.TEN_ID = #{g.tenant}
		AND DTL.CCD = 'D019'
		AND DTL.USE_YN = 'Y'
		AND DTL.STS != 'D'
		UNION
		SELECT CNTR_CL_UUID
		, CNTR_CL_ID
		, CNTR_CL_NM
		, USE_YN
		, DAT_TYP_CCD
		, CNTR_CL_AKA
		, MOD_POSS_YN
		, MAND_YN
		, CASE WHEN DAT_TYP_CCD = 'TMPL'
			        THEN ''
			   ELSE <choose>
						<when test="_databaseId == 'oracle'"> DBMS_LOB.SUBSTR(DFLT_VAL, 4000) </when>
			            <otherwise> DFLT_VAL </otherwise>
					</choose>
		  END AS DFLT_VAL
		, CL_GRP_CCD AS CL_GRP_CCD
		, CL_GRP_CCD AS UP_CL_GRP_CCD
		, ROW_NUMBER() OVER(PARTITION BY CL_GRP_CCD ORDER BY CNTR_CL_NM) AS SORT_ORD
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		<if test="p.cntr_cl_nm != null and p.cntr_cl_nm != &quot;&quot;">
			<bind name="pattern" value="'%' + p.cntr_cl_nm + '%'"/>
			AND UPPER(CNTR_CL_NM) LIKE UPPER(#{pattern})
		</if>
		<if test="p.dat_typ_ccd != null and p.dat_typ_ccd != &quot;&quot;">
			AND DAT_TYP_CCD = #{p.dat_typ_ccd}
		</if>
		<if test="p.use_yn != null and p.use_yn != &quot;&quot;">
			AND USE_YN = #{p.use_yn}
		</if>
		<if test="p.mod_poss_yn != null and p.mod_poss_yn != &quot;&quot;">
			AND MOD_POSS_YN = #{p.mod_poss_yn}
		</if>
		<if test="p.cntr_cl_aka != null and p.cntr_cl_aka != &quot;&quot;">
			<bind name="pattern2" value="'%' + p.cntr_cl_aka + '%'"/>
			AND UPPER(CNTR_CL_AKA) LIKE UPPER(#{pattern2})
		</if>
		) T
		ORDER BY T.SORT_ORD
	</select>
	<select id="getCntrClauseByCntrClId" resultType="map">
		/* clause.getCntrClauseByCntrClId : 계약조항 아이디로 계약 조항 조회 */
		SELECT CNTR_CL_UUID
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		  AND CNTR_CL_ID = #{p}
		  AND STS != 'D'
	</select>
	<select id="findCntrClauseUseByCntrClUuid" resultType="map">
		/* clause.findCntrClauseUseByCntrClUuid : 계약 조항 사용 조회 */
		SELECT CL_USE.CNTR_CL_UUID
			 , CL_USE.TMPL_UUID
			 , CL_USE.USE_CNT
			 , CL_USE.RMK
			 , CL_USE.TMPL_TYP_CCD
			 , CL.CNTR_CL_NM
			 , CASE WHEN CL_USE.TMPL_TYP_CCD = 'CNTRDOC' THEN CNTRDOC.CNTRDOC_TMPL_NM
			        WHEN CL_USE.TMPL_TYP_CCD = 'APPX'    THEN APPX.APPX_TMPL_NM
			        ELSE ''
			END AS TMPL_NM
		FROM CNTR_CL_USE_CONFM CL_USE
			     INNER JOIN CNTR_CL CL
			                ON CL.TEN_ID = CL_USE.TEN_ID
				                AND CL.CNTR_CL_UUID = CL_USE.CNTR_CL_UUID
			     LEFT OUTER JOIN CNTRDOC_TMPL CNTRDOC
			                     ON CNTRDOC.TEN_ID = CL_USE.TEN_ID
				                     AND CNTRDOC.CNTRDOC_TMPL_UUID = CL_USE.TMPL_UUID
			     LEFT OUTER JOIN APPX_TMPL APPX
			                     ON APPX.TEN_ID = CL_USE.TEN_ID
				                     AND APPX.APPX_TMPL_UUID = CL_USE.TMPL_UUID
		WHERE CL_USE.TEN_ID = #{g.tenant}
		  AND CL_USE.CNTR_CL_UUID = #{p}
	</select>
	<insert id="insertCntrClauseUse">
		/* clause.insertCntrClauseUse : 계약 조항 사용 등록 */
		INSERT INTO CNTR_CL_USE_CONFM
		( TEN_ID
		, CNTR_CL_UUID
		, TMPL_UUID
		, USE_CNT
		, TMPL_TYP_CCD
		, RMK
		, STS
		, REG_DTTM
		, REGR_ID
		, MOD_DTTM
		, MODR_ID
		) VALUES
			( #{g.tenant}
			, #{p.cntr_cl_uuid}
			, #{p.tmpl_uuid}
			, #{p.use_cnt}
			, CASE WHEN EXISTS (SELECT 1
			                    FROM CNTRDOC_TMPL A
			                    WHERE A.TEN_ID = #{g.tenant}
				                  AND A.CNTRDOC_TMPL_UUID = #{p.tmpl_uuid})
				       THEN 'CNTRDOC' ELSE 'APPX'
				  END
			, #{p.rmk}
			, 'C'
			, #{g.now}
			, #{g.username}
			, #{g.now}
			, #{g.username}
			)
	</insert>
	<delete id="deleteCntrClauseUse">
		/* clause.deleteCntrClauseUse : 계약 조항 사용 삭제 */
		DELETE FROM CNTR_CL_USE_CONFM
		WHERE TEN_ID = #{g.tenant}
		  AND TMPL_UUID = #{p.tmpl_uuid}
	</delete>
	<select id="getCntrClauseUseCnt" resultType="int">
		/* clause.getCntrClauseUseCnt : 사용 계약조항 갯수 */
		SELECT CASE WHEN SUM(USE_CNT) IS NULL
			        THEN 0
		            ELSE SUM(USE_CNT)
               END
		FROM CNTR_CL_USE_CONFM
		WHERE TEN_ID = #{g.tenant}
		  AND CNTR_CL_UUID = #{p.cntr_cl_uuid}
	</select>
	<resultMap id="resultMap-findCntrClause" type="map">
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
	</resultMap>
	<select id="findCntrClause" resultMap="resultMap-findCntrClause">
		/* clause.findCntrClause : 계약조항 조회 */
		SELECT CNTR_CL_UUID
			 , CNTR_CL_ID
			 , CNTR_CL_NM
			 , DAT_TYP_CCD
			 , DFLT_VAL
		FROM CNTR_CL
		WHERE TEN_ID = #{g.tenant}
		  AND CNTR_CL_UUID = #{p.cntr_cl_uuid}
		  AND USE_YN = 'Y'
	</select>
	<resultMap id="resultMap-findClauseCntrUseByCntrClUuid" type="map">
		<result column="DYN_TMPL_CONT" javaType="string" property="dyn_tmpl_cont" typeHandler="stringClob"/>
		<result column="DFLT_VAL" javaType="string" property="dflt_val" typeHandler="stringClob"/>
	</resultMap>
	<select id="findClauseCntrUseByCntrClUuid" resultMap="resultMap-findClauseCntrUseByCntrClUuid">
		/* clause.findClauseCntrUseByCntrClUuid : 템플릿에서 사용하는 계약항목 조회 */
		SELECT CL.CNTR_CL_UUID
		, CL.CNTR_CL_ID
		, CL.CNTR_CL_NM
		, CL.DAT_TYP_CCD
		, CL.CNTR_CL_AKA
		, CL.MOD_POSS_YN
		, CL.DYN_TMPL_CONT
		, CL.MAND_YN
		FROM CNTR_CL CL
		INNER JOIN CNTR_CL_USE_CONFM CL_USE
		ON CL.TEN_ID = CL_USE.TEN_ID
		AND CL.CNTR_CL_UUID = CL_USE.CNTR_CL_UUID
		WHERE CL_USE.TEN_ID = #{g.tenant}
		AND CL_USE.TMPL_UUID = #{p.tmpl_uuid}
		AND CL.USE_YN = 'Y'
		<if test="p.dat_typ_ccd != null and p.dat_typ_ccd != &quot;&quot;">
			AND CL.DAT_TYP_CCD = #{p.dat_typ_ccd}
		</if>
	</select>
</mapper>
