<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="po-status">
	<!-- createDraftPo : RFx 업체 선정에 의해 PO 생성시 -->
	<update id="createDraftPoHd">
		/* po-status.createDraftPoHd: PO 작성대기 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'WTG'
		     , APVL_STS_CCD    = 'CRNG'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="createDraftPoDt">
		/* po-status.createDraftPoDt: PO 작성대기 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- saveDraftPo -->
	<update id="saveDraftPoHd">
		/* po-status.saveDraftPoHd: PO 임시저장 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD    = 'CRNG'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="saveDraftPoDt">
		/* po-status.saveDraftPoDt: PO 임시저장 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- submitApprovalPo -->
	<update id="submitApprovalPoHd">
		/* po-status.submitApprovalPoHd: PO 결재상신 시 상태 수정 */
		UPDATE PO   
		   SET PO_STS_CCD = 'PRGSG'
		     , APVL_STS_CCD    = 'APVL_PRGSG'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>            
	<update id="submitApprovalPoDt">
		/* po-status.submitApprovalPoDt: PO 결재상신 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_APVL_RPTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- approveApprovalPo -->
	<update id="approveApprovalPoHd">
		/* po-status.approveApprovalPoHd: PO 결재승인 시 상태 수정 */
		UPDATE PO
		   SET APVL_STS_CCD  = 'APVD'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		     , PO_STS_CCD    = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="approveApprovalPoDt">
		/* po-status.approveApprovalPoDt: PO 결재승인 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- rejectApprovalPo -->
	<update id="rejectApprovalPoHd">
		/* po-status.rejectApprovalPoHd: PO 결재반려 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD    = 'APVL_RET'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="rejectApprovalPoDt">
		/* po-status.rejectApprovalPoDt: PO 결재반려 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- cancelApprovalPo -->
	<update id="cancelApprovalPoHd">
		/* po-status.cancelApprovalPoHd: PO 결재취소 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD    = 'APVL_CNCL'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="cancelApprovalPoDt">
		/* po-status.cancelApprovalPoDt: PO 결재취소 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- bypassApprovalPo -->
	<update id="bypassApprovalPoHd">
		/* po-status.bypassApprovalPoHd: PO 승인처리 시 상태 수정 */
		UPDATE PO
		   SET
		       APVL_STS_CCD  = 'APVD'
		     , VD_PO_STS_CCD = 'RCPT_WTG'
		     , PO_STS_CCD    = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="bypassApprovalPoDt">
		/* po-status.bypassApprovalPoDt: PO 승인처리 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<!-- returnElecCntrPo -->
	<update id="returnElecCntrPoHd">
		/* po-status.returnElecCntrPoHd: 전자계약 담당자 반송 시 상태 수정 */
		UPDATE PO
		   SET APVL_STS_CCD = NULL
		     , PO_STS_CCD = 'CRNG'
		     , CNTR_STS_CCD = NULL
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="returnElecCntrPoAprv">
		/* po-status.returnElecCntrPoAprv: 전자계약 담당자 반송 시 결재 연결 수정 */
		UPDATE TASK_APVL
		   SET USE_YN = 'N'
		 WHERE TEN_ID     = #{g.tenant}
		   AND TASK_UUID     = #{p.po_uuid}
		   <choose>
		       <when test="p.uprccntr_revno &gt; 1">
		           AND APVL_TYP_CCD = 'PO_CHG'  /* 발주변경품의 */
		       </when>
		       <otherwise>
		           AND APVL_TYP_CCD = 'POC'   /* 발주품의 */
		       </otherwise>
		   </choose>
		   AND USE_YN     = 'Y'
	</update>
	<!-- completeElecCntrPo -->
	<update id="completeElecCntrPoHd">
		/* po-status.completeElecCntrPoHd: 발주 전자계약 완료 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'APVD'
		     , VD_PO_STS_CCD =  'RCPT'
		     , CNTR_STS_CCD = #{p.cntr_sts_ccd}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="completeElecCntrPoDt">
		/* po-status.completeElecCntrPoDt: 발주 전자계약 완료 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- acceptPoByVendor -->
	<update id="acceptPoByVendor">
		/* po-status.acceptPoByVendor: 협력사 PO 접수 시 상태 수정 */
		UPDATE PO
		   SET VD_PO_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="p.po_uuids != null">
		           AND PO_UUID IN
		           <foreach close=")" collection="p.po_uuids" item="po_uuid" open="(" separator=",">
		               #{po_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           AND PO_UUID = #{p.po_uuid}
		       </otherwise>
		   </choose>
	</update>
	<!-- rejectPoByVendor -->
	<update id="rejectPoByVendor">
		/* po-status.rejectPoByVendor: 협력사 PO 거부 시 상태 수정 */
		UPDATE PO
		   SET VD_PO_STS_CCD     = 'RJCT'
		     , PO_RCPT_RJCT_RSN = #{p.po_rcpt_rjct_rsn}
		     , PO_RCPT_RJCT_RSN_CCD = #{p.po_rcpt_rjct_rsn_ccd}
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="p.po_uuids != null">
		           AND PO_UUID IN
		           <foreach close=")" collection="p.po_uuids" item="po_uuid" open="(" separator=",">
		               #{po_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           AND PO_UUID = #{p.po_uuid}
		       </otherwise>
		   </choose>
	</update>
	<!-- saveDraftPoChangeRequest -->
	<update id="saveDraftPoChangeRequestHd">
		/* po-status.saveDraftPoChangeRequestHd: PO변경요청 임시저장 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ_CRNG'
		     , PO_CHG_REQ_APVL_STS_CCD = 'CRNG'
		     , PO_STS_CCD = ''
		     , APVL_STS_CCD = ''
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<!-- submitApprovalPoChangeRequest -->
	<update id="submitApprovalPoChangeRequestHd">
		/* po-status.submitApprovalPoChangeRequestHd: PO변경요청 결재상신 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ_APVL_PRGSG'
		     , PO_CHG_REQ_APVL_STS_CCD  = 'APVL_PRGSG'
		     , PO_STS_CCD = ''
		     , APVL_STS_CCD = ''
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<!-- approveApprovalPoChangeRequest -->
	<update id="approveApprovalPoChangeRequestHd">
		/* po-status.approveApprovalPoChangeRequestHd: PO변경요청 결재승인 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ'
		     , PO_CHG_REQ_APVL_STS_CCD = 'APVD'
		     , PO_STS_CCD = 'CHG_REQ'
		     , APVL_STS_CCD = ''
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<!-- rejectApprovalPoChangeRequest -->
	<update id="rejectApprovalPoChangeRequestHd">
		/* po-status.rejectApprovalPoChangeRequestHd: PO변경요청 결재반려 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ_CRNG'
		     , PO_CHG_REQ_APVL_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<!-- cancelApprovalPoChangeRequest -->
	<update id="cancelApprovalPoChangeRequestHd">
		/* po-status.cancelApprovalPoChangeRequestHd: PO변경요청 결재취소 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ_CRNG'
		     , PO_CHG_REQ_APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- bypassApprovalPoChangeRequest -->
	<update id="bypassApprovalPoChangeRequestHd">
		/* po-status.bypassApprovalPoChangeRequestHd: PO변경요청 승인처리 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ'
		     , PO_CHG_REQ_APVL_STS_CCD = NULL
		     , PO_STS_CCD = 'CHG_REQ'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- returnPoChangeRequest -->
	<update id="returnPoChangeRequestHd">
		/* po-status.returnPoChangeRequestHd: PO변경요청 반송 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_REQ_RET'
		     , PO_STS_CCD = 'CHG_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- saveDraftPoChange -->
	<update id="saveDraftPoChangeHd">
		/* po-status.saveDraftPoChangeHd: PO변경 임시저장 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- submitApprovalPoChange -->
	<update id="submitApprovalPoChangeHd">
		/* po-status.submitApprovalPoChangeHd: PO변경 결재상신 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'PRGSG'
		     , APVL_STS_CCD = 'APVL_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- approveApprovalPoChange -->
	<update id="approveApprovalPoChangeHd">
		/* po-status.approveApprovalPoChangeHd: PO변경 결재승인 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_CMPLD'
		     , APVL_STS_CCD       = 'APVD'
		     , VD_PO_STS_CCD      = 'RCPT_WTG'
		     , PO_STS_CCD         = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- rejectApprovalPoChange -->
	<update id="rejectApprovalPoChangeHd">
		/* po-status.rejectApprovalPoChangeHd: PO변경 결재반려 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- cancelApprovalPoChange -->
	<update id="cancelApprovalPoChangeHd">
		/* po-status.cancelApprovalPoChangeHd: PO변경 결재취소 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- bypassApprovalPoChange -->
	<update id="bypassApprovalPoChangeHd">
		/* po-status.bypassApprovalPoChangeHd: PO변경 승인처리 시 상태 수정 */
		UPDATE PO
		   SET PO_CHG_REQ_STS_CCD = 'CHG_CMPLD'
		     , APVL_STS_CCD       = 'APVD'
		     , VD_PO_STS_CCD      = 'RCPT_WTG'
		     , PO_STS_CCD         = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- closePo -->
	<update id="closePoHd">
		/* po-status.closePoHd: PO해지 승인처리 시 상태 수정 */
		UPDATE PO
		   SET PO_STS_CCD = 'TRMN'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="closePoDt">
		/* po-status.closePoDt: PO해지 승인처리 시 상태 수정 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'PO_CNCL'
		     , PO_ERY_ED_YN = 'Y'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- requestAsn -->
	<update id="requestAsnPoDt">
		/* po-status.requestAsnPoDt: 납품예정(ASN)(협력사)  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID IN (
		                      SELECT PO_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- saveDraftGr -->
	<update id="saveDraftGrPoDt">
		/* po-status.saveDraftGrPoDt: 검수등록(입고,GR) 임시저장  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID  IN (
		                       SELECT PO_ITEM_UUID
		                         FROM GR_ITEM
		                        WHERE TEN_ID = #{g.tenant}
		                          AND GR_UUID  = #{p.gr_uuid}
		                      )
	</update>
	<!-- approveApprovalGr -->
	<select id="selectApprovalGrPoDt" resultType="map">
		/* po-status.selectApprovalGrPoDt */
		SELECT B.*
		  FROM PO_ITEM A
		 INNER JOIN (
		             SELECT ALL_GRDT.TEN_ID
		                  , ALL_GRDT.PO_NO
		                  , ALL_GRDT.PO_LNO
		                  , SUM(CASE WHEN ALL_GRDT.GR_QTY IS NULL THEN 0 ELSE ALL_GRDT.GR_QTY END) AS SUM_GR_QTY  /* GR 누적수량*/
		                  , CRNT_GRDT.PO_ITEM_UUID
		               FROM GR_ITEM ALL_GRDT
		              INNER JOIN GR_ITEM CRNT_GRDT
		                 ON CRNT_GRDT.TEN_ID      = ALL_GRDT.TEN_ID
		                AND CRNT_GRDT.PO_NO       = ALL_GRDT.PO_NO
		                AND CRNT_GRDT.PO_LNO      = ALL_GRDT.PO_LNO
		                AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		                AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND CRNT_GRDT.STS        != 'D'
		              WHERE ALL_GRDT.TEN_ID      = #{g.tenant}
		                AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD' /* GC: 검수완료 */
		                AND ALL_GRDT.STS        != 'D'
		              GROUP BY ALL_GRDT.TEN_ID
		                     , ALL_GRDT.PO_NO
		                     , ALL_GRDT.PO_LNO
		                     , CRNT_GRDT.PO_ITEM_UUID
		            ) B
		    ON A.TEN_ID     = B.TEN_ID
		   AND A.PO_ITEM_UUID = B.PO_ITEM_UUID
	</select>
	<update id="approveApprovalGrPoDt">
		/* po-status.approveApprovalGrPoDt: 검수등록(입고,GR) 결재승인  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = CASE WHEN PO_QTY = #{p.sum_gr_qty} THEN 'GR_CMPLD'  /* GC: 검수완료 */
		                          ELSE 'GR_PRGSG'  /* GP: 검수진행 */
		                      END
		 WHERE TEN_ID     = #{g.tenant}
		   AND PO_ITEM_UUID = #{p.po_item_uuid}
	</update>
	<!-- bypassApprovalGr -->
	<select id="selectBypassApprovalGrPoDt" resultType="map">
		/* po-status.selectBypassApprovalGrPoDt */
		SELECT B.*
		  FROM PO_ITEM A
		 INNER JOIN (
		             SELECT ALL_GRDT.TEN_ID
		                  , ALL_GRDT.PO_NO
		                  , ALL_GRDT.PO_LNO
		                  , SUM(CASE WHEN ALL_GRDT.GR_QTY IS NULL THEN 0 ELSE ALL_GRDT.GR_QTY END) AS SUM_GR_QTY  /* GR 누적수량*/
		                  , CRNT_GRDT.PO_ITEM_UUID
		               FROM GR_ITEM ALL_GRDT
		              INNER JOIN GR_ITEM CRNT_GRDT
		                 ON CRNT_GRDT.TEN_ID      = ALL_GRDT.TEN_ID
		                AND CRNT_GRDT.PO_NO       = ALL_GRDT.PO_NO
		                AND CRNT_GRDT.PO_LNO      = ALL_GRDT.PO_LNO
		                AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		                AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND CRNT_GRDT.STS        != 'D'
		              WHERE ALL_GRDT.TEN_ID      = #{g.tenant}
		                AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD' /* GC: 검수완료 */
		                AND ALL_GRDT.STS        != 'D'
		              GROUP BY ALL_GRDT.TEN_ID
		                     , ALL_GRDT.PO_NO
		                     , ALL_GRDT.PO_LNO
		                     , CRNT_GRDT.PO_ITEM_UUID
		            ) B
		    ON A.TEN_ID     = B.TEN_ID
		   AND A.PO_ITEM_UUID = B.PO_ITEM_UUID
	</select>
	<update id="bypassApprovalGrPoDt">
		/* po-status.bypassApprovalGrPoDt: 검수등록(입고,GR) 승인처리  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = CASE WHEN PO_QTY = #{p.sum_gr_qty} THEN 'GR_CMPLD'  /* GC: 검수완료 */
		                          ELSE 'GR_PRGSG'  /* GP: 검수진행 */
		                      END
		 WHERE TEN_ID     = #{g.tenant}
		   AND PO_ITEM_UUID = #{p.po_item_uuid}
	</update>
	<!-- rejectRequestAsn -->
	<update id="rejectRequestAsnPoDt">
		/* po-status.rejectRequestAsnPoDt: 납품예정 반려  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID  IN (
		                       SELECT PO_ITEM_UUID
		                         FROM ASN_ITEM
		                        WHERE TEN_ID = #{g.tenant}
		                          AND ASN_UUID  = #{p.asn_uuid}
		                      )
	</update>
	<!-- cancelGr -->
	<update id="cancelGrPoDt">
		/* po-status.cancelGrPoDt: 검수승인(입고,GR) 취소  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		     , PO_CMPLD_YN = 'N'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID  IN (
			 SELECT A.PO_ITEM_UUID
			 FROM PO_ITEM A
			 INNER JOIN (
				 SELECT B.PO_NO
				      , B.PO_LNO
					  , MAX(C.PO_REVNO) AS MAX_PO_REVNO
				 FROM GR_ITEM B
				 INNER JOIN PO_ITEM C
				 	ON C.PO_NO = B.PO_NO
				 	AND C.PO_LNO = B.PO_LNO
				 WHERE B.TEN_ID = #{g.tenant}
				   AND B.GR_UUID = #{p.gr_uuid}
				   AND C.TEN_ID = #{g.tenant}
				   AND C.STS != 'D'
				 GROUP BY B.PO_NO, B.PO_LNO
			 ) X
			 ON A.PO_NO = X.PO_NO
			  AND A.PO_LNO = X.PO_LNO
			  AND A.PO_REVNO = X.MAX_PO_REVNO
			 WHERE A.TEN_ID = #{g.tenant}
			  AND A.STS != 'D'
		   )
	</update>
	<!-- cancelGr -->
	<update id="cancelGrPoHd">
		/* po-status.cancelGrPoHd: 검수승인(입고,GR) 취소  */
		UPDATE PO
		SET PO_CMPLD_YN = 'N'
		WHERE TEN_ID = #{g.tenant}
		  AND PO_UUID IN (
				SELECT A.PO_UUID
				FROM PO A
				INNER JOIN (
					SELECT B.PO_NO
						   , MAX(C.PO_REVNO) AS MAX_PO_REVNO
					FROM GR_ITEM B
					INNER JOIN PO C
					    ON C.PO_NO = B.PO_NO
					WHERE B.TEN_ID = #{g.tenant}
					  AND B.GR_UUID = #{p.gr_uuid}
					  AND C.TEN_ID = #{g.tenant}
					  AND C.STS != 'D'
					GROUP BY B.PO_NO
				) X
				ON A.PO_NO = X.PO_NO
				AND A.PO_REVNO = X.MAX_PO_REVNO
				WHERE A.TEN_ID = #{g.tenant}
				  AND A.STS != 'D'
        	)
	</update>
	<!-- saveDraftServiceAsn -->
	<update id="saveDraftServiceAsnPoHd">
		/* po-status.saveDraftServiceAsnPoHd: 기성요청 임시저장 (협력사) */
		UPDATE PO
		   SET VD_GR_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = (
		                 SELECT PO_UUID
		                   FROM ASN
		                  WHERE TEN_ID = #{g.tenant}
		                    AND ASN_UUID  = #{p.asn_uuid}
		                )
	</update>
	<!-- deleteServiceAsn -->
	<select id="findListAsnHdByDeleteAsnPo" resultType="map">
		/* po-status.findListAsnHdByDeleteAsnPo */
		SELECT PO_UUID
		  FROM ASN
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
		   AND STS   != 'D'
		 UNION ALL
		SELECT PO_UUID
		  FROM GR
		 WHERE TEN_ID      = #{g.tenant}
		   AND PO_UUID       = #{p.po_uuid}
		   AND GR_STS_CCD = 'PP_CMPLD'
		   AND STS        !='D'
	</select>
	<update id="deleteServiceAsnPoHdByAllAsnDelete">
		/* po-status.deleteServiceAsnPoHdByAllAsnDelete */
		UPDATE PO
		   SET VD_GR_STS_CCD = NULL
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="deleteServiceAsnPoHd">
		/* po-status.deleteServiceAsnPoHd */
		UPDATE PO
		   SET VD_GR_STS_CCD = 'PP_PRTL_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- requestServiceAsn -->
	<update id="requestServiceAsnPoHd">
		/* po-status.requestServiceAsnPoHd: 기성요청(협력사) */
		UPDATE PO
		   SET GR_STS_CCD = 'PP_APVD_WTG'
		     , VD_GR_STS_CCD = 'PP_WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM ASN
		                 WHERE TEN_ID = #{g.tenant}
		                   AND ASN_UUID  = #{p.asn_uuid}
		               )
	</update>
	<update id="requestServiceAsnPoDt">
		/* po-status.requestServiceAsnPoDt: 기성요청(협력사)  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID IN (
		                      SELECT PO_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- saveDraftServiceGr -->
	<update id="saveDraftServiceGrPoHd">
		/* po-status.saveDraftServicePoHd: 기성등록(입고,GR) 임시저장  */
		UPDATE PO
		   SET GR_STS_CCD = 'CRNG'
		     , VD_GR_STS_CCD = 'PP_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM GR
		                 WHERE TEN_ID = #{g.tenant}
		                   AND GR_UUID  = #{p.gr_uuid}
		               )
	</update>
	<update id="saveDraftServiceGrPoDt">
		/* po-status.saveDraftServiceGrPoDt: 기성등록(입고,GR) 임시저장  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID IN (
		                      SELECT PO_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID  = #{p.gr_uuid}
		                     )
	</update>
	<!-- deleteServiceGr -->
	<select id="selectServiceGrPoHd" resultType="map">
		/* po-status.selectServiceGrPoHd */
		SELECT B.*
		     , #{p.asn_uuid} AS ASN_UUID
		  FROM PO A
		 INNER JOIN (
		             SELECT POHD.TEN_ID
		                  , POHD.PO_UUID
		                  , POHD.PO_NO
		                  , COALESCE((SELECT SUM(GRHD.GR_AMT)
		                                FROM GR GRHD
		                               WHERE GRHD.TEN_ID      = POHD.TEN_ID
		                                 AND GRHD.PO_NO       = POHD.PO_NO
		                                 AND GRHD.GR_STS_CCD = 'PP_CMPLD' /* 검수완료 */
		                                 AND GRHD.STS        != 'D'
		                             ),0) AS GR_TTL_AMT
		               FROM PO POHD
		              WHERE POHD.TEN_ID = #{g.tenant}
		                AND POHD.PO_UUID  = (
		                                   SELECT PO_UUID
		                                     FROM GR
		                                    WHERE TEN_ID = #{g.tenant}
		                                      AND GR_UUID  = #{p.gr_uuid}
		                                  )
		            ) B
		    ON A.TEN_ID = B.TEN_ID
		   AND A.PO_UUID  = B.PO_UUID
	</select>
	<update id="deleteServiceGrPoHd">
		/* po-status.deleteServiceGrPoHd: 기성등록 임시저장 삭제  */
		UPDATE PO
		   SET VD_GR_STS_CCD = <choose>
		                            <when test="p.asn_uuid != null and p.asn_uuid != ''">
		                                'PP_WTG' /* S: 기성승인대기 */
		                            </when>
		                            <otherwise>
		                                CASE WHEN #{p.gr_ttl_amt} &gt; 0 THEN 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                                     ELSE NULL
		                                 END
		                            </otherwise>
		                        </choose>
		     , GR_STS_CCD = <choose>
		                         <when test="p.asn_uuid != null and p.asn_uuid != ''">
		                             'PP_APVD_WTG' /* S: 기성승인대기 */
		                         </when>
		                         <otherwise>
		                             CASE WHEN #{p.gr_ttl_amt} &gt; 0 THEN 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                                  ELSE NULL
		                              END
		                         </otherwise>
		                     </choose>
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<!-- submitApprovalServiceGr -->
	<update id="submitApprovalServiceGrPoHd">
		/* po-status.submitApprovalServiceGrPoHd: 기성등록(입고,GR) 결재상신  */
		UPDATE PO
		   SET GR_STS_CCD = 'APVL_REQ'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM GR
		                 WHERE TEN_ID = #{g.tenant}
		                   AND GR_UUID  = #{p.gr_uuid}
		               )
	</update>
	<!-- approveApprovalServiceGr -->
	<select id="selectApprovalServiceGrPoHd" resultType="map">
		/* po-status.selectApprovalServiceGrPoHd */
		SELECT B.*
		  FROM PO A
		 INNER JOIN (
		             SELECT ALL_GRHD.TEN_ID
		                  , ALL_GRHD.PO_NO
		                  , SUM(CASE WHEN ALL_GRHD.GR_AMT IS NULL THEN 0 ELSE ALL_GRHD.GR_AMT END) AS GR_TTL_AMT /* 승인금액 */
		                  , CRNT_GRHD.PO_UUID
		               FROM GR ALL_GRHD
		              INNER JOIN GR CRNT_GRHD
		                 ON CRNT_GRHD.TEN_ID = ALL_GRHD.TEN_ID
		                AND CRNT_GRHD.PO_NO  = ALL_GRHD.PO_NO
		                AND CRNT_GRHD.GR_UUID  = #{p.gr_uuid}
		              WHERE ALL_GRHD.TEN_ID      = #{g.tenant}
		                AND ALL_GRHD.GR_STS_CCD = 'PP_CMPLD'
		                AND ALL_GRHD.STS        != 'D'
		              GROUP BY ALL_GRHD.TEN_ID
		                     , ALL_GRHD.PO_NO
		                     , CRNT_GRHD.PO_UUID
		            ) B
		    ON A.TEN_ID = B.TEN_ID
		   AND A.PO_UUID  = B.PO_UUID
	</select>
	<update id="approveApprovalServiceGrPoHd">
		/* po-status.approveApprovalServiceGrPoHd: 기성등록(입고,GR) 결재승인 */
		UPDATE PO
		   SET VD_GR_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.gr_ttl_amt} THEN 'PP_CMPLD' /* C: 기성완료 */
		                             ELSE 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                         END
		     , GR_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.gr_ttl_amt} THEN 'PP_CMPLD' /* C: 기성완료 */
		                          ELSE 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<select id="selectApprovalServiceGrPoDt" resultType="map">
		/* po-status.selectApprovalServiceGrPoDt */
		SELECT B.*
		  FROM PO_ITEM A
		 INNER JOIN (
		             SELECT ALL_GRDT.TEN_ID
		                  , ALL_GRDT.PO_NO
		                  , ALL_GRDT.PO_LNO
		                  , SUM(CASE WHEN ALL_GRDT.GR_AMT IS NULL THEN 0 ELSE ALL_GRDT.GR_AMT END) AS SUM_GR_AMT /* GR 누적금액 */
		                  , CRNT_GRDT.PO_ITEM_UUID
		               FROM GR_ITEM ALL_GRDT
		              INNER JOIN GR_ITEM CRNT_GRDT
		                 ON CRNT_GRDT.TEN_ID      = ALL_GRDT.TEN_ID
		                AND CRNT_GRDT.PO_NO       = ALL_GRDT.PO_NO
		                AND CRNT_GRDT.PO_LNO      = ALL_GRDT.PO_LNO
		                AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		                AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND CRNT_GRDT.STS        != 'D'
		              WHERE ALL_GRDT.TEN_ID      = #{g.tenant}
		                AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND ALL_GRDT.STS        != 'D'
		              GROUP BY ALL_GRDT.TEN_ID
		                     , ALL_GRDT.PO_NO
		                     , ALL_GRDT.PO_LNO
		                     , CRNT_GRDT.PO_ITEM_UUID
		            ) B
		    ON A.TEN_ID     = B.TEN_ID
		   AND A.PO_ITEM_UUID = B.PO_ITEM_UUID
	</select>
	<update id="approveApprovalServiceGrPoDt">
		/* po-status.approveApprovalServiceGrPoDt: 기성등록(입고,GR) 결재승인 */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.sum_gr_amt} THEN 'GR_CMPLD'  /* GC: 기성완료 */
		                          ELSE 'GR_PRGSG' /* GP: 기성진행 */
		                      END
		 WHERE TEN_ID     = #{g.tenant}
		   AND PO_ITEM_UUID = #{p.po_item_uuid}
	</update>
	<!-- rejectApprovalServiceGr -->
	<update id="rejectApprovalServiceGrPoHd">
		/* po-status.rejectApprovalServiceGrPoHd: 기성등록(입고,GR) 결재반려  */
		UPDATE PO
		   SET GR_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = (
		                 SELECT PO_UUID
		                   FROM GR
		                  WHERE TEN_ID = #{g.tenant}
		                    AND GR_UUID  = #{p.gr_uuid}
		                )
	</update>
	<!-- cancelApprovalServiceGr -->
	<update id="cancelApprovalServiceGrPoHd">
		/* po-status.cancelApprovalServiceGrPoHd: 기성등록(입고,GR) 결재취소  */
		UPDATE PO
		   SET GR_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM GR
		                 WHERE TEN_ID = #{g.tenant}
		                   AND GR_UUID  = #{p.gr_uuid}
		               )
	</update>
	<!-- bypassApprovalServiceGr -->
	<select id="selectBypassApprovalServiceGrPoHd" resultType="map">
		/* po-status.selectBypassApprovalServiceGrPoHd */
		SELECT B.*
		  FROM PO A
		 INNER JOIN (
		             SELECT ALL_GRHD.TEN_ID
		                  , ALL_GRHD.PO_NO
		                  , SUM(CASE WHEN ALL_GRHD.GR_AMT IS NULL THEN 0 ELSE ALL_GRHD.GR_AMT END) AS GR_TTL_AMT /* 승인금액 */
		                  , CRNT_GRHD.PO_UUID
		               FROM GR ALL_GRHD
		              INNER JOIN GR CRNT_GRHD
		                 ON CRNT_GRHD.TEN_ID = ALL_GRHD.TEN_ID
		                AND CRNT_GRHD.PO_NO  = ALL_GRHD.PO_NO
		                AND CRNT_GRHD.GR_UUID  = #{p.gr_uuid}
		              WHERE ALL_GRHD.TEN_ID      = #{g.tenant}
		                AND ALL_GRHD.GR_STS_CCD = 'PP_CMPLD'
		                AND ALL_GRHD.STS        != 'D'
		              GROUP BY ALL_GRHD.TEN_ID, ALL_GRHD.PO_NO, CRNT_GRHD.PO_UUID
		            ) B
		    ON A.TEN_ID = B.TEN_ID
		   AND A.PO_UUID  = B.PO_UUID
	</select>
	<update id="bypassApprovalServiceGrPoHd">
		/* po-status.bypassApprovalServiceGrPoHd: 기성등록(입고,GR) 승인처리  */
		UPDATE PO
		   SET VD_GR_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.gr_ttl_amt} THEN 'PP_CMPLD' /* C: 기성완료 */
		                             ELSE 'PP_PRTL_CMPLD'      /* Z: 기성부분완료 */
		                         END
		     , GR_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.gr_ttl_amt} THEN 'PP_CMPLD' /* C: 기성완료 */
		                          ELSE 'PP_PRTL_CMPLD'      /* Z: 기성부분완료 */
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<select id="selectBypassApprovalServiceGrPoDt" resultType="map">
		/* po-status.selectBypassApprovalServiceGrPoDt */
		SELECT B.*
		  FROM PO_ITEM A
		 INNER JOIN (
		             SELECT ALL_GRDT.TEN_ID
		                  , ALL_GRDT.PO_NO
		                  , ALL_GRDT.PO_LNO
		                  , SUM(CASE WHEN ALL_GRDT.GR_AMT IS NULL THEN 0 ELSE ALL_GRDT.GR_AMT END) AS SUM_GR_AMT /* GR 누적금액*/
		                  , CRNT_GRDT.PO_ITEM_UUID
		               FROM GR_ITEM ALL_GRDT
		              INNER JOIN GR_ITEM CRNT_GRDT
		                 ON CRNT_GRDT.TEN_ID      = ALL_GRDT.TEN_ID
		                AND CRNT_GRDT.PO_NO       = ALL_GRDT.PO_NO
		                AND CRNT_GRDT.PO_LNO      = ALL_GRDT.PO_LNO
		                AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		                AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND CRNT_GRDT.STS        != 'D'
		              WHERE ALL_GRDT.TEN_ID      = #{g.tenant}
		                AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		                AND ALL_GRDT.STS        != 'D'
		              GROUP BY ALL_GRDT.TEN_ID
		                     , ALL_GRDT.PO_NO
		                     , ALL_GRDT.PO_LNO
		                     , CRNT_GRDT.PO_ITEM_UUID
		            ) B
		    ON A.TEN_ID     = B.TEN_ID
		   AND A.PO_ITEM_UUID = B.PO_ITEM_UUID
	</select>
	<update id="bypassApprovalServiceGrPoDt">
		/* po-status.bypassApprovalServiceGrPoDt: 기성등록(입고,GR) 승인처리*/
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.sum_gr_amt} THEN 'GR_CMPLD'  /* GC: 기성완료 */
		                          ELSE 'GR_PRGSG'       /* GP: 기성진행 */
		                      END
		 WHERE TEN_ID     = #{g.tenant}
		   AND PO_ITEM_UUID = #{p.po_item_uuid}
	</update>
	<!-- rejectRequestServiceAsn -->
	<update id="rejectRequestServiceAsnPoHd">
		/* po-status.rejectRequestServiceAsnPoHd: 기성요청 반려  */
		UPDATE PO
		   SET GR_STS_CCD = 'PP_RET'
		     , VD_GR_STS_CCD = 'PP_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM ASN
		                 WHERE TEN_ID = #{g.tenant}
		                   AND ASN_UUID  = #{p.asn_uuid}
		               )
	</update>
	<update id="rejectRequestServiceAsnPoDt">
		/* po-status.rejectRequestServiceAsnPoDt: 기성요청 반려  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID IN (
		                      SELECT PO_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- cancelServiceGr -->
	<update id="cancelServiceGrPoHdPrePay">
		/* po-status.cancelServiceGrPoHdPrePay: 기성승인(입고,GR) 취소 */
		UPDATE PO
		   SET GR_STS_CCD    = 'CRNG'
		     , VD_GR_STS_CCD = NULL
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = (
		                SELECT PO_UUID
		                  FROM GR
		                 WHERE TEN_ID = #{g.tenant}
		                   AND GR_UUID  = #{p.gr_uuid}
		               )
	</update>
	<select id="selectCancelServiceGrPoHd" resultType="map">
		/* po-status.selectCancelServiceGrPoHd */
		SELECT B.*
		  FROM PO A
		 INNER JOIN (
		             SELECT TEN_ID
		                  , PO_UUID
		                  , COALESCE((SELECT SUM(A.GR_AMT)
		                                FROM GR A
		                               WHERE A.TEN_ID = T.TEN_ID
		                                 AND A.PO_UUID = T.PO_UUID
		                                 AND A.GR_STS_CCD = 'PP_CMPLD'),0
		                            ) AS GR_TTL_AMT
		               FROM GR T
		              WHERE TEN_ID = #{g.tenant}
		                AND GR_UUID  = #{p.gr_uuid}
		            ) B
		    ON A.TEN_ID = B.TEN_ID
		   AND A.PO_UUID  = B.PO_UUID
	</select>
	<update id="cancelServiceGrPoHd">
		/* po-status.cancelServiceGrPoHd : 기성승인(입고,GR) 취소 */
		/* GR_STS_CCD 변경은 로직에서 처리 ('C', 'Z', '')*/
		UPDATE PO
		   SET GR_STS_CCD = CASE WHEN #{p.gr_ttl_amt} &gt; 0 THEN 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                          ELSE 'PP_CNCL' /* D: 기성승인 취소 */
		                      END
		     , VD_GR_STS_CCD = CASE WHEN #{p.gr_ttl_amt} &gt; 0 THEN 'PP_PRTL_CMPLD' /* Z: 기성부분완료 */
		                             ELSE 'PP_CNCL' /* D: 기성승인 취소 */
		                         END
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
	</update>
	<update id="cancelServiceGrPoDt">
		/* po-status.cancelServiceGrPoDt: 기성승인(입고,GR) 취소  */
		UPDATE PO_ITEM
		   SET PO_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_ITEM_UUID IN (
		                      SELECT PO_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID  = #{p.gr_uuid}
		                         AND GR_AMT &gt; 0    /* 기성금액을 입력하지 않았던 품목 중 'GC'인 품목이 존재할 수 있으므로 */
		                     )
	</update>
	<select id="findListReferenceDocFromPO" resultType="map">
/* po-status.findListReferenceDocFromPO */
		SELECT #{p.sortkey}                                        AS SORTKEY
	              , 'PO'                                        AS APP_TYPE
	              , HD.PO_UUID                                    AS APP_ID
	              , HD.PO_NO                                    AS DOC_NO
	              , HD.PO_REVNO                                   AS DOC_REV
	              , HD.PO_STS_CCD                              AS PROG_STS
	              , ( SELECT DTLCD_NM
                        FROM DTLCD_MULTLANG
                       WHERE TEN_ID  = HD.TEN_ID
                         AND CCD  = 'P038'
                         AND DTLCD  = HD.PO_STS_CCD
                         AND LANG_CCD = #{g.locale} )            AS STS_NM
	              , HD.PO_TIT                                   AS DOC_TITLE
	              , HD.PO_CHG_TYP_CCD                                 AS MOD_TYP
	              , HD.PO_CMPLD_YN                               AS COMP_YN
	           FROM PO HD
	          WHERE HD.TEN_ID = #{g.tenant}
	            AND HD.PO_NO  = #{p.po_no}
	            AND STS      != 'D'
	</select>
	<select id="findListReferenceDocFromPOByRfxItemIds" resultType="map">
/* po-status.findListReferenceDocFromPOByRfxItemIds */
		SELECT #{p.sortkey}                                         AS SORTKEY
		          , 'PO'                                         AS APP_TYPE
		          , HD.PO_UUID                                     AS APP_ID
		          , HD.PO_NO                                     AS DOC_NO
		          , HD.PO_REVNO                                    AS DOC_REV
		          , HD.PO_STS_CCD                               AS PROG_STS
		          , ( SELECT DTLCD_NM
                        FROM DTLCD_MULTLANG
                       WHERE TEN_ID  = HD.TEN_ID
                         AND CCD  = 'P038'
                         AND DTLCD  = HD.PO_STS_CCD
                         AND LANG_CCD = #{g.locale} )            AS STS_NM
		          , HD.PO_TIT                                    AS DOC_TITLE
		          , HD.PO_CHG_TYP_CCD                                   AS MOD_TYP
		          , HD.PO_CMPLD_YN                                AS COMP_YN
		       FROM PO HD
		      WHERE HD.TEN_ID = #{g.tenant}
		        AND HD.PO_UUID IN ( SELECT PO_UUID
		                            FROM PO_ITEM
		                           WHERE TEN_ID      = #{g.tenant}
		                             AND RFX_ITEM_UUID IN
		                                 <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
										   #{rfx_item_uuid}
									   </foreach>
		                             AND STS         != 'D'
		                        )
	</select>
	<select id="findListReferenceDocFromPOByPoItemIds" resultType="map">
/* po-status.findListReferenceDocFromPOByPoItemIds */
		SELECT #{p.sortkey}                                         AS SORTKEY
		          , 'PO'                                         AS APP_TYPE
		          , HD.PO_UUID                                     AS APP_ID
		          , HD.PO_NO                                     AS DOC_NO
		          , HD.PO_REVNO                                    AS DOC_REV
		          , HD.PO_STS_CCD                               AS PROG_STS
		          , ( SELECT DTLCD_NM
                        FROM DTLCD_MULTLANG
                       WHERE TEN_ID  = HD.TEN_ID
                         AND CCD  = 'P038'
                         AND DTLCD  = HD.PO_STS_CCD
                         AND LANG_CCD = #{g.locale} )            AS STS_NM
		          , HD.PO_TIT                                    AS DOC_TITLE
		          , HD.PO_CHG_TYP_CCD                                   AS MOD_TYP
		          , HD.PO_CMPLD_YN                                AS COMP_YN
		       FROM PO HD
		      WHERE HD.TEN_ID = #{g.tenant}
		        AND HD.PO_UUID IN ( SELECT PO_UUID
	                                FROM PO_ITEM
	                               WHERE TEN_ID      = #{g.tenant}
	                                 AND PO_ITEM_UUID IN
	                                     <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
										   #{po_item_uuid}
									   </foreach>
	                                 AND STS        != 'D'
	                            )
	</select>
	<select id="findListReferenceDocFromPOByPrItemIds" resultType="map">
/* po-status.findListReferenceDocFromPOByPrItemIds */
		SELECT #{p.sortkey}                                         AS SORTKEY
		          , 'PO'                                         AS APP_TYPE
		          , HD.PO_UUID                                     AS APP_ID
		          , HD.PO_NO                                     AS DOC_NO
		          , HD.PO_REVNO                                    AS DOC_REV
		          , HD.PO_STS_CCD                               AS PROG_STS
		          , ( SELECT DTLCD_NM
                        FROM DTLCD_MULTLANG
                       WHERE TEN_ID  = HD.TEN_ID
                         AND CCD  = 'P038'
                         AND DTLCD  = HD.PO_STS_CCD
                         AND LANG_CCD = #{g.locale} )            AS STS_NM
		          , HD.PO_TIT                                    AS DOC_TITLE
		          , HD.PO_CHG_TYP_CCD                                   AS MOD_TYP
		          , HD.PO_CMPLD_YN                                AS COMP_YN
		       FROM PO HD
		      WHERE HD.TEN_ID = #{g.tenant}
		        AND HD.PO_UUID IN ( SELECT PO_UUID
	                                FROM PO_ITEM
	                               WHERE TEN_ID      = #{g.tenant}
	                                 AND PR_ITEM_UUID IN
	                                     <foreach close=")" collection="p.pr_item_uuids" item="pr_item_uuid" open="(" separator=",">
										   #{pr_item_uuid}
									   </foreach>
	                                 AND STS        != 'D'
	                            )
	</select>
	<select id="findListReferenceIds" resultType="map">
	/* po-status.findListReferenceIds */
		SELECT PR_ITEM_UUID
		     , RFX_ITEM_UUID
		     , PURC_CNTR_ITEM_UUID
		     , PO_ITEM_UUID
		  FROM PO_ITEM
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID  = #{p.po_uuid}
		   AND STS   != 'D'
	</select>
	<update id="createEcntr">
	/* po-status.createEcntr: 전자계약 생성시 상태 업데이트 */
	UPDATE PO
	   SET CNTR_STS_CCD = #{p.cntr_sts_ccd}
	     , CNTR_UUID = #{p.cntr_uuid}
	 WHERE TEN_ID = #{g.tenant}
	   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="terminateEcntr">
	/* po-status.terminateEcntr: 전자계약 해지시 상태 업데이트 */
	UPDATE PO
	   SET CNTR_STS_CCD = 'TRMN'
	 WHERE TEN_ID = #{g.tenant}
	   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="deleteEcntr">
	/* po-status.deleteEcntr: 전자계약 삭제시 상태 업데이트 */
	UPDATE PO
	   SET CNTR_STS_CCD = 'CRNG'
	     , CNTR_UUID = NULL
	 WHERE TEN_ID = #{g.tenant}
	   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="updateCreatePoPr">
/* po-status.updateCreatePoPr */
		UPDATE PO
		   SET PO_TYP_CCD = 'TLAUTOPO'
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<select id="findPoReqRcptByPo" resultType="map">
		SELECT PO_UUID
		     , PO_REQ_RCPT_UUID
		  FROM PO
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</select>
	<select id="findListPoReqItemRcptByPo" resultType="map">
		SELECT PO_ITEM.PO_ITEM_UUID
		     , PO_ITEM.PO_REQ_ITEM_RCPT_UUID
		     , PO_ITEM.PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
		  FROM PO
		 INNER JOIN PO_ITEM
		    ON PO_ITEM.TEN_ID = PO.TEN_ID
		   AND PO_ITEM.PO_UUID = PO.PO_UUID
		 WHERE PO.TEN_ID = #{g.tenant}
		   AND PO.PO_UUID = #{p.po_uuid}
	</select>
	<update id="updatePoReqRcptBySaveDraftPo">
		UPDATE PO_REQ_RCPT
		   SET RCPT_STS_CCD = 'RCPT'
		     , PRGS_STS_CCD = 'PRGSG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<update id="updatePoReqItemRcptQtaBySaveDraftPo">
		UPDATE PO_REQ_ITEM_RCPT_QTA_ALOC
		   SET PRGS_STS_CCD = 'PRGSG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC_UUID = #{p.po_req_item_rcpt_qta_aloc_uuid}
	</update>
	<update id="updatePoReqItemRcptBySaveDraftPo">
		UPDATE PO_REQ_ITEM_RCPT
		   SET RCPT_STS_CCD = 'RCPT'
		     , PRGS_STS_CCD = 'PRGSG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<update id="updatePoReqRcptByDeletePo">
		UPDATE PO_REQ_RCPT
		   SET PRGS_STS_CCD = 'WTG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<update id="deletePoReqItemRcptQtaByDeletePo">
		DELETE
		  FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC_UUID = #{p.po_req_item_rcpt_qta_aloc_uuid}
	</update>
	<update id="updatePoReqItemRcptByDeletePo">
		UPDATE PO_REQ_ITEM_RCPT
		   SET PRGS_STS_CCD = 'WTG'
		     , CNTR_UUID = null
		     , CNTR_NO = null
		     , CNTR_REVNO = null
		     , PURC_CNTR_UUID = null
		     , PURC_CNTR_INFO_UUID = null
		     , PURC_CNTR_ITEM_UUID = null
		     , PURC_CNTR_ITEM_LNO = null
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<update id="updatePoByRequestChgContractDelete">
		UPDATE PO
		   SET PO_STS_CCD = 'APVD'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="updatePoByRequestChgContract">
		UPDATE PO
		   SET PO_STS_CCD = 'CNTR_CHG_REQ'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="updatePoByRequestTrmnContract">
		UPDATE PO
		   SET PO_STS_CCD = 'CNTR_TRMN_REQ'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_UUID = #{p.po_uuid}
	</update>
	<update id="updatePoReqRcptCompleteByCompletePo">
		UPDATE PO_REQ_RCPT
		   SET PRGS_STS_CCD = 'CMPLD'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<update id="updatePoReqItemRcptQtaCompleteByCompletePo">
		UPDATE PO_REQ_ITEM_RCPT_QTA_ALOC
		   SET PRGS_STS_CCD = 'CMPLD'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC_UUID = #{p.po_req_item_rcpt_qta_aloc_uuid}
	</update>
	<update id="updatePoReqItemRcptCompleteByCompletePo">
		UPDATE PO_REQ_ITEM_RCPT
		   SET PRGS_STS_CCD = 'CMPLD'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
</mapper>
