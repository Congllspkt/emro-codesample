<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gr-status">
	<!-- saveDraftGr -->
	<update id="saveDraftGrHd">
		/* gr-status.saveDraftGrHd: 검수등록(입고,GR) 임시저장 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="saveDraftGrDt">
		/* gr-status.saveDraftGrDt: 검수등록(입고,GR) 임시저장 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="submitGrEval">
		UPDATE GR
		   SET GR_STS_CCD = 'EVAL_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID = #{p.gr_uuid}
	</update>
	<update id="completeGrEval">
		UPDATE GR
		   SET GR_STS_CCD = 'EVAL_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID = #{p.gr_uuid}
	</update>
	<!-- submitApprovalGr -->
	<update id="submitApprovalGrHd">
		/* gr-status.submitApprovalGrHd: 검수등록(입고,GR) 결재상신 */
		UPDATE GR
		   SET GR_STS_CCD = 'APVL_REQ'
		     , APVL_STS_CCD = 'APVL_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- approveApprovalGr -->
	<update id="approveApprovalGrHd">
		/* gr-status.approveApprovalGrHd: 검수등록(입고,GR) 결재승인 */
		UPDATE GR
		   SET GR_STS_CCD = 'GR_CMPLD'
		     , APVL_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="approveApprovalGrDt">
		/* gr-status.approveApprovalGrDt: 검수등록(입고,GR) 결재승인 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- rejectApprovalGr -->
	<update id="rejectApprovalGrHd">
		/* gr-status.rejectApprovalGrHd: 검수등록(입고,GR) 결재반려 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- cancelApprovalGr -->
	<update id="cancelApprovalGrHd">
		/* gr-status.cancelApprovalGrHd: 검수등록(입고,GR) 결재취소 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- bypassApprovalGr -->
	<update id="bypassApprovalGrHd">
		/* gr-status.bypassApprovalGrHd: 검수등록(입고,GR) 승인처리 */
		UPDATE GR
		   SET GR_STS_CCD = 'GR_CMPLD'
		     , APVL_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="bypassApprovalGrDt">
		/* gr-status.bypassApprovalGrDt: 검수등록(입고,GR) 승인처리 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- cancelGr -->
	<update id="cancelGrHd">
		/* gr-status.cancelGrHd: 검수승인(입고,GR) 취소 */
		UPDATE GR
		   SET GR_STS_CCD = 'GR_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="cancelGrDt">
		/* gr-status.cancelGrDt: 검수승인(입고,GR) 취소 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- saveDraftServiceGr -->
	<update id="saveDraftServiceGrHd">
		/* gr-status.saveDraftServiceHd: 기성등록(입고,GR) 임시저장 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="saveDraftServiceGrDt">
		/* gr-status.saveDraftServiceGrDt: 기성등록(입고,GR) 임시저장 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- submitApprovalServiceGr -->
	<update id="submitApprovalServiceGrHd">
		/* gr-status.submitApprovalServiceGrHd: 기성등록(입고,GR) 결재상신 */
		UPDATE GR
		   SET GR_STS_CCD = 'APVL_REQ'
		     , APVL_STS_CCD = 'APVL_PRGSG'
		WHERE TEN_ID = #{g.tenant}
		  AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- approveApprovalServiceGr -->
	<update id="approveApprovalServiceGrHd">
		/* gr-status.approveApprovalServiceGrHd: 기성등록(입고,GR) 결재승인 */
		UPDATE GR
		   SET GR_STS_CCD = 'PP_CMPLD'
		     , APVL_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="approveApprovalServiceGrDt">
		/* gr-status.approveApprovalServiceGrDt: 기성등록(입고,GR) 결재승인 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- rejectApprovalServiceGr -->
	<update id="rejectApprovalServiceGrHd">
		/* gr-status.rejectApprovalServiceGrHd: 기성등록(입고,GR) 결재반려 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- cancelApprovalServiceGr -->
	<update id="cancelApprovalServiceGrHd">
		/* gr-status.cancelApprovalServiceGrHd: 기성등록(입고,GR) 결재취소 */
		UPDATE GR
		   SET GR_STS_CCD = 'CRNG'
		     , APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- bypassApprovalServiceGr -->
	<update id="bypassApprovalServiceGrHd">
		/* gr-status.bypassApprovalServiceGrHd: 기성등록(입고,GR) 승인처리 */
		UPDATE GR
		   SET GR_STS_CCD = 'PP_CMPLD'
		     , APVL_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="bypassApprovalServiceGrDt">
		/* gr-status.bypassApprovalServiceGrDt: 기성등록(입고,GR) 승인처리 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = 'GR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<!-- cancelServiceGr -->
	<update id="cancelServiceGrHd">
		/* gr-status.cancelServiceGrHd: 기성승인(입고,GR) 취소 */
		UPDATE GR
		   SET GR_STS_CCD = <choose>
		                         <when test="p.apymt_yn != null and p.apymt_yn ==&quot;Y&quot;">
		                             'CRNG'
		                         </when>
		                         <otherwise>
		                             'PP_CNCL'
		                         </otherwise>
		                     </choose>
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<update id="cancelServiceGrDt">
		/* gr-status.cancelServiceGrDt: 기성승인(입고,GR) 취소 */
		UPDATE GR_ITEM
		   SET GR_ITEM_STS_CCD = <choose>
		                         <when test="p.apymt_yn != null and p.apymt_yn ==&quot;Y&quot;">
		                             'GR_PRGSG'
		                         </when>
		                         <otherwise>
		                             'GR_CNCL'
		                         </otherwise>
		                     </choose>
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID  = #{p.gr_uuid}
	</update>
	<select id="findPoItemIdsByGrId" resultType="map">
		 SELECT PO_ITEM_UUID
		 	FROM GR_ITEM
		 	WHERE TEN_ID = #{g.tenant}
		 	  AND GR_UUID  = #{p.gr_uuid}
		 	  AND STS   != 'D'
	</select>
	<select id="findListReferenceDocIdsFromGR" resultType="map">
/* gr-status.findListReferenceDocIdsFromGR */
	SELECT PR_ITEM_UUID
	, PO_ITEM_UUID
	, ASN_ITEM_UUID
	    FROM GR_ITEM
	WHERE TEN_ID = #{g.tenant}
		AND GR_UUID = #{p.gr_uuid}
	AND STS != 'D'
	</select>
	<select id="findListReferenceDocFromGR" resultType="map">
/* gr-status.findListReferenceDocFromGR */
	SELECT #{p.sortkey}                                        AS SORTKEY
	              , 'GR'                                        AS APP_TYPE
	              , HD.GR_UUID                                    AS APP_ID
	              , HD.GR_NO                                    AS DOC_NO
	              , HD.GR_ORDN                                   AS DOC_REV
	              , HD.GR_STS_CCD                              AS PROG_STS
	              , CASE WHEN HD.PURC_TYP_CCD = 'QTY'
	                          THEN ( SELECT DTLCD_NM
	                    FROM DTLCD_MULTLANG
	                   WHERE TEN_ID  = HD.TEN_ID
	                     AND CCD  = 'P035'
	                     AND DTLCD  = HD.GR_STS_CCD
	                     AND LANG_CCD = #{g.locale} )
	                     WHEN HD.PURC_TYP_CCD = 'CONSTSVC'
	                          THEN ( SELECT DTLCD_NM
									FROM DTLCD_MULTLANG
								   WHERE TEN_ID  = HD.TEN_ID
									 AND CCD  = 'P082'
									 AND DTLCD  = HD.GR_STS_CCD
									 AND LANG_CCD = #{g.locale} )
	                     ELSE ''
	                END                                         AS STS_NM
	              , HD.GR_TIT                                    AS DOC_TITLE
	              , ''                                          AS MOD_TYP
	              , ''                                          AS COMP_YN
	           FROM GR HD
	          WHERE HD.TEN_ID = #{g.tenant}
	            AND HD.GR_NO  = #{p.gr_no}
	            AND HD.STS   != 'D'
	</select>
	<select id="findListReferenceDocFromGRByPrItemIds" resultType="map">
/* gr-status.findListReferenceDocFromGRByPrItemIds */
		SELECT #{p.sortkey}                                          AS SORTKEY
	              , 'GR'                                         AS APP_TYPE
	              , HD.GR_UUID                                     AS APP_ID
	              , HD.GR_NO                                     AS DOC_NO
	              , HD.GR_ORDN                                    AS DOC_REV
	              , HD.GR_STS_CCD                               AS PROG_STS
	              , CASE WHEN HD.PURC_TYP_CCD = 'QTY'
	                          THEN ( SELECT DTLCD_NM
	                    FROM DTLCD_MULTLANG
	                   WHERE TEN_ID  = HD.TEN_ID
	                     AND CCD  = 'P035'
	                     AND DTLCD  = HD.GR_STS_CCD
	                     AND LANG_CCD = #{g.locale} )
	                     WHEN HD.PURC_TYP_CCD = 'CONSTSVC'
	                          THEN ( SELECT DTLCD_NM
									FROM DTLCD_MULTLANG
								   WHERE TEN_ID  = HD.TEN_ID
									 AND CCD  = 'P082'
									 AND DTLCD  = HD.GR_STS_CCD
									 AND LANG_CCD = #{g.locale} )
	                     ELSE ''
	                END                                         AS STS_NM
	              , GR_TIT                                        AS DOC_TITLE
	              , ''                                           AS MOD_TYP
	              , ''                                           AS COMP_YN
	           FROM GR HD
	          WHERE HD.TEN_ID = #{g.tenant}
	            AND HD.GR_UUID  IN ( SELECT GR_UUID
	                                 FROM GR_ITEM
	                                WHERE TEN_ID = #{g.tenant}
	                                  AND PR_ITEM_UUID IN
	                                      <foreach close=")" collection="p.pr_item_uuids" item="pr_item_uuid" open="(" separator=",">
										   #{pr_item_uuid}
									   </foreach>
	                                  AND STS != 'D'
	                             )
	</select>
		<select id="findListReferenceDocFromGRByPoItemIds" resultType="map">
/* gr-status.findListReferenceDocFromGRByPoItemIds */
		SELECT #{p.sortkey}                                         AS SORTKEY
		          , 'GR'                                        AS APP_TYPE
		          , HD.GR_UUID                                    AS APP_ID
		          , HD.GR_NO                                    AS DOC_NO
		          , HD.GR_ORDN                                AS DOC_REV
		          , HD.GR_STS_CCD                              AS PROG_STS
		          , CASE WHEN HD.PURC_TYP_CCD = 'QTY'
	                          THEN ( SELECT DTLCD_NM
	                    FROM DTLCD_MULTLANG
	                   WHERE TEN_ID  = HD.TEN_ID
	                     AND CCD  = 'P035'
	                     AND DTLCD  = HD.GR_STS_CCD
	                     AND LANG_CCD = #{g.locale} )
	                     WHEN HD.PURC_TYP_CCD = 'CONSTSVC'
	                          THEN ( SELECT DTLCD_NM
									FROM DTLCD_MULTLANG
								   WHERE TEN_ID  = HD.TEN_ID
									 AND CCD  = 'P082'
									 AND DTLCD  = HD.GR_STS_CCD
									 AND LANG_CCD = #{g.locale} )
	                     ELSE ''
	                END                                         AS STS_NM
		          , HD.GR_TIT                                    AS DOC_TITLE
		          , ''                                          AS MOD_TYP
		          , ''                                          AS COMP_YN
		       FROM GR HD
		      WHERE HD.TEN_ID = #{g.tenant}
		        AND HD.GR_UUID IN ( SELECT GR_UUID
		                            FROM GR_ITEM
		                           WHERE TEN_ID     = #{g.tenant}
		                             AND PO_ITEM_UUID IN
								<foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
										   #{po_item_uuid}
									   </foreach>
		                             AND STS != 'D'
		                        )
	</select>
	<select id="findListReferenceDocFromGRByAsnItemIds" resultType="map">
	/* gr-status.findListReferenceDocFromGRByAsnItemIds */
	SELECT #{p.sortkey}                                         AS SORTKEY
	              , 'GR'                                        AS APP_TYPE
	              , HD.GR_UUID                                    AS APP_ID
	              , HD.GR_NO                                    AS DOC_NO
	              , HD.GR_ORDN                                   AS DOC_REV
	              , HD.GR_STS_CCD                              AS PROG_STS
	              , CASE WHEN HD.PURC_TYP_CCD = 'QTY'
	                          THEN ( SELECT DTLCD_NM
	                    FROM DTLCD_MULTLANG
	                   WHERE TEN_ID  = HD.TEN_ID
	                     AND CCD  = 'P035'
	                     AND DTLCD  = HD.GR_STS_CCD
	                     AND LANG_CCD = #{g.locale} )
	                     WHEN HD.PURC_TYP_CCD = 'CONSTSVC'
	                          THEN ( SELECT DTLCD_NM
									FROM DTLCD_MULTLANG
								   WHERE TEN_ID  = HD.TEN_ID
									 AND CCD  = 'P082'
									 AND DTLCD  = HD.GR_STS_CCD
									 AND LANG_CCD = #{g.locale} )
	                     ELSE ''
	                END                                         AS STS_NM
	              , HD.GR_TIT                                    AS DOC_TITLE
	              , ''                                          AS MOD_TYP
	              , ''                                          AS COMP_YN
	           FROM GR HD
	          WHERE HD.TEN_ID = #{g.tenant}
	            AND HD.GR_UUID IN ( SELECT GR_UUID
	                                FROM GR_ITEM
	                               WHERE TEN_ID      = #{g.tenant}
	                                 AND ASN_ITEM_UUID IN
	                                     <foreach close=")" collection="p.asn_item_uuids" item="asn_item_uuid" open="(" separator=",">
										   #{asn_item_uuid}
									   </foreach>
	                                 AND STS        != 'D'
	                            )
	</select>
</mapper>
