<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
PO: 발주헤더
PO_ITEM: 발주품목
 -->

<mapper namespace="po">
    <insert id="insertPoHeader">
    /* po.insertPoHeader: 발주헤더 등록 */
    INSERT
      INTO PO (
           TEN_ID
         , PO_UUID
         , PO_NO
         , PO_REVNO
         , OORG_CD
         , RFX_UUID
         , RFX_NO
         , RFX_RND
         , PO_TIT
         , PLT_CD
         , VD_CD
         , VD_PIC_NM
         , VD_PIC_TEL
         , VD_PIC_EML
         , PURC_TYP_CCD
         , PO_REQ_TYP_CCD
         , PO_TYP_CCD
         , DOMOVRS_DIV_CCD
         , PO_CRN_DT
         , CUR_CCD
         , CONV_CUR_CCD
         , PO_AMT
         , PO_CONV_AMT
         , EXCHRATE
         , EXCHRATE_DT
         , CNTR_SGNG_TYP_CCD
         , PO_RMK
         , ATHG_UUID
         , PYMTMETH_CCD
         , PYMTMETH_EXPLN
         , PYMTMETH_USE_YN
         , DLVYMETH_CCD
         , DLVYMETH_EXPLN
         , DLVYMETH_USE_YN
         , TAX_TYP_CCD
         , OTREXP
         , OTREXP_EXPLN
         , PYMTMETH_CND
         , UPRCCNTR_NO
         , CNTR_AMT
         , SUP_AMT
         , VAT_AMT
         , CNTR_ST_DT
         , CNTR_EXP_DT
         , DFRM_RO
         , CPGUR_USE_YN
         , CPGUR_TYP_CCD
         , CPGUR_RO
         , CPGUR_AMT
         , CPGUR_ST_DT
         , CPGUR_EXP_DT
         , DEFPGUR_USE_YN
         , DEFPGUR_TYP_CCD
         , DEFPGUR_RO
         , DEFPGUR_AMT
         , DEFPGUR_PD_TYP_CCD
         , DEFPGUR_PD
         , APYMTGUR_USE_YN
         , APYMTGUR_TYP_CCD
         , APYMTGUR_RO
         , APYMTGUR_AMT
         , APYMTGUR_ST_DT
         , APYMTGUR_EXP_DT
         , PO_CMPLD_YN
         , CNTR_ATHG_UUID
         , CNTR_STS_CCD
         , MSTAGT_YN
         , MSTAGT_NO
         , PO_CHG_TYP_CCD
         , PO_CHG_REQ_TYP_CCD
         , PO_CHG_REQ_RSN
         , PO_CHG_REQR_ID
         <if test="p.po_chg_typ_ccd == &quot;CHG&quot;">
         , PO_CHG_REQ_DEPT_CD
         , PO_CHG_REQ_DT
         , GR_STS_CCD
         , VD_GR_STS_CCD
         </if>
         , PO_TRMN_PIC_ID
         , PO_TRMN_RSN
         , PO_TRMN_DT
         , STAX_YN
         , STTPYMT_RO_TYP_CCD
	     , STTPYMTMETH_CCD
         , CSTM_YN
         , CSTM_TYP_CCD
         , EFCT_PO_YN
         , STS
         , REGR_ID
         , REG_DTTM
         , MODR_ID
         , MOD_DTTM
         , CNTR_UUID
         , CNTR_NO
         , GE_SUBJ_YN
         , PO_REQ_RCPT_UUID
    ) VALUES (
           #{g.tenant}
         , #{p.po_uuid}
         , #{p.po_no}
         , CAST(#{p.po_revno} AS INT)
         , #{p.oorg_cd}
         , #{p.rfx_uuid}
         , #{p.rfx_no}
         , CAST(#{p.rfx_rnd} AS INT)
         , #{p.po_tit}
         , #{p.plt_cd}
         , #{p.vd_cd}
         , #{p.vd_pic_nm}
         , #{p.vd_pic_tel}
         , #{p.vd_pic_eml}
         , #{p.purc_typ_ccd}
         , #{p.po_req_typ_ccd}
         , #{p.po_typ_ccd}
         , #{p.domovrs_div_ccd}
         , #{p.po_crn_dt}
         , #{p.cur_ccd}
         , #{p.conv_cur_ccd}
         , CAST(#{p.po_amt} AS FLOAT  )
         , CAST(#{p.po_conv_amt} AS FLOAT  )
         , CAST(#{p.exchrate} AS FLOAT  )
         , #{p.exchrate_dt}
         <choose>
             <when test="p.cntr_sgng_typ_ccd != null and p.cntr_sgng_typ_ccd != &quot;&quot;">
                 , #{p.cntr_sgng_typ_ccd}
             </when>
             <otherwise>
                 ,'NA'
             </otherwise>
         </choose>
         , #{p.po_rmk}
         , #{p.athg_uuid}
         , #{p.pymtmeth_ccd}
         , #{p.pymtmeth_expln}
         , #{p.pymtmeth_use_yn}
         , #{p.dlvymeth_ccd}
         , #{p.dlvymeth_expln}
         , #{p.dlvymeth_use_yn}
         , #{p.tax_typ_ccd}
         , CAST(#{p.otrexp} AS FLOAT  )
         , #{p.otrexp_expln}
         , #{p.pymtmeth_cnd}
         , #{p.uprccntr_no}
         , CAST(#{p.cntr_amt} AS FLOAT  )
         , CAST(#{p.sup_amt} AS FLOAT  )
         , CAST(#{p.vat_amt} AS FLOAT  )
         , #{p.cntr_st_dt}
         , #{p.cntr_exp_dt}
         , CAST(#{p.dfrm_ro} AS FLOAT  )
         , #{p.cpgur_use_yn}
         , #{p.cpgur_typ_ccd}
         , CAST(#{p.cpgur_ro} AS FLOAT  )
         , CAST(#{p.cpgur_amt} AS FLOAT  )
         , #{p.cpgur_st_dt}
         , #{p.cpgur_exp_dt}
         , #{p.defpgur_use_yn}
         , #{p.defpgur_typ_ccd}
         , CAST(#{p.defpgur_ro} AS FLOAT  )
         , CAST(#{p.defpgur_amt} AS FLOAT  )
         , #{p.defpgur_pd_typ_ccd}
         , CAST(#{p.defpgur_pd} AS INT)
         , #{p.apymtgur_use_yn}
         , #{p.apymtgur_typ_ccd}
         , CAST(#{p.apymtgur_ro} AS FLOAT  )
         , CAST(#{p.apymtgur_amt} AS FLOAT  )
         , #{p.apymtgur_st_dt}
         , #{p.apymtgur_exp_dt}
         , #{p.po_cmpld_yn}
         , #{p.cntr_athg_uuid}
         , #{p.cntr_sts_ccd}
         , #{p.mstagt_yn}
         , #{p.mstagt_no}
         , #{p.po_chg_typ_ccd}
         , #{p.po_chg_req_typ_ccd}
         , #{p.po_chg_req_rsn}
         , #{p.po_chg_reqr_id}
         <if test="p.po_chg_typ_ccd == &quot;CHG&quot;">
         , #{g.dept_cd}
         <bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
         , #{getFormatNow}
         , #{p.gr_sts_ccd}
         , #{p.vd_gr_sts_ccd}
         </if>
         , #{p.po_trmn_pic_id}
         , #{p.po_trmn_rsn}
         , #{p.po_trmn_dt}
         , #{p.stax_yn}
         , #{p.sttpymt_ro_typ_ccd}
	     , #{p.sttpymtmeth_ccd}
         <choose>
           <when test="p.cstm_yn != null and p.cstm_yn == &quot;Y&quot;">
         , #{p.cstm_yn}
         , #{p.cstm_typ_ccd}
           </when>
           <otherwise>
         , 'N'
         , NULL
           </otherwise>
         </choose>
         , 'N'
         , 'C'
         , #{g.username}
         , #{g.now}
         , #{g.username}
         , #{g.now}
         , #{p.cntr_uuid}
         , #{p.cntr_no}
        <choose>
           <when test="p.ge_subj_yn != null and p.ge_subj_yn == &quot;Y&quot;">
         , #{p.ge_subj_yn}
           </when>
           <otherwise>
         , 'N'
           </otherwise>
         </choose>
         , #{p.po_req_rcpt_uuid}
    )
    </insert>
    <update id="updatePoHeader">
    /* po.updatePoHeader: 발주헤더 수정 */
    UPDATE PO
       SET STS = 'U'
         , MOD_DTTM = #{g.now}
         , MODR_ID = #{g.username}
         , PO_NO = #{p.po_no}
         , PO_REVNO = CAST(#{p.po_revno} AS INT) 
         , OORG_CD = #{p.oorg_cd}
         , RFX_UUID = #{p.rfx_uuid}
         , RFX_NO = #{p.rfx_no}
         , RFX_RND = CAST(#{p.rfx_rnd} AS INT)
         , PO_TIT = #{p.po_tit}
         , PLT_CD = #{p.plt_cd}
         , VD_CD = #{p.vd_cd}
         , VD_PIC_NM = #{p.vd_pic_nm}
         , VD_PIC_TEL = #{p.vd_pic_tel}
         , VD_PIC_EML = #{p.vd_pic_eml}
         , PURC_TYP_CCD = #{p.purc_typ_ccd}
         , PO_REQ_TYP_CCD = #{p.po_req_typ_ccd}
         , DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
         , PO_CRN_DT = #{p.po_crn_dt}
         , CUR_CCD = #{p.cur_ccd}
         , CONV_CUR_CCD = #{p.conv_cur_ccd}
         , PO_AMT = CAST(#{p.po_amt} AS FLOAT  )
         , PO_CONV_AMT = CAST(#{p.po_conv_amt} AS FLOAT  )
         , EXCHRATE = CAST(#{p.exchrate} AS FLOAT  )
         , EXCHRATE_DT = #{p.exchrate_dt}
         , CNTR_SGNG_TYP_CCD = #{p.cntr_sgng_typ_ccd}
         , PO_RMK = #{p.po_rmk}
         , ATHG_UUID = #{p.athg_uuid}
         <choose>
           <when test="p.pymtmeth_use_yn != null and p.pymtmeth_use_yn == &quot;Y&quot;">
         , PYMTMETH_USE_YN = #{p.pymtmeth_use_yn}
           </when>
           <otherwise>
         , PYMTMETH_USE_YN = 'N'
           </otherwise>
         </choose>
         , PYMTMETH_CCD   = #{p.pymtmeth_ccd}
         , PYMTMETH_EXPLN = #{p.pymtmeth_expln}
         <choose>
           <when test="p.dlvymeth_use_yn != null and p.dlvymeth_use_yn == &quot;Y&quot;">
         , DLVYMETH_USE_YN = #{p.dlvymeth_use_yn}
           </when>
           <otherwise>
         , DLVYMETH_USE_YN = 'N'
           </otherwise>
         </choose>
         , DLVYMETH_CCD   = #{p.dlvymeth_ccd}
         , DLVYMETH_EXPLN = #{p.dlvymeth_expln}
         , TAX_TYP_CCD = #{p.tax_typ_ccd}
         , OTREXP = CAST(#{p.otrexp} AS FLOAT  )
         , OTREXP_EXPLN = #{p.otrexp_expln}
         , PYMTMETH_CND = #{p.pymtmeth_cnd}
         , UPRCCNTR_NO = #{p.uprccntr_no}
         , CNTR_AMT = CAST(#{p.cntr_amt} AS FLOAT  )
         , SUP_AMT = CAST(#{p.sup_amt} AS FLOAT  )
         , VAT_AMT = CAST(#{p.vat_amt} AS FLOAT  )
         , CNTR_ST_DT = #{p.cntr_st_dt}
         , CNTR_EXP_DT = #{p.cntr_exp_dt}
         <choose>
           <when test="p.cpgur_use_yn != null and p.cpgur_use_yn == &quot;Y&quot;">
         , CPGUR_USE_YN   = 'Y'
         , CPGUR_RO = CAST(#{p.cpgur_ro} AS FLOAT  )
         , CPGUR_AMT  = CAST(#{p.cpgur_amt} AS FLOAT  )
         , CPGUR_TYP_CCD  = #{p.cpgur_typ_ccd}
         , CPGUR_ST_DT   = #{p.cpgur_st_dt}
         , CPGUR_EXP_DT   = #{p.cpgur_exp_dt}
           </when>
           <otherwise>
         , CPGUR_USE_YN   = 'N'
         , CPGUR_RO = NULL
         , CPGUR_AMT  = NULL
         , CPGUR_TYP_CCD  = NULL
         , CPGUR_ST_DT   = NULL
         , CPGUR_EXP_DT   = NULL
           </otherwise>
         </choose>
         <choose>
           <when test="p.apymtgur_use_yn != null and p.apymtgur_use_yn == &quot;Y&quot;">
         , APYMTGUR_USE_YN   = 'Y'
         , APYMTGUR_RO = CAST(#{p.apymtgur_ro} AS FLOAT  )
         , APYMTGUR_AMT  = CAST(#{p.apymtgur_amt} AS FLOAT  )
         , APYMTGUR_TYP_CCD  = #{p.apymtgur_typ_ccd}
         , APYMTGUR_ST_DT   = #{p.apymtgur_st_dt}
         , APYMTGUR_EXP_DT   = #{p.apymtgur_exp_dt}
           </when>
           <otherwise>
         , APYMTGUR_USE_YN   = 'N'
         , APYMTGUR_RO = NULL
         , APYMTGUR_AMT  = NULL
         , APYMTGUR_TYP_CCD  = NULL
         , APYMTGUR_ST_DT   = NULL
         , APYMTGUR_EXP_DT   = NULL
           </otherwise>
         </choose>
         <choose>
           <when test="p.defpgur_use_yn != null and p.defpgur_use_yn == &quot;Y&quot;">
         , DEFPGUR_USE_YN   = 'Y'
         , DEFPGUR_RO = CAST(#{p.defpgur_ro} AS FLOAT  )
         , DEFPGUR_AMT  = CAST(#{p.defpgur_amt} AS FLOAT  )
         , DEFPGUR_TYP_CCD  = #{p.defpgur_typ_ccd}
         , DEFPGUR_PD_TYP_CCD  = #{p.defpgur_pd_typ_ccd}
         , DEFPGUR_PD  = TO_CHAR(#{p.defpgur_pd}) </when>
           <otherwise>
         , DEFPGUR_USE_YN   = 'N'
         , DEFPGUR_RO = NULL
         , DEFPGUR_AMT  = NULL
         , DEFPGUR_TYP_CCD  = NULL
         , DEFPGUR_PD_TYP_CCD  = NULL
         , DEFPGUR_PD  = NULL
           </otherwise>
         </choose>
         <choose>
           <when test="p.dfrm_ro != null">
         , DFRM_RO = CAST(#{p.dfrm_ro} AS FLOAT  )
           </when>
           <otherwise>
         , DFRM_RO = NULL
           </otherwise>
         </choose>
         , CNTR_ATHG_UUID = #{p.cntr_athg_uuid}
         , CNTR_STS_CCD = #{p.cntr_sts_ccd}
         , MSTAGT_YN = #{p.mstagt_yn}
         , MSTAGT_NO = #{p.mstagt_no}
         , PO_CHG_TYP_CCD = #{p.po_chg_typ_ccd}
         , PO_CHG_REQ_TYP_CCD = #{p.po_chg_req_typ_ccd}
         , PO_CHG_REQ_RSN = #{p.po_chg_req_rsn}
         , PO_CHG_REQ_DT = #{p.po_chg_req_dt}
         , PO_TRMN_PIC_ID = #{p.po_trmn_pic_id}
         , PO_TRMN_RSN = #{p.po_trmn_rsn}
         , PO_TRMN_DT = #{p.po_trmn_dt}
         , STAX_YN = #{p.stax_yn}
         , STTPYMT_RO_TYP_CCD = #{p.sttpymt_ro_typ_ccd}
         , STTPYMTMETH_CCD = #{p.sttpymtmeth_ccd}
         , CNTR_UUID = #{p.cntr_uuid}
         , GE_SUBJ_YN = #{p.ge_subj_yn}
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID = #{p.po_uuid}
    </update>
    <update id="updatePoHeaderPoCreDate">
    /* po.updatePoHeaderPoProgSts: 발주 생성 일자 업데이트 */
    UPDATE PO
       SET PO_CRN_DT = #{p.po_crn_dt}
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID = #{p.po_uuid}
    </update>
	<select id="findPrevPoByModification" resultType="map">
	/* po.findPrevPoByModification: 이전차수 발주헤더를 발주변경-발주종료로 조회 */
	SELECT B.*
	  FROM PO A INNER JOIN (
	  	 SELECT TEN_ID    AS TEN_ID
              , PO_NO     AS PO_NO
              , PO_REVNO -1 AS PO_REVNO
           FROM PO
          WHERE TEN_ID = #{g.tenant}
            AND PO_UUID  = #{p.po_uuid}
	  ) B ON (
	  		A.TEN_ID = B.TEN_ID
        AND A.PO_NO  = B.PO_NO
        AND A.PO_REVNO = B.PO_REVNO
	  )
	</select>
	<update id="updatePrevPoByModification">
	/* po.updatePrevPoByModification: 이전차수 발주헤더를 발주변경-발주종료로 수정 */
	UPDATE PO 
	   SET PO_STS_CCD = #{p.po_sts_ccd} /* 발주변경 */
         , PO_CMPLD_YN  = 'Y' /* 발주종료 */
     WHERE TEN_ID = #{g.tenant}
       AND PO_NO = #{p.po_no}
       AND PO_REVNO = #{p.po_revno} 
	</update>
    <select id="findPoComplete" resultType="map">
    /* po.findPoComplete: 발주의 발주완료여부 확인 */
    SELECT B.*
      FROM PO A INNER JOIN (
      	SELECT TEN_ID
	             , PO_UUID
	             , SUM( CASE WHEN PO_CMPLD_YN = 'Y' OR PO_ERY_ED_YN = 'Y'
	                              THEN 1
	                         ELSE 0
	                    END )          AS COMP_PO_ITEM_CNT
	             , COUNT(PO_ITEM_UUID)   AS ALL_PO_ITEM_CNT
	          FROM PO_ITEM
	         WHERE TEN_ID = #{g.tenant}
	           <choose>
	             <when test="p.po_uuid != null and p.po_uuid != ''">
	           AND PO_UUID = #{p.po_uuid}
	             </when>
	             <otherwise>
	               <if test="p.po_uuids != null and p.po_uuids.size() != 0">
	           AND PO_UUID IN
	                 <foreach close=")" collection="p.po_uuids" item="po_uuid" open="(" separator=",">
	                   #{po_uuid}
	                 </foreach>
	               </if>
	             </otherwise>
	           </choose>
	           AND STS != 'D'
	         GROUP BY TEN_ID, PO_UUID
      ) B ON ( 
       		A.TEN_ID = B.TEN_ID
	    AND A.PO_UUID  = B.PO_UUID
	  )
    </select>
    <update id="updatePoComplete">
    /* po.updatePoComplete: 발주의 발주완료여부 수정 */
    UPDATE PO
       SET PO_CMPLD_YN = CASE WHEN #{p.comp_po_item_cnt} = #{p.all_po_item_cnt}
	                                      THEN 'Y'
	                                 ELSE 'N'
	                            END
	 WHERE TEN_ID = #{g.tenant}
	   AND PO_UUID  = #{p.po_uuid}
    </update>
    <update id="deletePoHeader">
    /* po.deletePoHeader: 발주헤더 삭제 */
    UPDATE PO 
       SET STS = 'D'
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID = #{p.po_uuid}
    </update>
    <select id="findListPoHeader" resultType="map">
    /* po.findListPoHeader: 발주 목록 */
    SELECT HD.TEN_ID
         , HD.PO_UUID
         , TASK_PO.TASK_UUID AS PO_TASK_UUID
         , TASK_PO_CHG.TASK_UUID AS PO_CHG_TASK_UUID
         , HD.PO_NO
         , HD.PO_REVNO
         , HD.OORG_CD
         , HD.RFX_UUID
         , HD.RFX_NO
         , HD.RFX_RND
         , HD.PO_TIT
         , HD.PLT_CD
         , HD.VD_CD
         , HD.VD_PIC_NM
         , HD.VD_PIC_TEL
         , HD.VD_PIC_EML
         , HD.PURC_TYP_CCD
         , HD.PO_REQ_TYP_CCD
         , HD.PO_TYP_CCD
         , HD.DOMOVRS_DIV_CCD
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.CONV_CUR_CCD
         , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
         , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
         , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
         , HD.EXCHRATE_DT
         , HD.CNTR_SGNG_TYP_CCD
         , HD.PO_RMK
         , HD.ATHG_UUID
         , HD.PYMTMETH_CCD
         , HD.PYMTMETH_EXPLN
         , HD.PYMTMETH_USE_YN
         , HD.DLVYMETH_CCD
         , HD.DLVYMETH_EXPLN
         , HD.DLVYMETH_USE_YN
         , HD.TAX_TYP_CCD
         , HD.OTREXP_EXPLN
         , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
         , HD.PYMTMETH_CND
         , HD.UPRCCNTR_NO
         , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
         , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
         , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
         , HD.CNTR_ST_DT
         , HD.CNTR_EXP_DT
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.CPGUR_USE_YN
         , HD.CPGUR_TYP_CCD
         , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
         , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
         , HD.CPGUR_ST_DT
         , HD.CPGUR_EXP_DT
         , HD.DEFPGUR_USE_YN
         , HD.DEFPGUR_TYP_CCD
         , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
         , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
         , HD.DEFPGUR_PD_TYP_CCD
         , HD.DEFPGUR_PD
         , HD.APYMTGUR_USE_YN
         , HD.APYMTGUR_TYP_CCD
         , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
         , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
         , HD.APYMTGUR_ST_DT
         , HD.APYMTGUR_EXP_DT
         , HD.PO_CMPLD_YN
         , HD.VD_PO_STS_CCD
         , HD.APVL_STS_CCD
         , HD.PO_STS_CCD
         , HD.CNTR_ATHG_UUID
         , HD.CNTR_STS_CCD
         , HD.MSTAGT_YN
         , HD.MSTAGT_NO
         , HD.PO_CHG_TYP_CCD
         , HD.PO_CHG_REQ_TYP_CCD
         , HD.PO_CHG_REQ_RSN
         , HD.PO_CHG_REQ_STS_CCD
         , HD.PO_CHG_REQ_APVL_STS_CCD
         , HD.PO_CHG_REQR_ID
         , HD.PO_CHG_REQ_DEPT_CD
         , HD.PO_CHG_REQ_DT
         , HD.PO_TRMN_PIC_ID
         , HD.PO_TRMN_RSN
         , HD.PO_TRMN_DT
         , HD.CSTM_YN
         , HD.CSTM_TYP_CCD
         , HD.STS
         , HD.REGR_ID
         , HD.REG_DTTM
         , HD.MODR_ID
         , HD.MOD_DTTM
         , VD.VD_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
         , VD.ERP_VD_CD
         , HD.PO_RCPT_RJCT_RSN
         , HD.CNTR_UUID
         , HD.CNTR_NO
         , PO_CNTR_REQ.PO_CNTR_REQ_UUID
         , PO_CNTR_REQ.CNTR_REQ_TYP_CCD
         , PO_CNTR_REQ.REQ_STS_CCD
      FROM PO HD
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
       AND VD.VD_CD = HD.VD_CD
      LEFT OUTER JOIN TASK_APVL TASK_PO
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO'
       AND TASK_PO.USE_YN = 'Y'
      LEFT OUTER JOIN TASK_APVL TASK_PO_CHG
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO_CHG'
       AND TASK_PO.USE_YN = 'Y'
      LEFT OUTER JOIN PO_CNTR_REQ
        ON PO_CNTR_REQ.TEN_ID = HD.TEN_ID
       AND PO_CNTR_REQ.PO_UUID = HD.PO_UUID
     WHERE HD.TEN_ID = #{g.tenant}
       <choose>
           <when test="p.req_dept_yn == &quot;Y&quot;">
       AND (HD.PO_STS_CCD IN ('APVD', 'CHG', 'TRMN') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C', 'T', 'P')) /* PO변경 요청부서 */
       /* PR(구매요청)이 있는 발주 건들만 조회 */
       AND EXISTS ( SELECT A.PO_ITEM_UUID
                      FROM PO_ITEM A
                     INNER JOIN PR_ITEM B
                        ON A.TEN_ID     = B.TEN_ID
                       AND A.PR_ITEM_UUID = B.PR_ITEM_UUID
                       AND B.REGR_ID     = #{g.username}
                       AND B.STS       != 'D'
                     WHERE A.TEN_ID = HD.TEN_ID
                       AND A.PO_UUID  = HD.PO_UUID
                       <choose>
                         <when test="p.pr_nos != null and p.pr_nos.size() &gt; 0">
                       AND B.PR_NO IN
                           <foreach close=")" collection="p.pr_nos" item="prNo" open="(" separator=",">
                           #{prNo}
                           </foreach>
                         </when>
                         <otherwise>
                           <if test="p.pr_no != null and p.pr_no != ''">
                             <bind name="prNoPattern" value="'%'+ p.pr_no +'%'"/>
                       AND B.PR_NO LIKE UPPER(#{prNoPattern})
                           </if>
                         </otherwise>
                       </choose>
                       <choose>
                         <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
                       AND A.ITEM_CD IN
                           <foreach close=")" collection="p.item_cds" item="itemCd" open="(" separator=",">
                           #{itemCd}
                           </foreach>
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                         </when>
                         <otherwise>
                           <if test="p.item_cd != null and p.item_cd != ''">
                             <bind name="itemCdPattern" value="'%'+ p.item_cd +'%'"/>
                       AND A.ITEM_CD LIKE UPPER(#{itemCdPattern})
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                           </if>
                         </otherwise>
                       </choose>
                       AND A.STS   != 'D'
           )
           </when>
           <otherwise>
       AND (HD.PO_STS_CCD IN ('WTG', 'APVD', 'CHG', 'TRMN', 'CRNG', 'PRGSG', 'CNTR_CHG_REQ', 'CNTR_CHG', 'PO_CHG', 'CNTR_TRMN_REQ', 'CHG_RET') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C')) /* PO 구매부서 */
           </otherwise>
       </choose>
       <if test="p.from_po_crn_dt != null and p.from_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null and p.to_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &lt;= #{p.to_po_crn_dt}
       </if>
       <choose>
         <when test="p.po_sts_ccds != null and p.po_sts_ccds.size() != 0">
       AND HD.PO_STS_CCD IN
           <foreach close=")" collection="p.po_sts_ccds" item="po_sts_ccd" open="(" separator=",">
             #{po_sts_ccd}
           </foreach>
         </when>
         <otherwise>
           <if test="p.po_sts_ccd != null and p.po_sts_ccd != &quot;&quot;">
       AND HD.PO_STS_CCD = #{p.po_sts_ccd}
           </if>
         </otherwise>
       </choose>
       <if test="p.domovrs_div_ccd != null and p.domovrs_div_ccd != &quot;&quot;">
       AND HD.DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
       </if>
       <if test="p.apvl_sts_ccd != null and p.apvl_sts_ccd != &quot;&quot;">
       AND HD.APVL_STS_CCD = #{p.apvl_sts_ccd}
       </if>
       <if test="p.erp_vd_cd != null and p.vd_cd != &quot;&quot;">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
       AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
       </if>
       <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
       AND    (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}) )
       </if>
       <if test="p.vd_po_sts_ccd != null and p.vd_po_sts_ccd != &quot;&quot;">
       AND HD.VD_PO_STS_CCD = #{p.vd_po_sts_ccd}
       </if>
       <if test="p.po_chg_req_sts_ccd != null and p.po_chg_req_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_STS_CCD = #{p.po_chg_req_sts_ccd}
       </if>
       <if test="p.po_chg_req_apvl_sts_ccd != null and p.po_chg_req_apvl_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_APVL_STS_CCD = #{p.po_chg_req_apvl_sts_ccd}
       </if>
       <if test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd != &quot;&quot;">
       AND HD.PO_CHG_TYP_CCD = #{p.po_chg_typ_ccd}
       </if>
       <if test="p.po_typ_ccd != null">
           AND HD.PO_TYP_CCD = #{p.po_typ_ccd}
       </if>
       <if test="p.purc_typ_ccd != null and p.purc_typ_ccd != &quot;&quot;">
       AND HD.PURC_TYP_CCD = #{p.purc_typ_ccd}
       </if>
       <if test="p.po_tit != null and p.po_tit != ''">
           <bind name="p_po_tit" value="'%' + p.po_tit + '%'"/>
       AND UPPER(HD.PO_TIT) LIKE UPPER(#{p_po_tit})
       </if>
       <choose>
           <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
       AND HD.OORG_CD IN
               <foreach close=")" collection="p.oorg_cd" item="item" open="(" separator=",">
                   #{item}
               </foreach>
           </when>
           <otherwise>
       AND HD.OORG_CD = '0'
           </otherwise>
       </choose>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND HD.PO_NO IN
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND HD.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
        <choose>
           <when test="p.cntr_nos != null and p.cntr_nos.size() != 0">
       AND HD.CNTR_NO IN
               <foreach close=")" collection="p.cntr_nos" item="cntr_no" open="(" separator=",">
                   #{cntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.cntr_no != null and p.cntr_no != ''">
                   <bind name="p_cntr_no" value="'%' + p.cntr_no + '%'"/>
       AND HD.CNTR_NO LIKE UPPER(#{p_cntr_no})
               </if>
           </otherwise>
       </choose>
       <if test="p.cs_vd_cd != null and p.cs_vd_cd != ''">
       AND EXISTS ( SELECT CS.VD_CD
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_cd" value="'%' + p.cs_vd_cd + '%'"/>
                       AND (
                               (
                                   CS.REP_VD_CD IS NOT NULL  AND CS.REP_VD_CD LIKE #{p_cs_vd_cd}
                               )
                            OR (
                                   (CS.REP_VD_CD IS NULL OR CS.REP_VD_CD = '')
                               AND CSVD.VD_CD LIKE #{p_cs_vd_cd}
                               )
                           )
                  )
       </if>
       <if test="p.cs_vd_nm != null and p.cs_vd_nm != ''">
       AND EXISTS ( SELECT
                                CASE WHEN 'en_US' = #{g.locale} THEN CSVD.VD_NM_EN ELSE CSVD.VD_NM END AS VD_NM
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_nm" value="'%' + p.cs_vd_nm + '%'"/>
			          AND    (UPPER(CSVD.VD_NM) LIKE UPPER(#{p_cs_vd_nm}) OR UPPER(CSVD.VD_NM_EN) LIKE UPPER(#{p_cs_vd_nm}))      /* 협력사 명 검색조건*/
                  )
       </if>
       AND HD.STS != 'D'
     ORDER BY HD.PO_NO DESC, HD.PO_REVNO DESC
    </select>
    <select id="findListCntrHeader" resultType="map">
    /* po.findListCntrHeader: 계약 목록 */
    SELECT HD.TEN_ID
         , HD.PO_UUID
         , TASK_PO.TASK_UUID AS PO_TASK_UUID
         , TASK_PO_CHG.TASK_UUID AS PO_CHG_TASK_UUID
         , CASE WHEN HD.PO_STS_CCD = 'CRNG' THEN null
                WHEN HD.PO_STS_CCD = 'WTG' THEN null
                WHEN HD.PO_STS_CCD IS NULL OR HD.PO_STS_CCD = '' THEN null
                ELSE HD.PO_NO
            END AS PO_NO
         , HD.PO_REVNO
         , HD.OORG_CD
         , HD.RFX_UUID
         , HD.RFX_NO
         , HD.RFX_RND
         , HD.PO_TIT
         , HD.PLT_CD
         , HD.VD_CD
         , HD.VD_PIC_NM
         , HD.VD_PIC_TEL
         , HD.VD_PIC_EML
         , HD.PURC_TYP_CCD
         , HD.PO_REQ_TYP_CCD
         , HD.PO_TYP_CCD
         , HD.DOMOVRS_DIV_CCD
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.CONV_CUR_CCD
         , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
         , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
         , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
         , HD.EXCHRATE_DT
         , HD.CNTR_SGNG_TYP_CCD
         , HD.PO_RMK
         , HD.ATHG_UUID
         , HD.PYMTMETH_CCD
         , HD.PYMTMETH_EXPLN
         , HD.PYMTMETH_USE_YN
         , HD.DLVYMETH_CCD
         , HD.DLVYMETH_EXPLN
         , HD.DLVYMETH_USE_YN
         , HD.TAX_TYP_CCD
         , HD.OTREXP_EXPLN
         , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
         , HD.PYMTMETH_CND
         , HD.UPRCCNTR_NO
         , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
         , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
         , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
         , HD.CNTR_ST_DT
         , HD.CNTR_EXP_DT
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.CPGUR_USE_YN
         , HD.CPGUR_TYP_CCD
         , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
         , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
         , HD.CPGUR_ST_DT
         , HD.CPGUR_EXP_DT
         , HD.DEFPGUR_USE_YN
         , HD.DEFPGUR_TYP_CCD
         , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
         , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
         , HD.DEFPGUR_PD_TYP_CCD
         , HD.DEFPGUR_PD
         , HD.APYMTGUR_USE_YN
         , HD.APYMTGUR_TYP_CCD
         , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
         , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
         , HD.APYMTGUR_ST_DT
         , HD.APYMTGUR_EXP_DT
         , HD.PO_CMPLD_YN
         , HD.VD_PO_STS_CCD
         , HD.APVL_STS_CCD
         , HD.PO_STS_CCD
         , HD.CNTR_ATHG_UUID
         , HD.CNTR_STS_CCD
         , HD.MSTAGT_YN
         , HD.MSTAGT_NO
         , HD.PO_CHG_TYP_CCD
         , HD.PO_CHG_REQ_TYP_CCD
         , HD.PO_CHG_REQ_RSN
         , HD.PO_CHG_REQ_STS_CCD
         , HD.PO_CHG_REQ_APVL_STS_CCD
         , HD.PO_CHG_REQR_ID
         , HD.PO_CHG_REQ_DEPT_CD
         , HD.PO_CHG_REQ_DT
         , HD.PO_TRMN_PIC_ID
         , HD.PO_TRMN_RSN
         , HD.PO_TRMN_DT
         , HD.CSTM_YN
         , HD.CSTM_TYP_CCD
         , HD.STS
         , HD.REGR_ID
         , HD.REG_DTTM
         , HD.MODR_ID
         , HD.MOD_DTTM
         , VD.VD_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
         , VD.ERP_VD_CD
         , HD.PO_RCPT_RJCT_RSN
         , HD.CNTR_UUID
         , HD.CNTR_NO
      FROM PO HD
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
       AND VD.VD_CD = HD.VD_CD
      LEFT OUTER JOIN TASK_APVL TASK_PO
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO'
       AND TASK_PO.USE_YN = 'Y'
      LEFT OUTER JOIN TASK_APVL TASK_PO_CHG
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO_CHG'
       AND TASK_PO.USE_YN = 'Y'
     WHERE HD.TEN_ID = #{g.tenant}
       <choose>
           <when test="p.req_dept_yn == &quot;Y&quot;">
       AND (HD.PO_STS_CCD IN ('APVD', 'CHG', 'TRMN') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C', 'T', 'P')) /* PO변경 요청부서 */
       /* PR(구매요청)이 있는 발주 건들만 조회 */
       AND EXISTS ( SELECT A.PO_ITEM_UUID
                      FROM PO_ITEM A
                     INNER JOIN PR_ITEM B
                        ON A.TEN_ID     = B.TEN_ID
                       AND A.PR_ITEM_UUID = B.PR_ITEM_UUID
                       AND B.REGR_ID     = #{g.username}
                       AND B.STS       != 'D'
                     WHERE A.TEN_ID = HD.TEN_ID
                       AND A.PO_UUID  = HD.PO_UUID
                       <choose>
                         <when test="p.pr_nos != null and p.pr_nos.size() &gt; 0">
                       AND B.PR_NO IN
                           <foreach close=")" collection="p.pr_nos" item="prNo" open="(" separator=",">
                           #{prNo}
                           </foreach>
                         </when>
                         <otherwise>
                           <if test="p.pr_no != null and p.pr_no != ''">
                             <bind name="prNoPattern" value="'%'+ p.pr_no +'%'"/>
                       AND B.PR_NO LIKE UPPER(#{prNoPattern})
                           </if>
                         </otherwise>
                       </choose>
                       <choose>
                         <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
                       AND A.ITEM_CD IN
                           <foreach close=")" collection="p.item_cds" item="itemCd" open="(" separator=",">
                           #{itemCd}
                           </foreach>
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                         </when>
                         <otherwise>
                           <if test="p.item_cd != null and p.item_cd != ''">
                             <bind name="itemCdPattern" value="'%'+ p.item_cd +'%'"/>
                       AND A.ITEM_CD LIKE UPPER(#{itemCdPattern})
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                           </if>
                         </otherwise>
                       </choose>
                       AND A.STS   != 'D'
           )
           </when>
           <otherwise>
       AND (HD.PO_STS_CCD IN ('WTG', 'APVD', 'CHG', 'TRMN', 'CRNG', 'PRGSG', 'CHG_REQ', 'CHG_RET') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C')) /* PO 구매부서 */
           </otherwise>
       </choose>
       <if test="p.from_po_crn_dt != null and p.from_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null and p.to_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &lt;= #{p.to_po_crn_dt}
       </if>
       <choose>
         <when test="p.po_sts_ccds != null and p.po_sts_ccds.size() != 0">
       AND HD.PO_STS_CCD IN
           <foreach close=")" collection="p.po_sts_ccds" item="po_sts_ccd" open="(" separator=",">
             #{po_sts_ccd}
           </foreach>
         </when>
         <otherwise>
           <if test="p.po_sts_ccd != null and p.po_sts_ccd != &quot;&quot;">
       AND HD.PO_STS_CCD = #{p.po_sts_ccd}
           </if>
         </otherwise>
       </choose>
       <if test="p.domovrs_div_ccd != null and p.domovrs_div_ccd != &quot;&quot;">
       AND HD.DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
       </if>
       <if test="p.apvl_sts_ccd != null and p.apvl_sts_ccd != &quot;&quot;">
       AND HD.APVL_STS_CCD = #{p.apvl_sts_ccd}
       </if>
       <if test="p.erp_vd_cd != null and p.vd_cd != &quot;&quot;">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
       AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
       </if>
       <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
       AND    (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}) )
       </if>
       <if test="p.vd_po_sts_ccd != null and p.vd_po_sts_ccd != &quot;&quot;">
       AND HD.VD_PO_STS_CCD = #{p.vd_po_sts_ccd}
       </if>
       <if test="p.po_chg_req_sts_ccd != null and p.po_chg_req_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_STS_CCD = #{p.po_chg_req_sts_ccd}
       </if>
       <if test="p.po_chg_req_apvl_sts_ccd != null and p.po_chg_req_apvl_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_APVL_STS_CCD = #{p.po_chg_req_apvl_sts_ccd}
       </if>
       <if test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd != &quot;&quot;">
       AND HD.PO_CHG_TYP_CCD = #{p.po_chg_typ_ccd}
       </if>
       <if test="p.purc_typ_ccd != null and p.purc_typ_ccd != &quot;&quot;">
       AND HD.PURC_TYP_CCD = #{p.purc_typ_ccd}
       </if>
       <if test="p.po_tit != null and p.po_tit != ''">
           <bind name="p_po_tit" value="'%' + p.po_tit + '%'"/>
       AND UPPER(HD.PO_TIT) LIKE UPPER(#{p_po_tit})
       </if>
       <choose>
           <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
       AND HD.OORG_CD IN
               <foreach close=")" collection="p.oorg_cd" item="item" open="(" separator=",">
                   #{item}
               </foreach>
           </when>
           <otherwise>
       AND HD.OORG_CD = '0'
           </otherwise>
       </choose>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND HD.PO_NO IN
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND HD.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
        <choose>
           <when test="p.cntr_nos != null and p.cntr_nos.size() != 0">
       AND HD.CNTR_NO IN
               <foreach close=")" collection="p.cntr_nos" item="cntr_no" open="(" separator=",">
                   #{cntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.cntr_no != null and p.cntr_no != ''">
                   <bind name="p_cntr_no" value="'%' + p.cntr_no + '%'"/>
       AND HD.CNTR_NO LIKE UPPER(#{p_cntr_no})
               </if>
           </otherwise>
       </choose>
       <if test="p.cs_vd_cd != null and p.cs_vd_cd != ''">
       AND EXISTS ( SELECT CS.VD_CD
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_cd" value="'%' + p.cs_vd_cd + '%'"/>
                       AND (
                               (
                                   CS.REP_VD_CD IS NOT NULL  AND CS.REP_VD_CD LIKE #{p_cs_vd_cd}
                               )
                            OR (
                                   (CS.REP_VD_CD IS NULL OR CS.REP_VD_CD = '')
                               AND CSVD.VD_CD LIKE #{p_cs_vd_cd}
                               )
                           )
                  )
       </if>
       <if test="p.cs_vd_nm != null and p.cs_vd_nm != ''">
       AND EXISTS ( SELECT
                                CASE WHEN 'en_US' = #{g.locale} THEN CSVD.VD_NM_EN ELSE CSVD.VD_NM END AS VD_NM
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_nm" value="'%' + p.cs_vd_nm + '%'"/>
			          AND    (UPPER(CSVD.VD_NM) LIKE UPPER(#{p_cs_vd_nm}) OR UPPER(CSVD.VD_NM_EN) LIKE UPPER(#{p_cs_vd_nm}))      /* 협력사 명 검색조건*/
                  )
       </if>
       AND HD.STS != 'D'
     ORDER BY HD.PO_NO DESC, HD.PO_REVNO DESC
    </select>
	<sql id="sql_selectPoHeader">
        SELECT HD.TEN_ID
             , HD.PO_UUID
             , HD.PO_NO
             , HD.PO_REVNO
             , HD.OORG_CD
             , HD.RFX_NO
             , HD.RFX_RND
             , HD.PO_TIT
             , HD.PLT_CD
             , HD.VD_CD
             , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
                    ELSE VD.VD_NM
                END AS DISP_VD_NM
             , VD.ERP_VD_CD
             , HD.VD_PIC_NM
             , HD.VD_PIC_TEL
             , HD.VD_PIC_EML
             , HD.PURC_TYP_CCD
             , HD.PO_REQ_TYP_CCD
             , HD.PO_TYP_CCD
             , HD.DOMOVRS_DIV_CCD
             , HD.PO_CRN_DT
             , HD.CUR_CCD
             , HD.CONV_CUR_CCD
             , (CASE WHEN HD.PO_AMT IS NULL THEN 0 ELSE HD.PO_AMT END)             AS PO_AMT
             , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END)   AS PO_CONV_AMT
             , (CASE WHEN HD.EXCHRATE IS NULL THEN 0 ELSE HD.EXCHRATE END)         AS EXCHRATE
             , HD.EXCHRATE_DT
             , HD.CNTR_SGNG_TYP_CCD
             , HD.PO_RMK
             , HD.ATHG_UUID
             , HD.PYMTMETH_CCD
             , HD.PYMTMETH_EXPLN
             , HD.PYMTMETH_USE_YN
             , HD.DLVYMETH_CCD
             , HD.DLVYMETH_EXPLN
             , HD.DLVYMETH_USE_YN
             , HD.TAX_TYP_CCD
             , HD.OTREXP_EXPLN
             , (CASE WHEN HD.OTREXP IS NULL THEN 0 ELSE HD.OTREXP END)             AS OTREXP
             , HD.PYMTMETH_CND
             , HD.UPRCCNTR_NO
             , (CASE WHEN HD.CNTR_AMT IS NULL THEN 0 ELSE HD.CNTR_AMT END)         AS CNTR_AMT
             , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END)           AS SUP_AMT
             , (CASE WHEN HD.VAT_AMT IS NULL THEN 0 ELSE HD.VAT_AMT END)           AS VAT_AMT
             , HD.CNTR_ST_DT
             , HD.CNTR_EXP_DT
             , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END)           AS DFRM_RO
             , HD.CPGUR_USE_YN
             , HD.CPGUR_TYP_CCD
             , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END)         AS CPGUR_RO
             , (CASE WHEN HD.CPGUR_AMT IS NULL THEN 0 ELSE HD.CPGUR_AMT END)       AS CPGUR_AMT
             , HD.CPGUR_ST_DT
             , HD.CPGUR_EXP_DT
             , HD.DEFPGUR_USE_YN
             , HD.DEFPGUR_TYP_CCD
             , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END)     AS DEFPGUR_RO
             , (CASE WHEN HD.DEFPGUR_AMT IS NULL THEN 0 ELSE HD.DEFPGUR_AMT END)   AS DEFPGUR_AMT
             , HD.DEFPGUR_PD_TYP_CCD
             , HD.DEFPGUR_PD
             , HD.APYMTGUR_USE_YN
             , HD.APYMTGUR_TYP_CCD
             , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END)   AS APYMTGUR_RO
             , (CASE WHEN HD.APYMTGUR_AMT IS NULL THEN 0 ELSE HD.APYMTGUR_AMT END) AS APYMTGUR_AMT
             , HD.APYMTGUR_ST_DT
             , HD.APYMTGUR_EXP_DT
             , HD.PO_CMPLD_YN
             , HD.VD_PO_STS_CCD
             , HD.APVL_STS_CCD
             , HD.PO_STS_CCD
             , HD.CNTR_ATHG_UUID
             , HD.CNTR_STS_CCD
             , HD.MSTAGT_YN
             , HD.MSTAGT_NO
             , HD.PO_CHG_TYP_CCD
             , HD.PO_CHG_REQ_TYP_CCD
             , HD.PO_CHG_REQ_RSN
             , HD.PO_CHG_REQ_STS_CCD
             , HD.PO_CHG_REQ_APVL_STS_CCD
             , HD.PO_CHG_REQR_ID
             , HD.PO_CHG_REQ_DEPT_CD
             , HD.PO_CHG_REQ_DT
             , HD.PO_TRMN_PIC_ID
             , HD.PO_TRMN_RSN
             , HD.PO_TRMN_DT
             , HD.STS
             , HD.REGR_ID
             , HD.REG_DTTM
             , HD.MODR_ID
             , HD.MOD_DTTM
             , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
             , VD.ERP_VD_CD
             , OG.OBD_TYP_CCD /* 협력사 구분 */
             , OG.PO_POSS_YN /* 거래상태(Y/N) */
             , MU.USR_NM                                                           AS MOD_REQ_NM
             , CU.USR_NM                                                           AS PO_CLOSE_CHR_NM
             , HD.GR_STS_CCD
             , HD.VD_GR_STS_CCD
             , HD.STAX_YN
             , HD.STTPYMT_RO_TYP_CCD
             , HD.STTPYMTMETH_CCD
             , HD.CSTM_YN
             , HD.CSTM_TYP_CCD
             , HD.PO_RCPT_RJCT_RSN_CCD
             , CASE
                   WHEN (SELECT COUNT(DT.PO_ITEM_UUID)
                         FROM PO_ITEM DT
                         WHERE DT.TEN_ID = HD.TEN_ID
                           AND DT.PO_UUID = HD.PO_UUID
                           AND (DT.PO_ERY_ED_YN = 'N' AND DT.PO_CMPLD_YN = 'N')
                           AND DT.STS != 'D') &gt; 0
                       THEN 'Y'
                   ELSE 'N'
            END                                                                    AS MODIFIABLE_ITEM_YN
             , CASE
                   WHEN (SELECT COUNT(DT.PO_ITEM_UUID)
                         FROM PO_ITEM DT
                         WHERE DT.TEN_ID = HD.TEN_ID
                           AND DT.PO_UUID = HD.PO_UUID
                           AND DT.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                           AND DT.STS != 'D') &gt; 0
                       THEN 'Y'
                   ELSE 'N'
            END                                                                    AS HAS_NO_CD_ITEM
             , CASE
                   WHEN HD.PURC_TYP_CCD = 'CONSTSVC'
                       THEN (SELECT COUNT(1)
                             FROM GR GR
                             WHERE GR.TEN_ID = HD.TEN_ID
                               AND GR.PO_NO = HD.PO_NO
                               AND GR.GR_STS_CCD = 'PP_CMPLD'
                               AND GR.STS != 'D')
                   ELSE 0
            END                                                                    AS PAY_COMP_CNT
             , CASE
                   WHEN HD.CSTM_YN = 'Y'
                       AND (SELECT COUNT(CS.VD_CD)
                            FROM PO_CSTM_VD CS
                            WHERE CS.TEN_ID = HD.TEN_ID
                              AND CS.PO_UUID = HD.PO_UUID
                              AND (CS.AMT IS NULL OR CS.AMT = 0)
                              AND CS.STS != 'D') = 0
                       THEN 'Y'
                   ELSE 'N'
            END                                                                    AS SET_CS_AMT_YN
             , HD.CNTR_UUID
            , HD.CNTR_NO
            , CASE WHEN HD.GE_SUBJ_YN IS NULL OR HD.GE_SUBJ_YN = '' THEN 'N'
                   ELSE HD.GE_SUBJ_YN
               END AS GE_SUBJ_YN
            , PO_GE_MAPG.GE_UUID
            , HD.PO_REQ_RCPT_UUID
            , PO_CNTR_REQ.PO_CNTR_REQ_UUID
            , PO_CNTR_REQ.REQ_STS_CCD AS PO_CNTR_REQ_STS_CCD
        FROM PO HD
       INNER JOIN VD VD
          ON VD.TEN_ID = HD.TEN_ID
         AND VD.VD_CD = HD.VD_CD
       INNER JOIN VD_OORG OG
          ON OG.TEN_ID = VD.TEN_ID
         AND OG.VD_CD = VD.VD_CD
         AND OG.OORG_CD IN (SELECT OOLM.CONNSUBJ_OORG_CD
                              FROM OORG_MAPG OOLM
                             WHERE OOLM.TEN_ID = HD.TEN_ID
                               AND OOLM.CONNSRC_OORG_CD = HD.OORG_CD
                               AND OOLM.CONN_TYP_CCD = 'POEO'
                               AND OOLM.CONN_YN = 'Y')
         AND OG.STS != 'D'
        LEFT OUTER JOIN USR MU
          ON MU.TEN_ID = HD.TEN_ID
         AND MU.USR_ID = HD.PO_CHG_REQR_ID
        LEFT OUTER JOIN USR CU
          ON CU.TEN_ID = HD.TEN_ID
         AND CU.USR_ID = HD.PO_TRMN_PIC_ID
        LEFT OUTER JOIN PO_GE_MAPG
          ON PO_GE_MAPG.TEN_ID = HD.TEN_ID
         AND PO_GE_MAPG.PO_UUID = HD.PO_UUID
        LEFT OUTER JOIN PO_CNTR_REQ
          ON PO_CNTR_REQ.TEN_ID = HD.TEN_ID
         AND PO_CNTR_REQ.PO_UUID = HD.PO_UUID
    </sql>
    <select id="findPoHeader" resultType="map">
    /* po.findPoHeader: 발주 상세정보 조회 */
    <include refid="sql_selectPoHeader"/>
     WHERE HD.TEN_ID = #{g.tenant}
       AND HD.PO_UUID  = #{p.po_uuid}
       AND HD.STS   != 'D'
    </select>
    <select id="findPoHeaderByPoNoAndPoRev" resultType="map">
    /* po.findPoHeaderByPoNoAndPoRev: 발주 상세정보 조회 */
    <include refid="sql_selectPoHeader"/>
     WHERE HD.TEN_ID = #{g.tenant}
       AND HD.PO_NO  = #{p.po_no}
       AND HD.PO_REVNO = CAST(#{p.po_revno} AS INT)
       AND HD.STS   != 'D'
    </select>
    <select id="findCurrentPo" resultType="map">
    /* po.findCurrentPo: 현재 유효한 발주의 상세정보 조회 */
    <include refid="sql_selectPoHeader"/>
     WHERE HD.TEN_ID     = #{g.tenant}
       AND HD.PO_NO      = #{p.po_no}
       AND HD.EFCT_PO_YN = 'Y'
       AND HD.STS       != 'D'
    </select>
    <select id="getMaxRevisionPoHeader" resultType="int">
    /* po.getMaxRevisionPoHeader: 발주차수(최대값) */
    SELECT MAX(HD.PO_REVNO)
      FROM PO HD
     WHERE HD.TEN_ID = #{g.tenant}
       AND HD.PO_NO = #{p.po_no}
       AND HD.STS != 'D'
    </select>
    <select id="checkGrPoItems" resultType="java.lang.String">
    /* po.checkGrPoItems */
    SELECT CASE WHEN SUM(T.CNT) &gt; 0
                     THEN 'Y'
                ELSE 'N'
           END AS HAS_GR_ITEM
      FROM (SELECT COUNT(1) AS CNT
              FROM ASN_ITEM
             WHERE TEN_ID      = #{g.tenant}
               AND PO_NO       = #{p.po_no}
               AND ASN_STS_CCD = 'GR_REQ' /* 검수/기성 요청*/
               AND STS        != 'D'
             UNION ALL
            SELECT COUNT(1) AS CNT
              FROM GR_ITEM
             WHERE TEN_ID      = #{g.tenant}
               AND PO_NO       = #{p.po_no}
               AND GR_ITEM_STS_CCD = 'GR_PRGSG' /* 검수/기성 진행*/
               AND STS        != 'D'
           ) T
    </select>
    <select id="checkPoItemState" resultType="map">
    /* po.checkPoItemState : 발주변경 또는 발주해지 시 발주품목 상태를 체크한다 */
    SELECT T.PO_NO
	     , T.PO_LNO
	     , T.CHECK_RESULT
	  FROM ( SELECT PO_NO                          AS PO_NO
	              , NULL                           AS PO_LNO
	              , 'PO_COMPLETE'                  AS CHECK_RESULT
	           FROM PO
	          WHERE TEN_ID     = #{g.tenant}
                AND PO_UUID      = #{p.po_uuid}
                AND PO_CMPLD_YN = 'Y'
	          UNION ALL
	         SELECT PODT.PO_NO                     AS PO_NO
                  , CASE WHEN POHD.PURC_TYP_CCD = 'QTY'
                              THEN PODT.PO_LNO
                         ELSE NULL /*공사용역인 경우 기성은 PO단위로 생성*/
                    END                            AS PO_LNO
                  , CASE WHEN ( SELECT COUNT(1)
                                  FROM ASN_ITEM ARDT
                                 WHERE ARDT.TEN_ID      = #{g.tenant}
                                   AND ARDT.PO_NO       = PODT.PO_NO
                                   AND ARDT.PO_LNO      = PODT.PO_LNO
                                   AND ARDT.ASN_STS_CCD = 'GR_REQ' /* 검수/기성 요청*/
                                   AND ARDT.STS        != 'D'
                              )
                            + ( SELECT COUNT(1) AS CNT
                                  FROM GR_ITEM GRDT
                                 WHERE GRDT.TEN_ID      = #{g.tenant}
                                   AND GRDT.PO_NO       = PODT.PO_NO
                                   AND GRDT.PO_LNO      = PODT.PO_LNO
                                   AND GRDT.GR_ITEM_STS_CCD = 'GR_PRGSG' /* 검수/기성 진행*/
                                   AND GRDT.STS        != 'D'
                              ) &gt; 0
                              THEN 'HAS_GR_ITEM'
                         ELSE NULL
                    END                              AS CHECK_RESULT
               FROM PO POHD
              INNER JOIN PO_ITEM PODT
                 ON PODT.TEN_ID = POHD.TEN_ID
                AND PODT.PO_UUID  = POHD.PO_UUID
                AND PODT.STS   != 'D'
              WHERE POHD.TEN_ID      = #{g.tenant}
                AND POHD.PO_UUID       = #{p.po_uuid}
                AND POHD.PO_CMPLD_YN != 'Y'
           ) T
     WHERE T.CHECK_RESULT IS NOT NULL <if test="p.purc_typ_ccd != 'QTY'">
     GROUP BY T.PO_NO, T.PO_LNO, T.CHECK_RESULT
     </if>
     ORDER BY T.PO_NO, CAST(T.PO_LNO AS INT)
    </select>
    <update id="updatePreviousPo">
	/* po.updatePreviousPo */
	UPDATE PO
       SET EFCT_PO_YN = 'N'
     WHERE TEN_ID     = #{g.tenant}
       AND PO_NO      = (SELECT PO_NO FROM PO WHERE TEN_ID = #{g.tenant} AND PO_UUID = #{p.po_uuid})
       AND EFCT_PO_YN = 'Y'
	</update>
    <update id="updateCurrentPo">
    /* po.updateCurrentPo : 현재 유효한 PO여부를 업데이트 한다. */
    UPDATE PO
       SET EFCT_PO_YN = 'Y'
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID  = #{p.po_uuid}
    </update>
    <select id="findListPoHistory" resultType="map">
    /* po.findListPoHistory */
    SELECT POHD.PO_UUID
         , POHD.PO_REVNO
         , POHD.PO_TIT
         , POHD.CUR_CCD
         , POHD.PO_AMT
         , POHD.CNTR_ST_DT
         , POHD.CNTR_EXP_DT
         , POHD.PO_CRN_DT
         , POHD.PO_RMK
         , POHD.PO_CHG_REQ_RSN
         , ( SELECT COUNT(ATT.ATHF_UUID)
                    FROM ATHF ATT
                   WHERE ATT.TEN_ID = POHD.TEN_ID
                     AND ATT.ATHG_UUID = POHD.ATHG_UUID )
           AS ATT_CNT
         , POHD.ATHG_UUID
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_NO  = #{p.po_no}
       AND POHD.STS   != 'D'
     ORDER BY POHD.PO_REVNO
    </select>
    <select id="findComparePoData" resultType="map">
    /* po.findComparePoData */
    SELECT PREV_POHD.PO_UUID            AS PREV_PO_UUID
         , POST_POHD.PO_UUID            AS POST_PO_UUID
         , PREV_POHD.PO_REVNO           AS PREV_PO_REVNO
         , POST_POHD.PO_REVNO           AS POST_PO_REVNO
         , PREV_POHD.PO_TIT           AS PREV_PO_TIT
         , POST_POHD.PO_TIT           AS POST_PO_TIT
         , PREV_POHD.CUR_CCD              AS PREV_CUR_CCD
         , POST_POHD.CUR_CCD              AS POST_CUR_CCD
         , PREV_POHD.PO_AMT       AS PREV_PO_AMT
         , POST_POHD.PO_AMT       AS POST_PO_AMT
         , PREV_POHD.CNTR_AMT         AS PREV_CNTR_AMT
         , POST_POHD.CNTR_AMT         AS POST_CNTR_AMT
         , PREV_POHD.SUP_AMT       AS PREV_SUP_AMT
         , POST_POHD.SUP_AMT       AS POST_SUP_AMT
         , PREV_POHD.VAT_AMT          AS PREV_VAT_AMT
         , POST_POHD.VAT_AMT          AS POST_VAT_AMT
         , PREV_POHD.CNTR_ST_DT      AS PREV_CNTR_ST_DT
         , POST_POHD.CNTR_ST_DT      AS POST_CNTR_ST_DT
         , PREV_POHD.CNTR_EXP_DT      AS PREV_CNTR_EXP_DT
         , POST_POHD.CNTR_EXP_DT      AS POST_CNTR_EXP_DT
         , PREV_POHD.PO_CRN_DT      AS PREV_PO_CRN_DT
         , POST_POHD.PO_CRN_DT      AS POST_PO_CRN_DT
         , PREV_POHD.PO_RMK           AS PREV_PO_RMK
         , POST_POHD.PO_RMK           AS POST_PO_RMK
         , PREV_POHD.PO_CHG_REQ_RSN    AS PREV_PO_CHG_REQ_RSN
         , POST_POHD.PO_CHG_REQ_RSN    AS POST_PO_CHG_REQ_RSN
         , PREV_POHD.ATHG_UUID           AS PREV_ATHG_UUID
         , POST_POHD.ATHG_UUID           AS POST_ATHG_UUID
         , PREV_POHD.PYMTMETH_USE_YN     AS PREV_PYMTMETH_USE_YN
         , POST_POHD.PYMTMETH_USE_YN     AS POST_PYMTMETH_USE_YN
         , PREV_POHD.PYMTMETH_CCD     AS PREV_PYMTMETH_CCD
         , POST_POHD.PYMTMETH_CCD     AS POST_PYMTMETH_CCD
         , PREV_POHD.PYMTMETH_EXPLN   AS PREV_PYMTMETH_EXPLN
         , POST_POHD.PYMTMETH_EXPLN   AS POST_PYMTMETH_EXPLN
         , PREV_POHD.DLVYMETH_USE_YN    AS PREV_DLVYMETH_USE_YN
         , POST_POHD.DLVYMETH_USE_YN    AS POST_DLVYMETH_USE_YN
         , PREV_POHD.DLVYMETH_CCD    AS PREV_DLVYMETH_CCD
         , POST_POHD.DLVYMETH_CCD    AS POST_DLVYMETH_CCD
         , PREV_POHD.DLVYMETH_EXPLN  AS PREV_DLVYMETH_EXPLN
         , POST_POHD.DLVYMETH_EXPLN  AS POST_DLVYMETH_EXPLN
         , PREV_POHD.TAX_TYP_CCD           AS PREV_TAX_TYP_CCD
         , POST_POHD.TAX_TYP_CCD           AS POST_TAX_TYP_CCD
         , PREV_POHD.PYMTMETH_CND         AS PREV_PYMTMETH_CND
         , POST_POHD.PYMTMETH_CND         AS POST_PYMTMETH_CND
      FROM PO PREV_POHD
     INNER JOIN PO POST_POHD
        ON POST_POHD.TEN_ID = PREV_POHD.TEN_ID
       AND POST_POHD.PO_NO  = PREV_POHD.PO_NO
       AND POST_POHD.PO_REVNO = CAST(#{p.post_po_revno} AS INT)
       AND POST_POHD.STS   != 'D'
     WHERE PREV_POHD.TEN_ID = #{g.tenant}
       AND PREV_POHD.PO_NO  = #{p.po_no}
       AND PREV_POHD.PO_REVNO = CAST(#{p.prev_po_revno} AS INT)
       AND PREV_POHD.STS   != 'D'
    </select>
    <select id="findRfxIdByPoId" resultType="java.lang.String">
    /* po.findRfxIdByPoId */
    SELECT POHD.RFX_UUID
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID  = #{p.po_uuid}
    </select>
    <select id="comparePoHdSts" resultType="map">
    /* po.comparePoHdSts */
    SELECT POHD.PO_UUID
         , POHD.PO_NO
         , POHD.PO_REVNO
         , POHD.EFCT_PO_YN
         , POHD.PO_CMPLD_YN
         , POHD.PO_STS_CCD
         , ( SELECT CDDL.DTLCD_NM
               FROM DTLCD CDDT
              INNER JOIN DTLCD_MULTLANG CDDL
                 ON CDDL.TEN_ID  = CDDT.TEN_ID
                AND CDDL.CCD  = CDDT.CCD
                AND CDDL.DTLCD  = CDDT.DTLCD
                AND CDDL.LANG_CCD = #{g.locale}
                AND CDDL.STS    != 'D'
              WHERE CDDT.TEN_ID = POHD.TEN_ID
                AND CDDT.CCD = 'P038'    /* 발주 진행상태 */
                AND CDDT.DTLCD = POHD.PO_STS_CCD
                AND CDDT.USE_YN = 'Y'
                AND CDDT.STS   != 'D'
           ) AS PO_STS_CCD_NM
         , POHD.PO_CHG_REQ_STS_CCD
         , ( SELECT CDDL.DTLCD_NM
               FROM DTLCD CDDT
              INNER JOIN DTLCD_MULTLANG CDDL
                 ON CDDL.TEN_ID  = CDDT.TEN_ID
                AND CDDL.CCD  = CDDT.CCD
                AND CDDL.DTLCD  = CDDT.DTLCD
                AND CDDL.LANG_CCD = #{g.locale}
                AND CDDL.STS    != 'D'
              WHERE CDDT.TEN_ID = POHD.TEN_ID
                AND CDDT.CCD = 'P039'    /* 발주변경 진행상태 */
                AND CDDT.DTLCD = POHD.PO_CHG_REQ_STS_CCD
                AND CDDT.USE_YN = 'Y'
                AND CDDT.STS   != 'D'
           ) AS PO_STS_CCD_NM
         , POHD.PO_CHG_REQ_APVL_STS_CCD
         , ( SELECT CDDL.DTLCD_NM
               FROM DTLCD CDDT
              INNER JOIN DTLCD_MULTLANG CDDL
                 ON CDDL.TEN_ID  = CDDT.TEN_ID
                AND CDDL.CCD  = CDDT.CCD
                AND CDDL.DTLCD  = CDDT.DTLCD
                AND CDDL.LANG_CCD = #{g.locale}
                AND CDDL.STS    != 'D'
              WHERE CDDT.TEN_ID = POHD.TEN_ID
                AND CDDT.CCD = 'P011'    /* 발주변경 승인상태 */
                AND CDDT.DTLCD = POHD.PO_CHG_REQ_APVL_STS_CCD
                AND CDDT.USE_YN = 'Y'
                AND CDDT.STS   != 'D'
           ) AS PO_CHG_REQ_APVL_STS_CCD_NM
         , CASE WHEN POHD.PO_CMPLD_YN = 'N'
                <choose>
                    <when test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd == &quot;TRMN&quot;">
                 AND POHD.EFCT_PO_YN  = 'Y'
                 AND POHD.PO_STS_CCD = 'APVD'
                    </when>
                    <otherwise>
                        <if test="p.po_sts_ccd != null and p.po_sts_ccd != ''">
                 AND POHD.PO_STS_CCD = #{p.po_sts_ccd}
                        </if>
                        <if test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd == &quot;CHG&quot;">
                            <if test="p.po_chg_req_typ_ccd != null and p.po_chg_req_typ_ccd == &quot;PURC_REQR&quot; and p.po_chg_req_apvl_sts_ccd != null">
                 AND POHD.PO_CHG_REQ_STS_CCD = #{p.po_chg_req_apvl_sts_ccd}
                            </if>
                            <if test="p.po_chg_req_apvl_sts_ccd != null and p.po_chg_req_apvl_sts_ccd != &quot;&quot;">
                 AND POHD.PO_CHG_REQ_APVL_STS_CCD = #{p.po_chg_req_apvl_sts_ccd}
                            </if>
                        </if>
                    </otherwise>
                </choose>
                     THEN 'Y'
                ELSE 'N'
           END  AS VALID_YN
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID  = #{p.po_uuid}
    </select>
    <select id="checkPrevPoHdSts" resultType="map">
    /* po.checkPrevPoHdSts */
    SELECT T.PO_UUID
         , T.PO_NO
         , T.PO_REVNO
         , T.EFCT_PO_YN
         , T.PO_CMPLD_YN
         , T.PO_STS_CCD
         , T.MAX_PO_REVNO
         , CASE WHEN T.PO_CMPLD_YN  = 'N'
                 AND T.EFCT_PO_YN  = 'Y'
                 AND T.PO_STS_CCD = 'APVD'
                 AND T.PO_REVNO      = T.MAX_PO_REVNO
                     THEN 'Y'
                ELSE 'N'
           END  AS VALID_YN
      FROM ( SELECT POHD.PO_UUID
                  , POHD.PO_NO
                  , POHD.PO_REVNO    AS PO_REVNO
                  , POHD.EFCT_PO_YN
                  , POHD.PO_CMPLD_YN
                  , POHD.PO_STS_CCD
                  , ( SELECT MAX(HD.PO_REVNO)
                        FROM PO HD
                       WHERE HD.TEN_ID = #{g.tenant}
                         AND HD.PO_NO  = #{p.po_no}
                         AND HD.STS   != 'D'
                    )    AS MAX_PO_REVNO
               FROM PO POHD
              WHERE POHD.TEN_ID = #{g.tenant}
                AND POHD.PO_NO  = #{p.po_no}
                AND POHD.PO_REVNO = CAST(#{p.po_revno} AS INT) -1
                AND POHD.STS   != 'D'
           ) T
    </select>
    <select id="findStamptaxAmtRange" resultType="map">
    /* po.findStamptaxAmtRange 인지세 금액 구간 조회 */
     SELECT DTL.CCD
          ,DTL.DTLCD
          ,DTLMULT.DTLCD_NM
          ,CCCV1.CSTR_CND_VAL AS MIN
          ,CCCV2.CSTR_CND_VAL  AS MAX
      FROM DTLCD DTL
         INNER JOIN DTLCD_MULTLANG DTLMULT
        ON DTLMULT.TEN_ID = DTL.TEN_ID
       AND DTLMULT.CCD = DTL.CCD
       AND DTLMULT.DTLCD = DTL.DTLCD
     INNER JOIN CCD_CSTR_CND_VAL CCCV1
        ON CCCV1.TEN_ID = DTL.TEN_ID
       AND CCCV1.CCD = DTL.CCD
       AND CCCV1.DTLCD = DTL.DTLCD
     INNER JOIN CCD_CSTR_CND_VAL CCCV2
        ON CCCV2.TEN_ID = DTL.TEN_ID
       AND CCCV2.CCD = DTL.CCD
       AND CCCV2.DTLCD = DTL.DTLCD
     WHERE DTL.CCD = #{p.grp_cd} 
       AND DTLMULT.LANG_CCD = #{g.locale}
       AND DTL.USE_YN = 'Y'
       AND CCCV1.CSTR_CND_CD = 'MIN_AMT'
       AND CCCV2.CSTR_CND_CD = 'MAX_AMT'
     ORDER BY DTL.DTLCD_SORT
    </select>
    <update id="savePoReset">
    /*po.savePoReset : PO 상태 변경*/
    UPDATE PO
       SET PO_STS_CCD = 'CRNG'
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID = #{p.po_uuid} 
    </update>
	<select id="findOrderCntrInfo" resultType="map">
	/* po.findOrderCntrInfo 전자계약 발주 정보 조회*/
	SELECT POHD.PO_UUID                           AS PO_UUID
		 , POHD.PO_NO                             AS PO_NO
		 , POHD.PO_REVNO                          AS PO_REVNO
		 , POHD.OORG_CD
		 , OGMG.LOGIC_ORG_NM                      AS COMP_NM
		 , VDGL.VD_CD                             AS VD_CD
		 , VDGL.ERP_VD_CD
		 , VDGL.VD_NM                             AS VD_NM
		 , POHD.PO_TIT                            AS CNTR_NM
		 , POHD.PYMTMETH_CCD                      AS PYMTMETH_CCD
		 , POHD.DLVYMETH_CCD                      AS DLVYMETH_CCD
		 , POHD.PURC_TYP_CCD                      AS PURC_TYP_NM
		 , POHD.PO_CRN_DT                         AS PO_CRN_DT
		 , POHD.PO_CRN_DT                         AS CNTR_DT
		 , POHD.CNTR_ST_DT                        AS CNTR_ST_DT
		 , POHD.CNTR_EXP_DT                       AS CNTR_EXP_DT
		 , OGMG.ADDR                              AS ADDR                 /* 갑 주소 */
		 , OGMG.CEO_NM                            AS CEO_NM               /* 갑 대표이사 */
		 , VDGL.DTL_ADDR_1                        AS VD_ADDR              /* 을 주소 */
		 , VDGL.CEO_NM                            AS VD_CEO_NM            /* 을 대표이사 */
		 , 'PO_CNTRDOC'                           AS CNTR_TYP_CCD
		 , CONCAT(CONCAT(CONCAT((SELECT DTLCD_NM
		                           FROM DTLCD_MULTLANG
		                          WHERE TEN_ID = #{g.tenant}
		                            AND CCD = 'P010'
		                            AND LANG_CCD = #{g.locale}
		                            AND DTLCD = POHD.DLVYMETH_CCD), '('), POHD.DLVYMETH_EXPLN), ')') AS TRANS_CONDITION
		 , POHD.DLVYMETH_EXPLN                   AS DLVYMETH_EXPLN
		 , CONCAT(CONCAT(CONCAT((SELECT DTLCD_NM
		                           FROM DTLCD_MULTLANG
		                          WHERE TEN_ID = #{g.tenant}
		                            AND CCD = 'P009'
		                            AND LANG_CCD = #{g.locale}
		                            AND DTLCD = POHD.PYMTMETH_CCD), '('), POHD.PYMTMETH_EXPLN), ')') AS PAY_CONDITION
		 , POHD.PYMTMETH_EXPLN                   AS PYMTMETH_EXPLN
		 , POHD.PO_UUID                          AS REF_CNTR_UUID
		 , POHD.PO_NO                            AS REF_CNTR_NO
		 , POHD.PO_REVNO                         AS REF_CNTR_REVNO
		 , POHD.DEFPGUR_RO                       AS DEFPGUR_RO
		 , POHD.CPGUR_RO                         AS CPGUR_RO
		 , POHD.CPGUR_AMT                        AS CONT_PRIC_AMT
		 , POHD.DFRM_RO                          AS DFRM_RO           /* 지체상금율 */
		 , POHD.APYMT_AMT                        AS APYMT_AMT          /* 선급금*/
		 , POHD.APYMT_RO                         AS APYMT_RO         /* 선급금율*/
		 , POHD.APYMTGUR_AMT                     AS PREP_PRIC_AMT          /* 선급금이행보증금*/
		 , POHD.APYMTGUR_RO                      AS APYMTGUR_RO         /* 선급금이행보증률*/
		 , POHD.IPYMT_AMT                        AS IPYMT_AMT          /* 중도금 */
		 , POHD.IPYMT_RO                         AS IPYMT_RO          /* 중도금율*/
		 , POHD.BAL_AMT                          AS BAL_AMT          /* 잔금 */
		 , POHD.BAL_RO                           AS BAL_RO          /* 잔금율 */
		 , POHD.PYMTMETH_CND                     AS PYMTMETH_CND             /* 지불설명 */
		 , POHD.DEFPGUR_RO                       AS DEFPGUR_RO            /*하자*/
		 , POHD.DEFPGUR_AMT                      AS MORG_PRIC_AMT            /*하자*/
		 , CONCAT(CONCAT(CONCAT((SELECT DTLCD_NM
		                           FROM DTLCD_MULTLANG
		                          WHERE TEN_ID = #{g.tenant}
		                            AND CCD = 'P048'
		                            AND LANG_CCD = #{g.locale}
		                            AND DTLCD = POHD.DEFPGUR_PD_TYP_CCD), '로부터 '), POHD.DEFPGUR_PD), '개월') AS MORG_BOND_PERIOD
		 , POHD.RFX_NO
		 , POHD.CNTR_AMT
		 , POHD.SUP_AMT
		 , POHD.VAT_AMT 
		 , POHD.CUR_CCD
		 , STAX_YN
		 , STTPYMT_RO_TYP_CCD
		 , POHD.CSTM_YN     AS CSTM_YN
		 , #{p.uprccntr_no} AS UPRCCNTR_NO
		 , CPGUR_USE_YN
		 , DEFPGUR_USE_YN
		 , (SELECT DTLCD_NM
		      FROM DTLCD_MULTLANG
		     WHERE TEN_ID = #{g.tenant}
		       AND CCD = 'P064'
		       AND LANG_CCD = #{g.locale}
		       AND DTLCD = POHD.CPGUR_TYP_CCD) AS CONT_BOND_CLS_NM
		 , (SELECT DTLCD_NM
		     FROM DTLCD_MULTLANG
		     WHERE TEN_ID = #{g.tenant}
		       AND CCD = 'P064'
		       AND LANG_CCD = #{g.locale}
		       AND DTLCD = POHD.DEFPGUR_TYP_CCD) AS MORG_BOND_CLS_NM
		 , (SELECT DTLCD_NM
		     FROM DTLCD_MULTLANG
		     WHERE TEN_ID = #{g.tenant}
		       AND CCD = 'P048'
		       AND LANG_CCD = #{g.locale}
		       AND DTLCD = POHD.DEFPGUR_PD_TYP_CCD) AS MORG_BOND_COND_NM
		 , 'Y' AS DYNAMIC_REM
		 , OGMG.LOGIC_ORG_NM_EN                                   AS COMP_NM_EN
		 , OGMG.ADDR_EN
		 , OGMG.CEO_NM_EN
		 , POHD.CNTR_NO
	  FROM PO POHD
	 INNER JOIN VD VDGL     /*협력사*/
	    ON POHD.TEN_ID = VDGL.TEN_ID
	   AND POHD.VD_CD  = VDGL.VD_CD
	 INNER JOIN LOGIC_ORG OGMG     /*조직*/
	    ON OGMG.TEN_ID = POHD.TEN_ID
	   AND OGMG.LOGIC_ORG_TYP_CCD = 'COMPANY'
	   AND OGMG.LOGIC_ORG_CD = ( SELECT PARNODE_LOGIC_ORG_CD
	                               FROM LOGIC_ORG
	                              WHERE TEN_ID = POHD.TEN_ID
	                                AND LOGIC_ORG_CD = (SELECT LOGIC_ORG_CD
	                                                      FROM OORG
	                                                     WHERE TEN_ID = POHD.TEN_ID
	                                                       AND OORG_CD = POHD.OORG_CD) )
	   AND OGMG.USE_YN = 'Y'
	   AND OGMG.STS != 'D'
	 WHERE POHD.TEN_ID = #{g.tenant}
	   AND POHD.PO_UUID = #{p.po_uuid}
	   AND POHD.STS != 'D'
	</select>
    <sql id="findProgressPaymentBaseDataByPo">
    SELECT PO.TEN_ID
         , PO.PO_UUID
         , PO.VD_CD
         , PO.PO_NO           /*발주번호*/
         , PO.PO_REVNO          /*발주차수*/
         , PO.OORG_CD     /*운영조직*/
         , PO.PO_TIT          /*발주명*/
         , PO.PO_TIT AS GR_TIT /*발주명을 기성명으로*/
         , PO.PURC_TYP_CCD
         , PO.CUR_CCD             /*통화*/
         , (CASE WHEN PO.PO_AMT  IS NULL THEN 0 ELSE PO.PO_AMT  END) AS PO_AMT  /*발주금액*/
         , ( SELECT SUM(POPP.PYMT_AMT)
               FROM PO_PYMT_EXPT POPP
              WHERE POPP.TEN_ID     = PO.TEN_ID
                AND POPP.PO_UUID      = PO.PO_UUID
                AND POPP.PYMT_TYP_CCD = 'APYMT'
           ) AS APYMT_AMT   /*선급금*/
         , PO.VD_PIC_NM       /*구매담당명(협력사 담당자 아이디)*/
         , PO.PO_CRN_DT     /*발주일자*/
         , PO.PO_STS_CCD     /*발주진행상태*/
         , PO.VD_PO_STS_CCD     /*협력사접수상태*/
         , PO.PYMTMETH_CCD
         , PO.PYMTMETH_EXPLN
         , PO.DLVYMETH_CCD
         , PO.DLVYMETH_EXPLN
         , PO.PURC_GRP_CD
         , AR.ASN_DT         /*기성요청일자*/
         , (CASE WHEN AR.ASN_AMT IS NULL THEN 0 ELSE AR.ASN_AMT END) AS ASN_AMT    /*요청금액*/
         , (CASE WHEN GR.GR_TTL_AMT IS NULL THEN 0 ELSE GR.GR_TTL_AMT END) AS GR_TTL_AMT    /*승인금액*/
         , PO.GR_STS_CCD
         , PO.PO_CMPLD_YN
         , VD.ERP_VD_CD
         , (CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
                 ELSE VD.VD_NM
             END) AS DISP_VD_NM
         , GP.GR_COUNT
      FROM PO PO
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = PO.TEN_ID
       AND VD.VD_CD = PO.VD_CD
      LEFT OUTER JOIN (
               SELECT A.TEN_ID
                    , A.PO_NO
                    , SUM(CASE WHEN A.ASN_AMT IS NULL THEN 0 ELSE A.ASN_AMT END) AS ASN_AMT /* 요청금액 */
                    , MAX(A.ASN_DT) AS ASN_DT
                 FROM ASN A
                WHERE A.ASN_STS_CCD IN ('WTG', 'PRGSG', 'CMPLD') /* S:기성승인대기,P:기성진행중,C:기성완료 */
                  AND A.STS != 'D'
                GROUP BY A.TEN_ID, A.PO_NO
           ) AR
        ON PO.TEN_ID = AR.TEN_ID
       AND PO.PO_NO = AR.PO_NO
      LEFT OUTER JOIN (
               SELECT A.TEN_ID
                    , A.PO_NO
                    , SUM(CASE WHEN A.GR_AMT IS NULL THEN 0 ELSE A.GR_AMT END) AS GR_TTL_AMT /* 승인금액 */
                 FROM GR A
                WHERE A.GR_STS_CCD = 'PP_CMPLD' /* C:검수완료 */
                  AND A.STS != 'D'
                GROUP BY A.TEN_ID, A.PO_NO
           ) GR
        ON PO.TEN_ID = GR.TEN_ID
       AND PO.PO_NO  = GR.PO_NO
      LEFT OUTER JOIN (
               SELECT A.TEN_ID
                    , A.PO_NO
                    , COUNT(*) AS GR_COUNT /* 기성 상세수 */
                 FROM GR A
                WHERE A.GR_STS_CCD != 'PP_CNCL' -- 취소 상태 제외
                  AND A.STS != 'D'
                GROUP BY A.TEN_ID, A.PO_NO
           ) GP
        ON PO.TEN_ID = GP.TEN_ID
       AND PO.PO_NO = GP.PO_NO
     WHERE PO.TEN_ID      = #{g.tenant}
       AND PO.PO_STS_CCD = 'APVD'   /* C:계약승인완료 */
       AND PO.PURC_TYP_CCD    = 'CONSTSVC' /* CONSTSVC:공사용역 */
       AND PO.STS        != 'D'
    </sql>
    <select id="searchProgressPaymentRequestTarget" resultType="map">
    /* po.searchProgressPaymentRequestTarget: 기성요청대상 목록 */
    <include refid="findProgressPaymentBaseDataByPo"/>
       <if test="p.from_po_crn_dt != null">
       AND PO.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null">
       AND PO.PO_CRN_DT <![CDATA[<=]]> #{p.to_po_crn_dt}
       </if>
       <if test="p.gr_sts_ccd != null and p.gr_sts_ccd != &quot;&quot;">
       AND PO.GR_STS_CCD = #{p.gr_sts_ccd}
       </if>
       <if test="p.erp_vd_cd != null and p.erp_vd_cd != &quot;&quot;">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
       AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
       </if>
       <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
       AND    (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))      /* 협력사 명 검색조건*/
       </if>
       <if test="p.po_tit != null and p.po_tit != ''">
           <bind name="p_po_tit" value="'%' + p.po_tit + '%'"/>
       AND UPPER(PO.PO_TIT) LIKE UPPER(#{p_po_tit})
       </if>
       <if test="p.purc_grp_cd != null and p.purc_grp_cd != &quot;&quot;">
       AND EXISTS ( SELECT 1
                      FROM PO_ITEM PODT
                     WHERE PODT.TEN_ID      = PO.TEN_ID
                       AND PODT.PO_UUID       = PO.PO_UUID
                       AND PODT.PURC_CCD = #{p.purc_grp_cd}
                  )
       </if>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND PO.PO_NO IN
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND PO.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
       <choose>
           <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
       AND PO.OORG_CD IN
               <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
                   #{oorg_cd}
               </foreach>
           </when>
           <otherwise>
       AND PO.OORG_CD = '0'
           </otherwise>
       </choose>
       <choose>
           <when test="p.asn_nos != null and p.asn_nos.size() != 0">
       AND PO.PO_UUID IN (
               SELECT PO_UUID
                 FROM ASN
                WHERE TEN_ID = PO.TEN_ID
                  AND ASN_NO IN
               <foreach close=")" collection="p.asn_nos" item="asn_no" open="(" separator=",">
                   #{asn_no}
               </foreach>
                  AND STS != 'D'
           )
           </when>
           <otherwise>
               <if test="p.asn_no != null and p.asn_no != ''">
                   <bind name="p_asn_no" value="'%' + p.asn_no + '%'"/>
       AND PO.PO_UUID IN (
               SELECT PO_UUID
                 FROM ASN
                WHERE TEN_ID = PO.TEN_ID
                  AND ASN_NO LIKE UPPER(#{p_asn_no})
                  AND STS != 'D'
           )
               </if>
           </otherwise>
       </choose>
     ORDER BY PO.PO_NO DESC
             ,PO.PO_REVNO DESC
    </select>
    <!-- 선급금요청을 위한 발주 헤더 조회 -->
    <select id="findAdvancePaymentInfomationByPoUuId" resultType="map">
    /* po.findAdvancePaymentInfomationByPoUuId: 검수 선급금 조회 */
    <include refid="findProgressPaymentBaseDataByPo"/>
       AND PO.PO_UUID = #{p.po_uuid}
    </select>
    <!-- 선급금요청 가능여부 체크 -->
    <select id="checkAdvancePaymentRequestable" resultType="map">
    /* po.checkAdvancePaymentRequestable */
    SELECT T.PO_NO
         , T.CHECK_RESULT
      FROM ( SELECT POHD.PO_NO             AS PO_NO
                  , CASE WHEN ( SELECT COUNT(1)
                                  FROM GR GR
                                 WHERE GR.TEN_ID       = POHD.TEN_ID
                                   AND GR.PO_NO        = POHD.PO_NO
                                   AND GR.GR_STS_CCD != 'PP_CNCL'  /* 기성취소 제외 */
                                   AND GR.STS         != 'D'
                              ) &gt; 0 -- 기성(선급금 포함) 건 존재
                              THEN 'EXIST_PRE_PAY_REG'            /* 선급금 등록건 존재 */
                         WHEN ( SELECT COUNT(1)
                                  FROM ASN AR
                                 WHERE AR.TEN_ID      = POHD.TEN_ID
                                   AND AR.PO_NO       = POHD.PO_NO
                                   AND AR.ASN_STS_CCD = 'CRNG'   /* 기성요청 임시저장 */
                                   AND AR.STS        != 'D'
                              ) &gt; 0
                              THEN 'EXIST_PRE_PAY_REQ_PROGRESS'   /* 선급금 요청 임시저장건 존재 */
                         WHEN ( SELECT COUNT(1)
                                  FROM ASN AR
                                 WHERE AR.TEN_ID      = POHD.TEN_ID
                                   AND AR.PO_NO       = POHD.PO_NO
                                   AND AR.ASN_STS_CCD = 'WTG'   /* 기성승인대기(기성요청) */
                                   AND AR.STS        != 'D'
                              ) &gt; 0
                              THEN 'EXIST_PRE_PAY_REQ'            /* 선급금 요청건 존재 */
                         WHEN POHD.PO_CMPLD_YN = 'Y'
                              THEN 'PO_COMPLETE'                  /* 발주종료 */
                         WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = POHD.TEN_ID
                                   AND A.PO_NO       = POHD.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = POHD.TEN_ID AND B.PO_NO = POHD.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D'
                                   AND A.PO_CHG_TYP_CCD     = 'TRMN'
                                   AND A.PO_STS_CCD = 'TRMN'    /* 발주 진행상태 (D:발주해지)*/
                              ) &gt; 0
                              THEN 'PO_TERMINATE'             /* 발주해지 */
                         WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = POHD.TEN_ID
                                   AND A.PO_NO       = POHD.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = POHD.TEN_ID AND B.PO_NO = POHD.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D'
                                   AND A.PO_CHG_TYP_CCD     = 'CHG'
                                   AND A.PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG')    /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중)*/
                              ) &gt; 0
                              THEN 'PO_CHANGE_PROGRESS'       /* 발주변경중 */
                         ELSE NULL
                    END                  AS CHECK_RESULT
               FROM PO POHD
              WHERE POHD.TEN_ID = #{g.tenant}
                AND POHD.PO_UUID  = #{p.po_uuid}
           ) T
     WHERE T.CHECK_RESULT IS NOT NULL </select>
	<select id="findListYearlyPoItemByVendor" resultType="map">
		/* po.findListYearlyPoItemByVendor: 특정 협력사에 대한 연도별 발주품목 별 발주누적금액 목록 조회 */
		SELECT SUBSTR(PO.PO_CRN_DT, 1, 4)  AS PO_YEAR
		     , PO.OORG_CD
		     , (
		        SELECT LOGIC_ORG.LOGIC_ORG_NM
		          FROM OORG OORG
		         INNER JOIN LOGIC_ORG LOGIC_ORG
		            ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
		           AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = OORG.LOGIC_ORG_TYP_CCD
		           AND LOGIC_ORG.LOGIC_ORG_CD      = OORG.LOGIC_ORG_CD
		           AND LOGIC_ORG.STS != 'D'
		         WHERE OORG.TEN_ID  = PO.TEN_ID
		           AND OORG.OORG_CD = PO.OORG_CD
		       )  AS OPER_ORG_NM
		     , PO_ITEM.ITEM_CD_CRN_TYP_CCD
		     , CASE WHEN PO_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS' THEN NULL
		            ELSE PO_ITEM.ITEM_CD
		        END AS DISP_ITEM_CD
		     , PO_ITEM.ITEM_CD
		     , PO_ITEM.ITEM_NM
		     , PO_ITEM.ITEM_SPEC
		     , PO_ITEM.ITEM_SPEC_DTL
		     , SUM(PO_ITEM.PO_AMT)  AS PO_AMT
		  FROM PO PO
		 INNER JOIN PO_ITEM PO_ITEM
		    ON PO_ITEM.TEN_ID  = PO.TEN_ID
		   AND PO_ITEM.PO_UUID = PO.PO_UUID
		 WHERE PO.TEN_ID = #{g.tenant}
		   <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
		       AND PO.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   AND PO.VD_CD        = #{p.vd_cd}
		   AND PO.PO_STS_CCD  = 'APVD'
		   AND PO.EFCT_PO_YN   = 'Y'  /* 유효한 PO 여부 */
		 GROUP BY PO.TEN_ID
		        , SUBSTR(PO.PO_CRN_DT, 1, 4)  , PO.OORG_CD
		        , PO_ITEM.ITEM_CD_CRN_TYP_CCD
		        , PO_ITEM.ITEM_CD
		        , PO_ITEM.ITEM_NM
		        , PO_ITEM.ITEM_SPEC
		        , PO_ITEM.ITEM_SPEC_DTL
		 ORDER BY SUBSTR(PO.PO_CRN_DT, 1, 4)  DESC
		        , PO.OORG_CD
		        , PO_ITEM.ITEM_CD_CRN_TYP_CCD
		        , PO_ITEM.ITEM_CD
	</select>
	<select id="findListYearlyPoTotAmtByVendor" resultType="map">
		/* po.findListYearlyPoTotAmtByVendor: 특정 협력사에 대한 연도별 운영단위 발주금액 및 증가율 목록 조회 */
		SELECT T.PO_YEAR
		     , T.OORG_CD
		     , T.OPER_ORG_NM
		     , T.PO_AMT
		     , T.PREV_PO_TOT_AMT
		     , CASE WHEN T.PREV_PO_TOT_AMT IS NULL THEN 0
		            ELSE (T.PO_AMT - T.PREV_PO_TOT_AMT) / T.PREV_PO_TOT_AMT * 100
		        END AS INCREASE_RATE
		  FROM (
		        SELECT SUBSTR(PO.PO_CRN_DT, 1, 4)  AS PO_YEAR
		             , PO.OORG_CD
		             , (
		                SELECT LOGIC_ORG.LOGIC_ORG_NM
		                  FROM OORG OORG
		                 INNER JOIN LOGIC_ORG LOGIC_ORG
		                    ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
		                   AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = OORG.LOGIC_ORG_TYP_CCD
		                   AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
		                   AND LOGIC_ORG.STS != 'D'
		                 WHERE OORG.TEN_ID  = PO.TEN_ID
		                   AND OORG.OORG_CD = PO.OORG_CD
		               ) AS OPER_ORG_NM
		             , SUM(PO.PO_AMT)  AS PO_AMT
		             , LEAD(SUM(PO.PO_AMT)) OVER (PARTITION BY PO.TEN_ID, PO.OORG_CD ORDER BY SUBSTR(PO.PO_CRN_DT, 1, 4)  DESC)  AS PREV_PO_TOT_AMT
		          FROM PO PO
		         WHERE PO.TEN_ID = #{g.tenant}
		           <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
		               AND PO.OORG_CD  IN
		               <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		                   #{oorg_cd}
		               </foreach>
		           </if>
		           AND PO.VD_CD      = #{p.vd_cd}
		           AND PO.PO_STS_CCD = 'APVD'
		           AND PO.EFCT_PO_YN = 'Y'  /* 유효한 PO 여부 */
		         GROUP BY PO.TEN_ID
		                , PO.OORG_CD
		                , SUBSTR(PO.PO_CRN_DT, 1, 4)  ) T
		 ORDER BY T.PO_YEAR DESC, T.OORG_CD
	</select>
	<select id="findListMonthlyPoTotAmtByVendor" resultType="map">
		/* po.findListMonthlyPoTotAmtByVendor: 특정 협력사에 대한 년월 별 발주금액 및 증가율 목록 조회 */
		SELECT T.PO_YEAR
		     , T.PO_MONTH
		     , T.PO_AMT
		     , T.PREV_PO_TOT_AMT
		     , CASE WHEN T.PREV_PO_TOT_AMT IS NULL THEN 0
		            ELSE (T.PO_AMT - T.PREV_PO_TOT_AMT) / T.PREV_PO_TOT_AMT * 100
		        END AS INCREASE_RATE
		  FROM (
		        SELECT SUBSTR(PO.PO_CRN_DT, 1, 4)  AS PO_YEAR
		             , SUBSTR(PO.PO_CRN_DT, 5, 2)  AS PO_MONTH
		             , SUM(PO.PO_AMT)             AS PO_AMT
		             , LAG(SUM(PO.PO_AMT)) OVER (ORDER BY SUBSTR(PO.PO_CRN_DT, 1, 4)  , SUBSTR(PO.PO_CRN_DT, 5, 2)  )  AS PREV_PO_TOT_AMT
		          FROM PO PO
		         WHERE PO.TEN_ID = #{g.tenant}
		           <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
		               AND PO.OORG_CD  IN
		               <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		                   #{oorg_cd}
		               </foreach>
		           </if>
		           AND PO.VD_CD      = #{p.vd_cd}
		           AND PO.PO_STS_CCD = 'APVD'
		           AND PO.EFCT_PO_YN = 'Y'  /* 유효한 PO 여부 */
		         GROUP BY SUBSTR(PO.PO_CRN_DT, 1, 4)  , SUBSTR(PO.PO_CRN_DT, 5, 2)  ) T
		 ORDER BY T.PO_YEAR, T.PO_MONTH
	</select>
	<select id="findListVendorPoTotAmtByItem" resultType="map">
		/* po.findListVendorPoTotAmtByItem: 특정 품목에 대한 협력사 별 발주누적금액 목록 조회 */
		SELECT POHD.OORG_CD
		     , (
		        SELECT OGMG.LOGIC_ORG_NM
		          FROM OORG OOMG
		         INNER JOIN LOGIC_ORG OGMG
		            ON OGMG.TEN_ID = OOMG.TEN_ID
		           AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
		           AND OGMG.LOGIC_ORG_CD = OOMG.LOGIC_ORG_CD
		           AND OGMG.STS != 'D'
		         WHERE OOMG.TEN_ID = POHD.TEN_ID
		           AND OOMG.OORG_CD = POHD.OORG_CD
		       )  AS OPER_ORG_NM
		     , POHD.VD_CD
		     , VDGL.VD_NM
		     , SUM(PODT.PO_AMT)  AS PO_AMT
		  FROM PO POHD
		 INNER JOIN PO_ITEM PODT
		    ON PODT.TEN_ID = POHD.TEN_ID
		   AND PODT.PO_UUID  = POHD.PO_UUID
		 INNER JOIN VD VDGL
		    ON VDGL.TEN_ID = POHD.TEN_ID
		   AND VDGL.VD_CD  = POHD.VD_CD
		 WHERE POHD.TEN_ID       = #{g.tenant}
		   AND POHD.OORG_CD IN
		   <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		       #{oorg_cd}
		   </foreach>
		   AND POHD.PO_STS_CCD = 'APVD'
		   AND POHD.EFCT_PO_YN = 'Y'  /* 유효한 PO 여부 */
		   AND PODT.ITEM_CD = #{p.item_cd}
		   AND PODT.STS != 'D'
		 GROUP BY POHD.TEN_ID, POHD.OORG_CD, POHD.VD_CD, VDGL.VD_NM
		 ORDER BY POHD.OORG_CD, POHD.VD_CD
	</select>
	<select id="findListVendorPoItemPriceByItem" resultType="map">
		/* po.findListVendorPoItemPriceByItem: 특정 품목에 대한 협력사 발주 이력 목록 조회 */
		SELECT POHD.OORG_CD
		     , (
		        SELECT OGMG.LOGIC_ORG_NM
		          FROM OORG OOMG
		         INNER JOIN LOGIC_ORG OGMG
		            ON OGMG.TEN_ID = OOMG.TEN_ID
		           AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
		           AND OGMG.LOGIC_ORG_CD = OOMG.LOGIC_ORG_CD
		           AND OGMG.STS != 'D'
		         WHERE OOMG.TEN_ID = POHD.TEN_ID
		           AND OOMG.OORG_CD = POHD.OORG_CD
		       ) AS OPER_ORG_NM
		     , POHD.VD_CD
		     , VDGL.VD_NM
		     , PODT.PO_UPRC
		     , POHD.PO_CRN_DT
		  FROM PO POHD
		 INNER JOIN PO_ITEM PODT
		    ON PODT.TEN_ID = POHD.TEN_ID
		   AND PODT.PO_UUID  = POHD.PO_UUID
		 INNER JOIN VD VDGL
		    ON VDGL.TEN_ID = POHD.TEN_ID
		   AND VDGL.VD_CD  = POHD.VD_CD
		 WHERE POHD.TEN_ID       = #{g.tenant}
		   AND POHD.OORG_CD IN
		   <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		       #{oorg_cd}
		   </foreach>
		   AND POHD.PO_STS_CCD = 'APVD'
		   AND POHD.EFCT_PO_YN = 'Y'  /* 유효한 PO 여부 */
		   AND PODT.ITEM_CD = #{p.item_cd}
		   AND PODT.STS != 'D'
		 ORDER BY POHD.OORG_CD, POHD.VD_CD, POHD.PO_CRN_DT
	</select>
	<select id="findInfoDocumentOutputPoHeader" resultType="map">
	/* po.findInfoDocumentOutputPoHeader : 발주서(헤더정보) 출력 */
		SELECT  G.*
		     , CONCAT(CONCAT(G.REG_NM, CASE WHEN G.REG_MOBILE IS NULL OR G.REG_MOBILE = '' THEN ''
                                            ELSE CONCAT(' / ', G.REG_MOBILE)
                                        END), CASE WHEN G.REG_EMAIL IS NULL OR G.REG_EMAIL = '' THEN ''
                                                   ELSE CONCAT(' / ', G.REG_EMAIL)
                                               END) AS PO_CHR_INFO		--구매담당자
		     , CONCAT(G.GR_CHR_NM, CASE WHEN G.GR_TEL IS NULL OR G.GR_TEL = '' THEN ''
                                        ELSE CONCAT(' / ', G.GR_TEL)
                                    END) AS GR_CHAR_INFO		--인수자
		     , CONCAT(CASE WHEN G.DELY_ADDR IS NULL OR G.DELY_ADDR = '' THEN ''
		                   ELSE G.DELY_ADDR
		               END, CASE WHEN G.DELY_LOCAT IS NULL OR G.DELY_LOCAT = '' THEN ''
                                 ELSE CONCAT(CONCAT(' (', G.DELY_LOCAT), ')')
                             END) AS GR_ADDR_INFO --인수주소
		     , TO_CHAR(CAST(G.PO_CRN_DT AS TIMESTAMP), 'YYYY/MM/DD')  AS PO_DATE
		  FROM (
		        SELECT POHD.PO_UUID
		             , POHD.PO_NO		--P/O NO.
		             , POHD.PO_CRN_DT   --P/O Date
		             , POHD.VD_CD
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN VDGL.VD_NM
		                    ELSE VDGL.CEO_NM_EN END AS VD_NM		--공급사/Supplier
		             , (SELECT  CASE WHEN 'en_US' = #{g.locale}
		                                 THEN VDUSR.USR_NM_EN
		                            ELSE VDUSR.USR_NM
		                        END
		                  FROM USR VDUSR
		                 INNER JOIN ROLE_USR
		                    ON ROLE_USR.TEN_ID = VDUSR.TEN_ID
		                   AND ROLE_USR.USR_ID = VDUSR.USR_ID
		                   AND ROLE_USR.STS != 'D'
		                 WHERE VDUSR.TEN_ID = #{g.tenant}
		                   AND VDUSR.VD_CD = VDGL.VD_CD
		                   AND VDUSR.USE_YN = 'Y'
		                   AND ROLE_USR.ROLE_CD = 'V600' -- 발주 담당자 권한
		                   AND ROWNUM = 1  ) AS VD_USR_NM
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CONCAT(CASE WHEN VDGL.DTL_ADDR_EN_1 IS NULL OR VDGL.DTL_ADDR_EN_1 = '' THEN ''
		                                          ELSE VDGL.DTL_ADDR_EN_1
		                                      END, CASE WHEN VDGL.DTL_ADDR_EN_2 IS NULL OR VDGL.DTL_ADDR_EN_2 = '' THEN ''
		                                                ELSE VDGL.DTL_ADDR_EN_2
		                                            END)
		                    ELSE CONCAT(CASE WHEN VDGL.DTL_ADDR_1 IS NULL OR VDGL.DTL_ADDR_1 = '' THEN ''
		                                     ELSE VDGL.DTL_ADDR_1
		                                 END, CASE WHEN VDGL.DTL_ADDR_2 IS NULL OR VDGL.DTL_ADDR_2 = '' THEN ''
		                                           ELSE VDGL.DTL_ADDR_2
		                                       END)
		                END AS VD_ADDR		--공급사 주소
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(VDGL.BIZREGNO, 1, 3), '-'), SUBSTR(VDGL.BIZREGNO, 4, 2)), '-'), SUBSTR(VDGL.BIZREGNO, 6, 5))  AS BIZ_REG_NO		--공급사 사업자번호
		             , VDGL.VD_EML AS VD_EMAIL		--공급사 이메일
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CORP.LOGIC_ORG_NM_EN
		                    ELSE CORP.LOGIC_ORG_NM
		                END AS BUYER_NM		--발주사명/Buyer
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CORP.ADDR_EN
		                    ELSE CORP.ADDR
		                END AS CORP_ADDR			--발주사주소/Buyer addr
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(CORP.BIZREGNO, 1, 3), '-'), SUBSTR(CORP.BIZREGNO, 4, 2)), '-'), SUBSTR(CORP.BIZREGNO, 6, 5))  AS CORP_BIZ_REG_NO		--발주사 사업자번호
		             , POHD.REGR_ID
		             , CASE WHEN 'en_US' = #{g.locale}
		                    THEN PO_CHR.USR_NM 
		                    ELSE PO_CHR.USR_NM_EN END AS REG_NM		--구매담당자/Purchase
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN PO_CHR.MOB 
		                    ELSE CONCAT('+82-', SUBSTR(PO_CHR.TEL, 2))  END AS REG_MOBILE		--구매담당자/Purchase
		             , PO_CHR.EML AS REG_EMAIL		--구매담당자/Purchase
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(PLT.BIZREGNO, 1, 3), '-'), SUBSTR(PLT.BIZREGNO, 4, 2)), '-'), SUBSTR(PLT.BIZREGNO, 6, 5))  AS PLT_BIZ_REG_NO		--세금계산서 사업자번호
		             , CASE WHEN 'en_US' = #{g.locale} THEN PLT.LOGIC_ORG_NM_EN ELSE PLT.LOGIC_ORG_NM END AS PLT_OFFICIAL_NM		--사업자명
		             , POHD.CUR_CCD 					--통화/currency
		             , POHD.SUP_AMT						--공급가액
		             , POHD.VAT_AMT						--세액
		             , POHD.CNTR_AMT					--합계금액 -내자- (SUP_AMT+vat_amt)
		             , PODT.GR_PIC_ID
		             , CASE WHEN 'en_US' = #{g.locale} THEN GR_USR.USR_NM_EN ELSE GR_USR.USR_NM END AS GR_CHR_NM		--MRO수령자명
		             , GR_USR.TEL AS GR_TEL				--MRO수령자전화번호
		             , CASE WHEN 'en_US' = #{g.locale} THEN PLT.ADDR_EN ELSE PLT.ADDR END AS DELY_ADDR        	--MRO수령자납품주소
					 , CASE WHEN 'en_US' = #{g.locale} THEN PLT.LOGIC_ORG_NM_EN ELSE PLT.LOGIC_ORG_NM END AS DELY_LOCAT   --MRO수령자납품장소
		             , POHD.PYMTMETH_CCD    			--외자-Payment Temrs-P009
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN CDDL1.DTLCD_NM
		                    ELSE POHD.PYMTMETH_EXPLN END AS PAY_TERMS_NM
		             , POHD.DLVYMETH_CCD 				--외자-Incoterms-P010
		             , SUBSTR(CDDL2.DTLCD_NM, 7, 999)  AS DELY_TERMS_NM
		             , OOMG_CORP.PARNODE_OORG_CD
		          FROM PO POHD
		         INNER JOIN PO_ITEM PODT 
		            ON PODT.TEN_ID = POHD.TEN_ID
		           AND PODT.PO_UUID  = POHD.PO_UUID
		           AND PODT.STS != 'D'
		         INNER JOIN VD VDGL
		            ON VDGL.TEN_ID = POHD.TEN_ID
		           AND VDGL.VD_CD  = POHD.VD_CD
		         INNER JOIN USR PO_CHR
		            ON PO_CHR.TEN_ID = POHD.TEN_ID
		           AND PO_CHR.USR_ID = POHD.REGR_ID
		         INNER JOIN OORG OOMG_CORP  
		            ON OOMG_CORP.TEN_ID = POHD.TEN_ID
		           AND OOMG_CORP.OORG_CD = POHD.OORG_CD  
		         INNER JOIN OORG OOMG_CORP_2  
		            ON OOMG_CORP_2.TEN_ID = OOMG_CORP.TEN_ID
		           AND OOMG_CORP_2.OORG_CD = OOMG_CORP.PARNODE_OORG_CD
		         INNER JOIN LOGIC_ORG CORP
		            ON CORP.TEN_ID = OOMG_CORP_2.TEN_ID
		           AND CORP.LOGIC_ORG_TYP_CCD = OOMG_CORP_2.LOGIC_ORG_TYP_CCD
		           AND CORP.LOGIC_ORG_CD = OOMG_CORP_2.LOGIC_ORG_CD
		         INNER JOIN OORG OOMG_PLT  
		            ON OOMG_PLT.TEN_ID = POHD.TEN_ID
		           AND OOMG_PLT.OORG_CD = POHD.OORG_CD
		         INNER JOIN LOGIC_ORG PLT
		            ON PLT.TEN_ID = OOMG_PLT.TEN_ID
		           <!-- AND PLT.LOGIC_ORG_TYP_CCD = OOMG_PLT.LOGIC_ORG_TYP_CCD 
		           AND PLT.ORG_CD = OOMG_PLT.ORG_CD -->
		          LEFT OUTER JOIN USR GR_USR
		            ON GR_USR.TEN_ID = PODT.TEN_ID
		           AND GR_USR.USR_ID = PODT.GR_PIC_ID
		          LEFT OUTER JOIN DTLCD_MULTLANG CDDL1
		            ON CDDL1.TEN_ID = POHD.TEN_ID
		           AND CDDL1.CCD    = 'P009'				/* CONSTANT */
		           AND CDDL1.DTLCD  = POHD.PYMTMETH_CCD
		           AND CDDL1.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		          LEFT OUTER JOIN DTLCD_MULTLANG CDDL2
		            ON CDDL2.TEN_ID = POHD.TEN_ID
		           AND CDDL2.CCD    = 'P010' 				/* CONSTANT */
		           AND CDDL2.DTLCD  = POHD.DLVYMETH_CCD
		           AND CDDL2.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		         WHERE POHD.TEN_ID = #{g.tenant} 			/* SESSION.TEN_ID */
		           AND POHD.PO_UUID = #{p.po_uuid}  		/* VARIABLE */
		           AND POHD.STS != 'D'						/* CONSTANT */
		        ) G
		 WHERE 1=1
		   AND ROWNUM = 1 </select>
	<select id="findListDocumentOutputPoDetail" resultType="map">
	/* po.findListDocumentOutputPoDetail : 발주서(품목정보) 출력 */
		SELECT PODT.TEN_ID
             , ROW_NUMBER() OVER(ORDER BY PODT.PO_LNO) AS SEQ
             , PODT.PO_LNO  	AS PO_SEQ
             , PODT.ITEM_CD 	AS ITEM_CD
             , CASE WHEN 'en_US' = #{g.locale} THEN PODT.ITEM_NM_EN ELSE PODT.ITEM_NM END AS ITEM_NM 		/*Description*/
             , PODT.ITEM_SPEC   AS SPEC    		/*Specification*/
             , PODT.PO_QTY   	AS PO_QTY  	/*Quantity*/
             , PODT.UOM_CCD    	AS UNIT_CD  	/*U/M*/
             , PODT.PO_UPRC 	AS PO_UPRC  	/*Unit Price*/
             , PODT.PO_AMT  	AS PO_AMT  	/*Amount*/
             , TO_CHAR(CAST(PODT.REQ_DLVY_DT AS TIMESTAMP), 'YYYY-MM-DD')  AS RD_DATE
        	 , PODT.PO_UUID
        	 , PODT.DLVY_PLC
		  FROM PO_ITEM PODT
		  LEFT OUTER JOIN DTLCD_MULTLANG CDDL
		    ON CDDL.TEN_ID   = PODT.TEN_ID
		   AND CDDL.CCD      = 'C018'		/* CONSTANT */
		   AND CDDL.LANG_CCD = #{g.locale} 	/* SESSION.LANG_CD */
		   AND CDDL.DTLCD = PODT.WH_CCD
		   AND CDDL.STS     != 'D'			/* CONSTANT */
		 WHERE PODT.TEN_ID   = #{g.tenant} 	/* SESSION.TEN_ID */
		   AND PODT.PO_UUID  = #{p.po_uuid} /* VARIABLE */
		   AND PODT.STS     != 'D'			/* CONSTANT */
		 ORDER BY TO_NUMBER(PODT.PO_LNO)
	</select>
	<select id="findListOrderCntrMaker" resultType="map">
	/* po.findListOrderCntrMaker : 전자계약 대상 발주 목록 조회 */
	SELECT POHD.PO_UUID							AS PO_UUID
	     , POHD.PO_NO							AS PO_NO
	     , POHD.PO_REVNO						AS PO_REVNO
	     , POHD.OORG_CD							AS OORG_CD
	     , VDGL.VD_CD 
	     , VDGL.ERP_VD_CD
	     , CASE WHEN 'ko_KR' = #{g.locale} THEN VDGL.VD_NM ELSE VDGL.VD_NM_EN END AS VD_NM
	     , POHD.PO_TIT							AS CNTR_TITLE  
	     , POHD.PYMTMETH_CCD					AS PYMTMETH_CCD
	     , POHD.DLVYMETH_CCD					AS DLVYMETH_CCD
	     , POHD.PO_CRN_DT						AS PO_CRN_DT
	     , 'PO_CNTRDOC'							AS CNTR_TYP_CCD
	     , POHD.DLVYMETH_EXPLN					AS DLVYMETH_EXPLN
	     , POHD.PYMTMETH_EXPLN					AS PYMTMETH_EXPLN
	     , POHD.PO_UUID							AS REF_CNTR_UUID
	     , POHD.PO_NO							AS REF_CNTR_NO
	     , POHD.PO_REVNO						AS REF_CNTR_REVNO
	     , POHD.PO_AMT
	     , POHD.CNTR_AMT
	     , POHD.SUP_AMT
	     , POHD.VAT_AMT
	     , POHD.RFX_NO
	     , POHD.RFX_RND
	     , POHD.CUR_CCD
	     , POHD.CSTM_YN
	     , POHD.PO_TIT      AS CNTR_NM
	     , POHD.PO_CRN_DT   AS CNTR_DT
	     , POHD.CNTR_ST_DT  AS CNTR_ST_DT
	     , POHD.CNTR_EXP_DT AS CNTR_EXP_DT
	     , POHD.PURC_TYP_CCD
	     , POHD.STAX_YN
	     , POHD.STTPYMT_RO_TYP_CCD
	     , VDGL.CTRY_CCD
	     , POHD.CNTR_NO
	  FROM PO POHD
	 INNER JOIN VD VDGL     /*협력사*/
	    ON POHD.TEN_ID = VDGL.TEN_ID
	   AND POHD.VD_CD  = VDGL.VD_CD
	 WHERE POHD.TEN_ID = #{g.tenant}
	   AND POHD.CNTR_NO IS NOT NULL  AND POHD.CNTR_SGNG_TYP_CCD != 'NA'
	   AND POHD.CNTR_SGNG_TYP_CCD = #{p.cntr_sgng_typ_ccd}
	   AND POHD.CNTR_STS_CCD = 'CRNG'
	   AND POHD.STS != 'D'
	<if test="p.oorg_cd != null and p.oorg_cd !=''">
	   AND POHD.OORG_CD = #{p.oorg_cd}
	</if>
	<choose>
		<when test="p.ref_cntr_nos != null and p.ref_cntr_nos.size() != 0">
			AND POHD.PO_NO IN
			<foreach close=")" collection="p.ref_cntr_nos" item="refCntrNo" open="(" separator=",">
				#{refCntrNo}
			</foreach>
		</when>
		<otherwise>
			<if test="p.ref_cntr_no != null and p.ref_cntr_no != ''">
				<bind name="refCntrNo" value="'%' + p.ref_cntr_no + '%'"/>
				AND UPPER(POHD.PO_NO) LIKE UPPER(#{refCntrNo})
			</if>
		</otherwise>
	</choose>
	<if test="p.vd_nm != null and p.vd_nm !=''">
	   <bind name="vdNm" value="'%'+p.vd_nm+'%'"/>
	   AND (UPPER(VDGL.VD_NM) LIKE UPPER(#{vdNm}) OR UPPER(VDGL.VD_NM_EN) LIKE UPPER(#{vdNm}))
	</if>
	<if test="p.vd_cd != null and p.vd_cd !=''">
	   <bind name="vdCd" value="'%'+p.vd_cd+'%'"/>
	   AND UPPER(VDGL.VD_CD) LIKE UPPER(#{vdCd})
	</if>
	<if test="p.erp_vd_cd != null and p.erp_vd_cd !=''">
	   <bind name="erpVdCd" value="'%'+p.erp_vd_cd+'%'"/>
	   AND UPPER(VDGL.ERP_VD_CD) LIKE UPPER(#{erpVdCd})
	</if>
	 ORDER BY POHD.REG_DTTM DESC
	</select>
	<select id="findListVendorRcmdWthnoneyrItemPo" resultType="string">
		<bind name="fromDate" value="g.getFormatNow(g.increaseDate(g.now, 'Y', -1), 'yyyyMMdd')"/>
		/* 1년 내 동일 ITEM 발주 업체 */
		SELECT PO.VD_CD
		  FROM PO PO
		 INNER JOIN PO_ITEM PO_ITEM
		    ON PO_ITEM.TEN_ID  = PO.TEN_ID
		   AND PO_ITEM.PO_UUID = PO.PO_UUID
		   AND PO_ITEM.STS    != 'D'
		 WHERE PO.TEN_ID  = #{g.tenant}
		   AND PO.OORG_CD = #{p.oorg_cd}
		   AND PO.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   AND PO.PO_STS_CCD = 'APVD'  -- 발주완료
		   AND PO.EFCT_PO_YN = 'Y'  -- 유효한 차수의 발주
		   AND PO.PO_CRN_DT &gt;= #{fromDate}
		   <choose>
		       <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
		           AND PO_ITEM.ITEM_CD IN
		           <foreach close=")" collection="p.item_cds" item="itemCd" open="(" separator=",">
		               #{itemCd}
		           </foreach>
		       </when>
		       <otherwise>
		           AND 1 = 0
		       </otherwise>
		   </choose>
	</select>
	<select id="findListVendorRcmdWthnoneyrSgPo" resultType="string">
		<bind name="fromDate" value="g.getFormatNow(g.increaseDate(g.now, 'Y', -1), 'yyyyMMdd')"/>
		/* 1년 내 동일 SG 발주 업체 */
		SELECT PO.VD_CD
		  FROM PO PO
		 INNER JOIN PO_ITEM PO_ITEM
		    ON PO_ITEM.TEN_ID  = PO.TEN_ID
		   AND PO_ITEM.PO_UUID = PO.PO_UUID
		   AND PO_ITEM.STS   != 'D'
		 WHERE PO.TEN_ID  = #{g.tenant}
		   AND PO.OORG_CD = #{p.oorg_cd}
		   AND PO.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   AND PO.PO_STS_CCD = 'APVD'  -- 발주완료
		   AND PO.EFCT_PO_YN = 'Y'  -- 유효한 차수의 발주
		   AND PO.PO_CRN_DT &gt;= #{fromDate}
		   <choose>
		       <when test="p.sg_cds != null and p.sg_cds.size() &gt; 0">
		           AND PO_ITEM.SG_CD IN
		           <foreach close=")" collection="p.sg_cds" item="sgCd" open="(" separator=",">
		               #{sgCd}
		           </foreach>
		       </when>
		       <otherwise>
		           AND 1 = 0
		       </otherwise>
		   </choose>
	</select>
    <select id="findProgressPaymentDefaultDataByPo" resultType="map">
    /* po.findProgressPaymentDefaultDataByPo : 기성 작성 기본정보 PO정보로 조회 */
        SELECT PO.TEN_ID
             , PO.PO_UUID
             , PO.VD_CD
             , PO.PO_NO           /*발주번호*/
             , PO.PO_REVNO          /*발주차수*/
             , PO.OORG_CD     /*운영조직*/
             , PO.PO_TIT          /*발주명*/
             , PO.PO_TIT AS GR_TIT /*발주명을 기성명으로*/
             , PO.PURC_TYP_CCD
             , PO.CUR_CCD             /*통화*/
             , (CASE WHEN PO.PO_AMT  IS NULL THEN 0 ELSE PO.PO_AMT  END) AS PO_AMT  /*발주금액*/
             , PO.VD_PIC_NM       /*구매담당명(협력사 담당자 아이디)*/
             , PO.PO_CRN_DT     /*발주일자*/
             , PO.PO_STS_CCD     /*발주진행상태*/
             , PO.VD_PO_STS_CCD     /*협력사접수상태*/
             , PO.PYMTMETH_CCD
             , PO.PYMTMETH_EXPLN
             , PO.DLVYMETH_CCD
             , PO.DLVYMETH_EXPLN
             , PO.PURC_GRP_CD
             , 0 AS ASN_AMT
             , (SELECT COALESCE(SUM(CASE WHEN A.ASN_AMT IS NULL THEN 0 ELSE A.ASN_AMT END), 0) /* 요청금액 */
                  FROM ASN A
                 WHERE A.TEN_ID = PO.TEN_ID
                   AND A.PO_NO = PO.PO_NO
                   AND A.ASN_STS_CCD = 'CMPLD'
                   AND A.STS != 'D') AS PRE_ASN_TTL_AMT
             , (SELECT COALESCE(SUM(CASE WHEN A.GR_AMT IS NULL THEN 0 ELSE A.GR_AMT END), 0) /* 승인금액 */
                     FROM GR A
                    WHERE A.TEN_ID = PO.TEN_ID
                      AND A.PO_NO = PO.PO_NO
                      AND A.GR_STS_CCD = 'PP_CMPLD' /* C:검수완료 */
                      AND A.STS != 'D') AS PRE_GR_TTL_AMT
             , PO.GR_STS_CCD
             , PO.PO_CMPLD_YN
             , VD.ERP_VD_CD
             , (CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
                     ELSE VD.VD_NM
                 END) AS DISP_VD_NM
             , '' AS ASN_UUID
             , COALESCE(PO.GE_SUBJ_YN, 'N') AS GE_SUBJ_YN
          FROM PO PO
          LEFT OUTER JOIN VD VD
            ON VD.TEN_ID = PO.TEN_ID
           AND VD.VD_CD = PO.VD_CD
         WHERE PO.TEN_ID      = #{g.tenant}
           AND PO.PO_UUID     = #{p.po_uuid}
           AND PO.PO_STS_CCD = 'APVD'   /* C:계약승인완료 */
           AND PO.PURC_TYP_CCD    = 'CONSTSVC' /* CONSTSVC:공사용역 */
           AND PO.STS        != 'D'
    </select>
    <select id="checkCreatableProgressPayment" resultType="map">
        /* po.checkCreatableProgressPayment: 기성 작성 가능여부 체크 */
        SELECT T.PO_NO
             , T.CHECK_RESULT
          FROM ( SELECT POHD.PO_NO             AS PO_NO
                      , CASE WHEN POHD.PO_CMPLD_YN = 'Y'
                                  THEN 'PO_COMPLETE'                  /* 발주종료 */
                             WHEN ( SELECT COUNT(1)
                                      FROM PO A
                                     WHERE A.TEN_ID      = POHD.TEN_ID
                                       AND A.PO_NO       = POHD.PO_NO
                                       AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = POHD.TEN_ID AND B.PO_NO = POHD.PO_NO AND B.STS != 'D' )
                                       AND A.STS        != 'D'
                                       AND A.PO_CHG_TYP_CCD     = 'TRMN'
                                       AND A.PO_STS_CCD = 'TRMN'    /* 발주 진행상태 (D:발주해지)*/
                                  ) &gt; 0
                                  THEN 'PO_TERMINATE'             /* 발주해지 */
                             WHEN ( SELECT COUNT(1)
                                      FROM PO A
                                     WHERE A.TEN_ID      = POHD.TEN_ID
                                       AND A.PO_NO       = POHD.PO_NO
                                       AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = POHD.TEN_ID AND B.PO_NO = POHD.PO_NO AND B.STS != 'D' )
                                       AND A.STS        != 'D'
                                       AND A.PO_CHG_TYP_CCD     = 'CHG'
                                       AND A.PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG')    /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중)*/
                                  ) &gt; 0
                                  THEN 'PO_CHANGE_PROGRESS'    /* 발주변경중 */
                             WHEN (SELECT SUM(POPP.PYMT_AMT) -- 선급금이 존재하고
                                     FROM PO_PYMT_EXPT POPP
                                    WHERE POPP.TEN_ID     = POHD.TEN_ID
                                      AND POPP.PO_UUID      = POHD.PO_UUID
                                      AND POPP.PYMT_TYP_CCD = 'APYMT') &gt; 0
                                   AND
                                  (SELECT COUNT(1)
                                      FROM GR GR
                                     WHERE GR.TEN_ID       = POHD.TEN_ID
                                       AND GR.PO_NO        = POHD.PO_NO
                                       AND GR.GR_STS_CCD   = 'PP_CMPLD'  /* 기성취소 제외 */
                                       AND GR.STS         != 'D') = 0 -- 기성(선급금 포함) 건 존재
                                  THEN 'NOT_EXIST_PRE_PAY_REG'            /* 선급금 등록건 미존재 */
                             WHEN ( SELECT COUNT(1)
                                      FROM GR GR
                                     WHERE GR.TEN_ID      = POHD.TEN_ID
                                       AND GR.PO_NO       = POHD.PO_NO
                                       AND GR.GR_STS_CCD NOT IN ('PP_CMPLD', 'PP_CNCL')
                                       AND GR.STS        != 'D'
                                  ) &gt; 0
                                  THEN 'EXIST_PP_PROGRESS'            /* 진행중인 기성건 존재 */
                             WHEN ( SELECT COUNT(1)
                                      FROM ASN AR
                                     WHERE AR.TEN_ID      = POHD.TEN_ID
                                       AND AR.PO_NO       = POHD.PO_NO
                                       AND AR.ASN_STS_CCD IN ('CRNG', 'WTG', 'PRGSG')
                                       AND AR.STS        != 'D'
                                  ) &gt; 0
                                  THEN 'EXIST_PP_REQ_PROGRESS'   /* 진행중인 기성요청건 존재*/
                             ELSE NULL
                        END                  AS CHECK_RESULT
                   FROM PO POHD
                  WHERE POHD.TEN_ID = #{g.tenant}
                    AND POHD.PO_UUID  = #{p.po_uuid}
               ) T
         WHERE T.CHECK_RESULT IS NOT NULL </select>
    <select id="findReturnedPoCount" resultType="map">
        /* po.findReturnedPoCount */
        SELECT
             SUM(CASE WHEN HD.PO_RCPT_RJCT_RSN_CCD = 'DLVY_NOT_POSS' THEN 1 ELSE 0 END) AS DLVY_NOT_POSS_CNT
             ,SUM(CASE WHEN HD.PO_RCPT_RJCT_RSN_CCD = 'SUPPLIER_PROD_CAPA' THEN 1 ELSE 0 END) AS SUPPLIER_PROD_CAPA_CNT
             ,SUM(CASE WHEN HD.PO_RCPT_RJCT_RSN_CCD = 'SUPPLIER_INVEN_CAPA' THEN 1 ELSE 0 END) AS SUPPLIER_INVEN_CAPA_CNT
             ,SUM(CASE WHEN HD.PO_RCPT_RJCT_RSN_CCD = 'PO_UPRC_ISS' THEN 1 ELSE 0 END) AS PO_UPRC_ISS_CNT
             ,SUM(CASE WHEN HD.PO_RCPT_RJCT_RSN_CCD = 'OTH' THEN 1 ELSE 0 END) AS OTH_CNT
        FROM PO HD
        WHERE HD.TEN_ID = #{g.tenant}
          AND (1=0
            OR HD.PO_RCPT_RJCT_RSN_CCD = 'DLVY_NOT_POSS'
            OR HD.PO_RCPT_RJCT_RSN_CCD =  'SUPPLIER_PROD_CAPA'
            OR HD.PO_RCPT_RJCT_RSN_CCD =  'SUPPLIER_INVEN_CAPA'
            OR HD.PO_RCPT_RJCT_RSN_CCD =  'PO_UPRC_ISS'
            OR HD.PO_RCPT_RJCT_RSN_CCD =  'OTH'
         )
    </select>
    <select id="findPoTypeCount" resultType="map">
        /* po.findPoTypeCount */
        SELECT
             SUM(CASE WHEN HD.PO_TYP_CCD =  'URGPURC' THEN 1 ELSE 0 END) AS URGPURC_CNT
             ,SUM(CASE WHEN HD.PO_TYP_CCD = 'SPOTPURC' THEN 1 ELSE 0 END) AS SPOTPURC_CNT
             ,SUM(CASE WHEN HD.PO_TYP_CCD = 'SPOTCNTR' THEN 1 ELSE 0 END) AS SPOTCNTR_CNT
             ,SUM(CASE WHEN HD.PO_TYP_CCD = 'TLAUTOPO' THEN 1 ELSE 0 END) AS TLAUTOPO_CNT
             ,SUM(CASE WHEN HD.PO_TYP_CCD = 'NTLAUTOPO' THEN 1 ELSE 0 END) AS NTLAUTOPO_CNT
        FROM PO HD
        WHERE HD.TEN_ID = #{g.tenant}
          AND (1=0
            OR HD.PO_TYP_CCD =  'URGPURC'
            OR HD.PO_TYP_CCD =  'SPOTPURC'
            OR HD.PO_TYP_CCD =  'SPOTCNTR'
            OR HD.PO_TYP_CCD =  'TLAUTOPO'
            OR HD.PO_TYP_CCD =  'NTLAUTOPO'
         )
    </select>
    <select id="findListWorkplaceDashboardPoData" resultType="map">
        /* po.findListWorkplaceDashboardPoData */
        SELECT HD.TEN_ID
        , HD.PO_UUID
        , TASK_PO.TASK_UUID AS PO_TASK_UUID
        , TASK_PO_CHG.TASK_UUID AS PO_CHG_TASK_UUID
        , HD.PO_NO
        , HD.PO_REVNO
        , HD.OORG_CD
        , HD.RFX_UUID
        , HD.RFX_NO
        , HD.RFX_RND
        , HD.PO_TIT
        , HD.PLT_CD
        , HD.VD_CD
        , HD.VD_PIC_NM
        , HD.VD_PIC_TEL
        , HD.VD_PIC_EML
        , HD.PURC_TYP_CCD
        , HD.PO_REQ_TYP_CCD
        , HD.PO_TYP_CCD
        , HD.DOMOVRS_DIV_CCD
        , HD.PO_CRN_DT
        , HD.CUR_CCD
        , HD.CONV_CUR_CCD
        , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
        , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
        , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
        , HD.EXCHRATE_DT
        , HD.CNTR_SGNG_TYP_CCD
        , HD.PO_RMK
        , HD.ATHG_UUID
        , HD.PYMTMETH_CCD
        , HD.PYMTMETH_EXPLN
        , HD.PYMTMETH_USE_YN
        , HD.DLVYMETH_CCD
        , HD.DLVYMETH_EXPLN
        , HD.DLVYMETH_USE_YN
        , HD.TAX_TYP_CCD
        , HD.OTREXP_EXPLN
        , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
        , HD.PYMTMETH_CND
        , HD.UPRCCNTR_NO
        , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
        , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
        , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
        , HD.CNTR_ST_DT
        , HD.CNTR_EXP_DT
        , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
        , HD.CPGUR_USE_YN
        , HD.CPGUR_TYP_CCD
        , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
        , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
        , HD.CPGUR_ST_DT
        , HD.CPGUR_EXP_DT
        , HD.DEFPGUR_USE_YN
        , HD.DEFPGUR_TYP_CCD
        , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
        , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
        , HD.DEFPGUR_PD_TYP_CCD
        , HD.DEFPGUR_PD
        , HD.APYMTGUR_USE_YN
        , HD.APYMTGUR_TYP_CCD
        , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
        , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
        , HD.APYMTGUR_ST_DT
        , HD.APYMTGUR_EXP_DT
        , HD.PO_CMPLD_YN
        , HD.VD_PO_STS_CCD
        , HD.APVL_STS_CCD
        , HD.PO_STS_CCD
        , HD.CNTR_ATHG_UUID
        , HD.CNTR_STS_CCD
        , HD.MSTAGT_YN
        , HD.MSTAGT_NO
        , HD.PO_CHG_TYP_CCD
        , HD.PO_CHG_REQ_TYP_CCD
        , HD.PO_CHG_REQ_RSN
        , HD.PO_CHG_REQ_STS_CCD
        , HD.PO_CHG_REQ_APVL_STS_CCD
        , HD.PO_CHG_REQR_ID
        , HD.PO_CHG_REQ_DEPT_CD
        , HD.PO_CHG_REQ_DT
        , HD.PO_TRMN_PIC_ID
        , HD.PO_TRMN_RSN
        , HD.PO_TRMN_DT
        , HD.CSTM_YN
        , HD.CSTM_TYP_CCD
        , HD.STS
        , HD.REGR_ID
        , HD.REG_DTTM
        , HD.MODR_ID
        , HD.MOD_DTTM
        , VD.VD_CD
        , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
        , VD.ERP_VD_CD
        , HD.PO_RCPT_RJCT_RSN
        , HD.CNTR_NO
        FROM PO HD
        LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
        AND VD.VD_CD = HD.VD_CD
        LEFT OUTER JOIN TASK_APVL TASK_PO
        ON TASK_PO.TEN_ID = HD.TEN_ID
        AND TASK_PO.TASK_UUID = HD.PO_UUID
        AND TASK_PO.APVL_TYP_CCD = 'PO'
        AND TASK_PO.USE_YN = 'Y'
        LEFT OUTER JOIN TASK_APVL TASK_PO_CHG
        ON TASK_PO.TEN_ID = HD.TEN_ID
        AND TASK_PO.TASK_UUID = HD.PO_UUID
        AND TASK_PO.APVL_TYP_CCD = 'PO_CHG'
        AND TASK_PO.USE_YN = 'Y'
        WHERE HD.TEN_ID = #{g.tenant}
        AND HD.STS != 'D'
        <choose>
            <when test="p.chart_type != null and p.chart_type == 'poType' ">
                AND HD.PO_TYP_CCD = #{p.groupId}
            </when>
            <when test="p.chart_type != null and p.chart_type == 'returnedPo' ">
                AND HD.PO_RCPT_RJCT_RSN_CCD = #{p.groupId}
            </when>
        </choose>
        -- 날짜 선언
        <bind name="getFormatNowYear" value="g.getFormatNow(g.now,'yyyy')"/>
        AND SUBSTR(HD.PO_CRN_DT, 1, 4)  = #{getFormatNowYear}
        ORDER BY HD.PO_NO DESC, HD.PO_REVNO DESC
    </select>
</mapper>
