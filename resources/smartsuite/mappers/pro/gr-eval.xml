<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="gr-eval">
	<select id="findGrInfo" resultType="map">
		SELECT GR.OORG_CD
		     , GR.GR_UUID
		     , GR.GR_NO
		     , GR.GR_TIT
		     , GR.VD_CD
		     , GR.GR_STS_CCD
		     , GR.PURC_TYP_CCD
		     , GR_GE_MAPG.GE_UUID
		     , GE.GE_STS_CCD
		  FROM GR
		  LEFT OUTER JOIN GR_GE_MAPG
		    ON GR_GE_MAPG.TEN_ID = GR.TEN_ID
		   AND GR_GE_MAPG.GR_UUID = GR.GR_UUID
		  LEFT OUTER JOIN GE
		    ON GE.TEN_ID = GR_GE_MAPG.TEN_ID
		   AND GE.GE_UUID = GR_GE_MAPG.GE_UUID
		 WHERE GR.TEN_ID = #{g.tenant}
		   AND GR.GR_UUID = #{p.gr_uuid}
	</select>
	<select id="findGrInfoByGe" resultType="map">
		SELECT GR.OORG_CD
		     , GR.GR_UUID
		  FROM GE
		 INNER JOIN GR_GE_MAPG
		    ON GR_GE_MAPG.TEN_ID = GE.TEN_ID
		   AND GR_GE_MAPG.GE_UUID = GE.GE_UUID
		 INNER JOIN GR
		    ON GR.TEN_ID = GR_GE_MAPG.TEN_ID
		   AND GR.GR_UUID = GR_GE_MAPG.GR_UUID
		 WHERE GE.TEN_ID = #{g.tenant}
		   AND GE.GE_UUID = #{p.ge_uuid}
	</select>
	<select id="findGeInfo" resultType="map">
		SELECT GE.GE_UUID
		     , GE.OORG_CD
		     , GEG.GEMT_UUID
		     , GE.GEG_UUID
		     , GE.GR_EVALSHT_UUID
		     , GE.VD_CD
		     , GEG.GEG_CD
		     , GEG.GEG_NM
		     , GEG.GEG_EXPLN
		  FROM GE
		 INNER JOIN GEG
		    ON GEG.TEN_ID = GE.TEN_ID
		   AND GEG.GEG_UUID = GE.GEG_UUID
		 WHERE GE.TEN_ID = #{g.tenant}
		   AND GE.GE_UUID = #{p.ge_uuid}
	</select>
	<select id="findGrEvalshtInfo" resultType="map">
		SELECT GR_EVALSHT.TEN_ID                  /* 테넌트 아이디 */
		     , GR_EVALSHT.GR_EVALSHT_UUID         /* 입고 평가시트 UUID */
		     , GR_EVALSHT.EVALSHT_CD              /* 평가시트 코드 */
		     , GR_EVALSHT.EVALSHT_NM              /* 평가시트 명 */
		     , GR_EVALSHT.EFCT_ST_DT              /* 유효 시작 일자 */
		     , GR_EVALSHT.EFCT_EXP_DT             /* 유효 만료 일자 */
		     , GR_EVALSHT.GEG_UUID                /* 심사 그룹 아이디 */
		     , GR_EVALSHT.CNFD_YN                 /* 확정 여부 */
		     , GR_EVALSHT.RMK
		     , GR_EVALSHT.STS
		     , GR_EVALSHT.REGR_ID
		     , GR_EVALSHT.REG_DTTM
		     , GR_EVALSHT.MODR_ID
		     , GR_EVALSHT.MOD_DTTM
		  FROM GR_EVALSHT GR_EVALSHT    /* GR_EVALSHT : 입고 평가시트 */
		 WHERE GR_EVALSHT.TEN_ID    = #{g.tenant}
		   AND GR_EVALSHT.GR_EVALSHT_UUID  = #{p.gr_evalsht_uuid}
		   AND GR_EVALSHT.STS              != 'D'
	</select>
	<select id="findListGePrcsEvaltr" resultType="map">
		SELECT GR_EVALSHT_PRCS.PRCS_CCD
		     , GR_EVALSHT_PRCS.EVALTR_TYP_CCD
		     , GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID
		     , GE_PRCS_EVALTR.GE_PRCS_EVALTR_UUID
		     , GE_PRCS_EVALTR.GE_PRCS_UUID
		     , GE_PRCS_EVALTR.EVALTR_ID
		     , GE_PRCS_EVALTR.EVALFACT_EVALTR_AUTHTY_CCD
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS DISP_EVALTR_NM
		  FROM GE
		 INNER JOIN GE_PRCS
		    ON GE_PRCS.TEN_ID = GE.TEN_ID
		   AND GE_PRCS.GE_UUID = GE.GE_UUID
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 INNER JOIN GE_PRCS_EVALTR
		    ON GE_PRCS_EVALTR.TEN_ID = GE_PRCS.TEN_ID
		   AND GE_PRCS_EVALTR.GE_PRCS_UUID = GE_PRCS.GE_PRCS_UUID
		 INNER JOIN USR
		    ON USR.TEN_ID = GE_PRCS_EVALTR.TEN_ID
		   AND USR.USR_ID = GE_PRCS_EVALTR.EVALTR_ID
		 WHERE GE.TEN_ID = #{g.tenant}
		   AND GE.GE_UUID = #{p.ge_uuid}
	</select>
	<select id="findListGemt" resultType="map">
		SELECT GEMT.GEMT_UUID
		     , DTLCD.DTLCD AS GEMT_CD
		     , DTLCD_MULTLANG.DTLCD_NM AS GEMT_NM
		  FROM GEMT
		 INNER JOIN DTLCD
		    ON DTLCD.TEN_ID = GEMT.TEN_ID
		   AND DTLCD.CCD = 'P239'
		   AND DTLCD.DTLCD = GEMT.GEMT_CD
		 INNER JOIN DTLCD_MULTLANG
		    ON DTLCD_MULTLANG.TEN_ID = DTLCD.TEN_ID
		   AND DTLCD_MULTLANG.DTLCD  = DTLCD.DTLCD
		   AND DTLCD_MULTLANG.CCD    = DTLCD.CCD
		   AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		 WHERE GEMT.TEN_ID = #{g.tenant}
		   AND GEMT.USE_YN = 'Y'
		   AND GEMT.OORG_CD = #{p.oorg_cd}
		   AND EXISTS (
		               SELECT 1
		                 FROM GEMG
		                WHERE GEMG.TEN_ID = GEMT.TEN_ID
		                  AND GEMG.GEMT_UUID = GEMT.GEMT_UUID
		              )
	</select>
	<select id="findGrPurcTypByGrUuid" resultType="string">
		SELECT PURC_TYP_CCD
		  FROM GR
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID = #{p.gr_uuid}
	</select>
	<select id="findGrItemCatTypByGrUuid" resultType="string">
		WITH  T(TEN_ID, ITEMCAT_CD, PAR_ITEMCAT_CD) AS (
			SELECT ITEMCAT.TEN_ID
			     , ITEMCAT.ITEMCAT_CD
			     , ITEMCAT.PAR_ITEMCAT_CD
			  FROM GR
			 INNER JOIN GR_ITEM
			    ON GR_ITEM.TEN_ID = GR.TEN_ID
			   AND GR_ITEM.GR_UUID = GR.GR_UUID
			 INNER JOIN ITEM
			    ON ITEM.TEN_ID = GR_ITEM.TEN_ID
			   AND ITEM.ITEM_CD = GR_ITEM.ITEM_CD
			 INNER JOIN ITEMCAT
			    ON ITEMCAT.TEN_ID = ITEM.TEN_ID
			   AND ITEMCAT.ITEMCAT_CD = ITEM.ITEMCAT_CD
			 WHERE GR.TEN_ID = #{g.tenant}
			   AND GR.GR_UUID = #{p.gr_uuid}
			 UNION ALL
			SELECT ITEMCAT.TEN_ID
			     , ITEMCAT.ITEMCAT_CD
			     , ITEMCAT.PAR_ITEMCAT_CD
			  FROM ITEMCAT
			 INNER JOIN T
			    ON T.TEN_ID = ITEMCAT.TEN_ID
			   AND T.PAR_ITEMCAT_CD = ITEMCAT.ITEMCAT_CD
		)
		SELECT ITEMCAT_CD
		  FROM T
		 GROUP BY ITEMCAT_CD
	</select>
	<select id="findGrSgByGrUuid" resultType="string">
		WITH T(TEN_ID, SG_CD, PAR_SG_CD) AS (
			SELECT SG.TEN_ID
			     , SG.SG_CD
			     , SG.PAR_SG_CD
			  FROM GR
			 INNER JOIN GR_ITEM
			    ON GR_ITEM.TEN_ID = GR.TEN_ID
			   AND GR_ITEM.GR_UUID = GR.GR_UUID
			 INNER JOIN PO_ITEM
			    ON PO_ITEM.TEN_ID = GR_ITEM.TEN_ID
			   AND PO_ITEM.PO_ITEM_UUID = GR_ITEM.PO_ITEM_UUID
			 INNER JOIN SG
			    ON SG.TEN_ID = PO_ITEM.TEN_ID
			   AND SG.SG_CD = PO_ITEM.SG_CD
			 WHERE GR.TEN_ID = #{g.tenant}
			   AND GR.GR_UUID = #{p.gr_uuid}
			 UNION ALL
			SELECT SG.TEN_ID
			     , SG.SG_CD
			     , SG.PAR_SG_CD
			  FROM SG
			 INNER JOIN T
			    ON T.TEN_ID = SG.TEN_ID
			   AND T.PAR_SG_CD = SG.SG_CD
		)
		SELECT SG_CD
		  FROM T
		 GROUP BY SG_CD
	</select>
	<select id="findVendorInfoByGrUuid" resultType="string">
		SELECT VMT.VMT_CCD
		  FROM GR
		 INNER JOIN OORG_MAPG
		    ON OORG_MAPG.TEN_ID = GR.TEN_ID
		   AND OORG_MAPG.CONNSRC_OORG_CD = GR.OORG_CD
		   AND OORG_MAPG.CONN_TYP_CCD = 'POEO'
		 INNER JOIN VD_OORG
		    ON VD_OORG.TEN_ID = OORG_MAPG.TEN_ID
		   AND VD_OORG.OORG_CD = OORG_MAPG.CONNSUBJ_OORG_CD
		   AND VD_OORG.VD_CD = GR.VD_CD
		 INNER JOIN VD_OORG_VMG
		    ON VD_OORG_VMG.TEN_ID = VD_OORG.TEN_ID
		   AND VD_OORG_VMG.VD_OORG_UUID = VD_OORG.VD_OORG_UUID
		 INNER JOIN VMG_OORG
            ON VMG_OORG.TEN_ID = VD_OORG_VMG.TEN_ID
           AND VMG_OORG.VMG_OORG_UUID = VD_OORG_VMG.VMG_OORG_UUID
           AND VMG_OORG.STS != 'D'
           AND VMG_OORG.USE_YN = 'Y'
		 INNER JOIN VMG
		    ON VMG.TEN_ID = VD_OORG_VMG.TEN_ID
		   AND VMG.VMG_UUID = VD_OORG_VMG.VMG_UUID
		 INNER JOIN VMT
		    ON VMT.TEN_ID = VMG.TEN_ID
		   AND VMT.VMT_UUID = VMG.VMT_UUID
		 WHERE GR.TEN_ID = #{g.tenant}
		   AND GR.GR_UUID = #{p.gr_uuid}
		 GROUP BY VMT.VMT_CCD
	</select>
	<select id="findListGegByGemgValues" resultType="map">
		SELECT T.GEG_UUID
		     , T.GEMT_UUID
		     , T.OORG_CD
		     , T.GEG_CD
		     , T.GEG_NM
		     , T.GEG_EXPLN
		     , T.GEMG_CD
		     , T.GEMG_NM
		  FROM (
		        SELECT GEG.GEG_UUID
		             , GEG.GEMT_UUID
		             , GEG.OORG_CD
		             , GEG.GEG_CD
		             , GEG.GEG_NM
		             , GEG.GEG_EXPLN
		             , GEMG.GEMG_CD
		             , CASE WHEN #{g.locale} = 'en_US' THEN GEMG.GEMG_NM_EN
		                    ELSE GEMG.GEMG_NM
		                END AS GEMG_NM
		             , GR_EVALSHT.CNFD_YN
		             , CASE WHEN (RANK() OVER (ORDER BY GR_EVALSHT.MOD_DTTM DESC, GR_EVALSHT.EFCT_EXP_DT DESC, GR_EVALSHT.EFCT_ST_DT DESC)) = '1' THEN 'Y' ELSE 'N' END AS CURRENT_EVALSHT  /* 최신 평가시트 */
		          FROM GEMG
		         INNER JOIN GEG_GEMG
		            ON GEG_GEMG.TEN_ID = GEMG.TEN_ID
		           AND GEG_GEMG.GEMG_UUID = GEMG.GEMG_UUID
		         INNER JOIN GEG
		            ON GEG.TEN_ID = GEG_GEMG.TEN_ID
		           AND GEG.GEG_UUID = GEG_GEMG.GEG_UUID
		         INNER JOIN GR_EVALSHT
		            ON GR_EVALSHT.TEN_ID = GEG.TEN_ID
		           AND GR_EVALSHT.GEG_UUID = GEG.GEG_UUID
		         WHERE GEMG.TEN_ID = #{g.tenant}
		           AND GEMG.OORG_CD = #{p.oorg_cd}
		           <choose>
		               <when test="p.gemgValues != null and p.gemgValues.size() != 0">
		                   AND GEMG.GEMG_CD IN
		                   <foreach close=")" collection="p.gemgValues" item="gemgValue" open="(" separator=",">
		                       #{gemgValue}
		                   </foreach>
		               </when>
		               <otherwise>
		                   AND 1=2
		               </otherwise>
		           </choose>
		           AND GEMG.STS != 'D'
		           AND GEG_GEMG.STS != 'D'
		           AND GEG.STS != 'D'
		           AND GR_EVALSHT.STS != 'D'
		       ) T
		 WHERE T.CURRENT_EVALSHT = 'Y'
		   AND T.CNFD_YN = 'Y'
	</select>
	<select id="findListGePrcsByGe" resultType="map">
		SELECT GE_PRCS.GE_PRCS_UUID
		     , GE_PRCS.GE_UUID
		     , GE_PRCS.EVAL_SUBJ_RES_UUID
		     , GE_PRCS.GR_EVALSHT_UUID
		     , GE_PRCS.GR_EVALSHT_PRCS_UUID
		     , GE_PRCS.EVAL_CMPLD_DT
		     , GE_PRCS.PRCS_SORT
		     , GE_PRCS.GE_PRCS_STS_CCD
		     , GE_PRCS.PRCS_EVAL_SC
		     , GE_PRCS.STS
		     , GE.VD_CD
		     , GR_EVALSHT_PRCS.EVALTMPL_UUID
		     , GR_EVALSHT_PRCS.EVALTR_TYP_CCD
		  FROM GE_PRCS
		 INNER JOIN GE
		    ON GE.TEN_ID = GE_PRCS.TEN_ID
		   AND GE.GE_UUID = GE_PRCS.GE_UUID
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 WHERE GE_PRCS.TEN_ID = #{g.tenant}
		   AND GE_PRCS.GE_UUID = #{p.ge_uuid}
		 ORDER BY GE_PRCS.PRCS_SORT
	</select>
	<delete id="deleteGePrcsByGe">
		DELETE
		  FROM GE_PRCS
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_UUID = #{p.ge_uuid}
	</delete>
	<delete id="deleteGePrcsEvaltrByGePrcs">
		DELETE
		  FROM GE_PRCS_EVALTR
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
	</delete>
	<insert id="insertGe">
		INSERT INTO GE (
			TEN_ID
			, GE_UUID
			, OORG_CD
			, GEMT_UUID
			, GEG_UUID
			, GR_EVALSHT_UUID
			, VD_CD
			, GE_STS_CCD
			, STS
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.ge_uuid}
			, #{p.oorg_cd}
			, #{p.gemt_uuid}
			, #{p.geg_uuid}
			, #{p.gr_evalsht_uuid}
			, #{p.vd_cd}
			, #{p.ge_sts_ccd}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateGe">
		UPDATE GE
		   SET GEMT_UUID = #{p.gemt_uuid}
		     , GEG_UUID = #{p.geg_uuid}
		     , GR_EVALSHT_UUID = #{p.gr_evalsht_uuid}
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_UUID = #{p.ge_uuid}
	</update>
	<insert id="insertGePrcs">
		INSERT INTO GE_PRCS (
			TEN_ID
			, GE_PRCS_UUID
			, GE_UUID
			, GR_EVALSHT_UUID
			, GR_EVALSHT_PRCS_UUID
			, PRCS_SORT
			, STS
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.ge_prcs_uuid}
			, #{p.ge_uuid}
			, #{p.gr_evalsht_uuid}
			, #{p.gr_evalsht_prcs_uuid}
			, #{p.prcs_sort}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<insert id="insertGePrcsEvaltr">
		INSERT INTO GE_PRCS_EVALTR (
			TEN_ID
			, GE_PRCS_EVALTR_UUID
			, GE_PRCS_UUID
			, EVALTR_ID
			, EVALFACT_EVALTR_AUTHTY_CCD
			, EVAL_STS_CCD
			, STS
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.ge_prcs_evaltr_uuid}
			, #{p.ge_prcs_uuid}
			, #{p.evaltr_id}
			, #{p.evalfact_evaltr_authty_ccd}
			, 'WTG'
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<delete id="deleteGe">
		DELETE
		  FROM GE
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_UUID = #{p.ge_uuid}
	</delete>
	<update id="updateGrEvalStart">
		<bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
		UPDATE GE
		   SET GE_REQ_DT = #{getFormatNow}
		     , GE_ED_YN = 'N'
		     , GE_STS_CCD = 'EVAL_PRGSG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_UUID = #{p.ge_uuid}
	</update>
	<select id="isCompleteEvaltrEval" resultType="boolean">
		SELECT CASE WHEN T.CNT = T.SUBM_CNT THEN 1
		            ELSE 0
		        END
		  FROM (
		        SELECT COUNT(GE_PRCS_EVALTR_UUID) AS CNT
		             , SUM(CASE WHEN EVAL_STS_CCD = 'SUBM' THEN 1 ELSE 0 END) AS SUBM_CNT
		          FROM GE_PRCS_EVALTR
		         WHERE TEN_ID = #{g.tenant}
		           AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
		       ) T
	</select>
	<update id="updateGePrcsEndEval">
		<bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
		UPDATE GE_PRCS
		   SET GE_PRCS_STS_CCD = 'EVAL_ED'
		     , EVAL_CMPLD_DT = #{getFormatNow}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
	</update>
	<select id="findListGePrcsEvaltrByGePrcs" resultType="map">
		SELECT GE_PRCS_EVALTR_UUID
		     , EVALTR_ID
		     , EVAL_STS_CCD
		     , EVALFACT_EVALTR_AUTHTY_CCD
		  FROM GE_PRCS_EVALTR
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
	</select>
	<select id="calcGrEvalPrcsScore" resultType="map">
		SELECT GE_PRCS.GE_UUID
		     , SUM(CASE WHEN GE_PRCS.PRCS_EVAL_SC IS NULL THEN 0 ELSE GE_PRCS.PRCS_EVAL_SC END * GR_EVALSHT_PRCS.PRCS_WGT / 100) AS EVAL_SC
		  FROM GE_PRCS
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 WHERE GE_PRCS.TEN_ID = #{g.tenant}
		   AND GE_PRCS.GE_UUID = #{p.ge_uuid}
		   AND GE_PRCS.GE_PRCS_STS_CCD = 'EVAL_ED'
		 GROUP BY GE_PRCS.GE_UUID
	</select>
	<update id="completeGrEval">
		<bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
		UPDATE GE
		   SET GE_ED_YN = 'Y'
		     , GE_ED_DT = #{getFormatNow}
		     , GE_STS_CCD = 'EVAL_ED'
		     , EVAL_SC = #{p.eval_sc}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_UUID = #{p.ge_uuid}
	</update>
	<update id="startGePrcsEvaltr">
		UPDATE GE_PRCS_EVALTR
		   SET EVAL_SUBJ_EVALTR_RES_UUID = #{p.eval_subj_evaltr_res_uuid}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_EVALTR_UUID = #{p.ge_prcs_evaltr_uuid}
	</update>
	<update id="startGePrcs">
		UPDATE GE_PRCS
		   SET EVAL_SUBJ_RES_UUID = #{p.eval_subj_res_uuid}
		     , GE_PRCS_STS_CCD = 'EVAL_PRGSG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
	</update>
	<update id="updateGePrcsWtg">
		UPDATE GE_PRCS
		   SET GE_PRCS_STS_CCD = 'EVAL_WTG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND GE_PRCS_UUID = #{p.ge_prcs_uuid}
	</update>
	<select id="findListGePerform" resultType="map">
		SELECT GE.GE_UUID
		     , GE_PRCS.GE_PRCS_UUID
		     , GE_PRCS.EVAL_SUBJ_RES_UUID
		     , GE_PRCS_EVALTR.EVAL_SUBJ_EVALTR_RES_UUID
		     , GE.OORG_CD
		     , GE_PRCS.GE_PRCS_STS_CCD
		     , GE_PRCS_EVALTR.EVAL_STS_CCD
		     , GR.GR_NO
		     , GR.GR_TIT
		     , GR.PURC_TYP_CCD
		     , EVALTMPL.EVALTMPL_NM
		  FROM GR
		 INNER JOIN GR_GE_MAPG
		    ON GR_GE_MAPG.TEN_ID = GR.TEN_ID
		   AND GR_GE_MAPG.GR_UUID = GR.GR_UUID
		 INNER JOIN GE
		    ON GE.TEN_ID = GR_GE_MAPG.TEN_ID
		   AND GE.GE_UUID = GR_GE_MAPG.GE_UUID
		 INNER JOIN GE_PRCS
		    ON GE_PRCS.TEN_ID = GE.TEN_ID
		   AND GE_PRCS.GE_UUID = GE.GE_UUID
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 INNER JOIN EVALTMPL
		    ON EVALTMPL.TEN_ID = GR_EVALSHT_PRCS.TEN_ID
		   AND EVALTMPL.EVALTMPL_UUID = GR_EVALSHT_PRCS.EVALTMPL_UUID
		 INNER JOIN GE_PRCS_EVALTR
		    ON GE_PRCS_EVALTR.TEN_ID = GE_PRCS.TEN_ID
		   AND GE_PRCS_EVALTR.GE_PRCS_UUID = GE_PRCS.GE_PRCS_UUID
		 WHERE GE_PRCS_EVALTR.TEN_ID = #{g.tenant}
		   AND GE_PRCS_EVALTR.EVALTR_ID = #{g.username}
		   AND GE_PRCS.GE_PRCS_STS_CCD IS NOT NULL
		   AND GE.GE_STS_CCD IS NOT NULL
		   AND GR.STS != 'D'
		   <if test="p.ge_sts_ccd != null">
		       AND GE_PRCS.GE_PRCS_STS_CCD = #{p.ge_sts_ccd}
		   </if>
		   <if test="p.from_gr_dt != null">
		       AND GR.GR_DT &gt;= #{p.from_gr_dt}
		   </if>
		   <if test="p.to_gr_dt != null">
			   AND GR.GR_DT <![CDATA[<=]]> #{p.to_gr_dt}
		   </if>
		   <if test="p.gr_tit != null and p.gr_tit != ''">
		       <bind name="grTitPattern" value="'%' + p.gr_tit + '%'"/>
		       AND UPPER(GR.GR_TIT) LIKE UPPER(#{grTitPattern})
		   </if>
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND GE.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.purc_typ_ccd != null">
		       AND GR.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.gr_nos != null and p.gr_nos.size() != 0">
		           AND UPPER(GR.GR_NO) IN
		           <foreach close=")" collection="p.gr_nos" item="gr_no" open="(" separator=",">
		               #{gr_no}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.gr_no != null and p.gr_no != ''">
		               <bind name="grNamePattern" value="'%' + p.gr_no + '%'"/>
		               AND UPPER(GR.GR_NO) LIKE UPPER(#{grNamePattern})
		           </if>
		       </otherwise>
		   </choose>
		   <if test="p.eval_sts_ccd != null and p.eval_sts_ccd != ''">
		       AND GE_PRCS_EVALTR.EVAL_STS_CCD = #{p.eval_sts_ccd}
		   </if>
		 ORDER BY GR.GR_NO DESC
	</select>
	<select id="findGeEvalSubjectEvaltrInfo" resultType="map">
		SELECT GE_PRCS_EVALTR.TEN_ID
		     , GE_PRCS_EVALTR.EVAL_SUBJ_EVALTR_RES_UUID
		     , GE_PRCS_EVALTR.EVAL_STS_CCD
		     , GE_PRCS_EVALTR.EVALTR_ID
		     , GE_PRCS_EVALTR.EVALFACT_EVALTR_AUTHTY_CCD
		     , GE_PRCS_EVALTR.EVALTR_SC
		     , GE_PRCS.GE_UUID
		     , GE_PRCS.GE_PRCS_UUID
		     , GE_PRCS.EVAL_SUBJ_RES_UUID
		     , GE_PRCS.GE_PRCS_STS_CCD
		     , GR_EVALSHT_PRCS.EVALDOC_LYT_TYP_CCD
		     , GR_EVALSHT_PRCS.EVALTMPL_UUID
		     , 'GE' AS EVAL_TASK_TYP_CCD
		     , GR.GR_NO
		     , GR.GR_TIT
		     , VD.VD_CD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS DISP_EVALTR_NM
		     , GE.OORG_CD
		  FROM GE_PRCS_EVALTR
		 INNER JOIN USR
		    ON USR.TEN_ID = GE_PRCS_EVALTR.TEN_ID
		   AND USR.USR_ID = GE_PRCS_EVALTR.EVALTR_ID
		 INNER JOIN GE_PRCS
		    ON GE_PRCS.TEN_ID = GE_PRCS_EVALTR.TEN_ID
		   AND GE_PRCS.GE_PRCS_UUID = GE_PRCS_EVALTR.GE_PRCS_UUID
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 INNER JOIN GE
		    ON GE.TEN_ID = GE_PRCS.TEN_ID
		   AND GE.GE_UUID = GE_PRCS.GE_UUID
		 INNER JOIN GR_GE_MAPG
		    ON GR_GE_MAPG.TEN_ID = GE.TEN_ID
		   AND GR_GE_MAPG.GE_UUID = GE.GE_UUID
		 INNER JOIN GR
		    ON GR.TEN_ID = GR_GE_MAPG.TEN_ID
		   AND GR.GR_UUID = GR_GE_MAPG.GR_UUID
		 INNER JOIN VD
		    ON VD.TEN_ID = GE.TEN_ID
		   AND VD.VD_CD = GE.VD_CD
		 WHERE GE_PRCS_EVALTR.TEN_ID = #{g.tenant}
		   AND GE_PRCS_EVALTR.EVAL_SUBJ_EVALTR_RES_UUID = #{p.eval_subj_evaltr_res_uuid}
	</select>
	<update id="updateEvaltrScore">
		UPDATE GE_PRCS_EVALTR
		   SET EVALTR_SC = #{p.evaltr_sc}
		     , EVAL_STS_CCD = #{p.eval_sts_ccd}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND EVAL_SUBJ_EVALTR_RES_UUID = #{p.eval_subj_evaltr_res_uuid}
	</update>
	<update id="updateEvalTargetScore">
		UPDATE GE_PRCS
		   SET PRCS_EVAL_SC = #{p.eval_sc}
		 WHERE TEN_ID = #{g.tenant}
		   AND EVAL_SUBJ_RES_UUID = #{p.eval_subj_res_uuid}
	</update>
	<select id="findListMonitoringGePrcsEvaltr" resultType="map">
		SELECT GR.GR_NO
		     , GE.GE_STS_CCD
		     , GE.EVAL_SC
		     , GE_PRCS.PRCS_SORT
		     , GR_EVALSHT_PRCS.PRCS_CCD
		     , GR_EVALSHT_PRCS.PRCS_WGT
		     , GE_PRCS.GE_PRCS_STS_CCD
		     , GE_PRCS.PRCS_EVAL_SC
		     , GE_PRCS_EVALTR.EVAL_STS_CCD
		     , GE_PRCS_EVALTR.EVALTR_ID
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS DISP_EVALTR_NM
		     , GE_PRCS_EVALTR.EVALTR_SC
		  FROM GE
		 INNER JOIN GR_GE_MAPG
		    ON GR_GE_MAPG.TEN_ID = GE.TEN_ID
		   AND GR_GE_MAPG.GE_UUID = GE.GE_UUID
		 INNER JOIN GR
		    ON GR.TEN_ID = GR_GE_MAPG.TEN_ID
		   AND GR.GR_UUID = GR_GE_MAPG.GR_UUID
		 INNER JOIN GE_PRCS
		    ON GE_PRCS.TEN_ID = GE.TEN_ID
		   AND GE_PRCS.GE_UUID = GE.GE_UUID
		 INNER JOIN GR_EVALSHT_PRCS
		    ON GR_EVALSHT_PRCS.TEN_ID = GE_PRCS.TEN_ID
		   AND GR_EVALSHT_PRCS.GR_EVALSHT_PRCS_UUID = GE_PRCS.GR_EVALSHT_PRCS_UUID
		 INNER JOIN GE_PRCS_EVALTR
		    ON GE_PRCS_EVALTR.TEN_ID = GE_PRCS.TEN_ID
		   AND GE_PRCS_EVALTR.GE_PRCS_UUID = GE_PRCS.GE_PRCS_UUID
		 INNER JOIN USR
		    ON USR.TEN_ID = GE_PRCS_EVALTR.TEN_ID
		   AND USR.USR_ID = GE_PRCS_EVALTR.EVALTR_ID
		 WHERE GE.TEN_ID = #{g.tenant}
		   AND GE.GE_UUID = #{p.ge_uuid}
		 ORDER BY GE_PRCS.PRCS_SORT, GE_PRCS_EVALTR.EVALTR_ID
	</select>
	<insert id="insertGrGeMapping">
		INSERT INTO GR_GE_MAPG (
			TEN_ID
			, GR_UUID
			, GE_UUID
		) VALUES (
			#{g.tenant}
			, #{p.gr_uuid}
			, #{p.ge_uuid}
		)
	</insert>
	<delete id="deleteGrGeMapping">
		DELETE
		  FROM GR_GE_MAPG
		 WHERE TEN_ID = #{g.tenant}
		   AND GR_UUID = #{p.gr_uuid}
		   AND GE_UUID = #{p.ge_uuid}
	</delete>
	<update id="forceCloseGePrcs">
		<bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
		UPDATE GE_PRCS
		   SET EVAL_CMPLD_DT = #{getFormatNow}
		     , GE_PRCS_STS_CCD = 'EVAL_ED'
		 WHERE GE_PRCS.TEN_ID = #{g.tenant}
		   AND GE_PRCS.GE_UUID = #{p.ge_uuid}
	</update>
    <select id="findGeEvalByEvalSubjEvaltrResId" resultType="map">
    /* gr-eval.findGeEvalByEvalSubjEvaltrResId : 평가대상 평가자 아이디로 ge eval 정보 확인 (workplace link 용) */
    SELECT GPRCS.GE_PRCS_UUID
         , GPRCS.GE_PRCS_STS_CCD
         , GPRCS_EVALTR.EVAL_SUBJ_EVALTR_RES_UUID
         , GPRCS_EVALTR.EVALTR_ID
     FROM GE_PRCS_EVALTR GPRCS_EVALTR
    INNER JOIN GE_PRCS GPRCS
       ON GPRCS_EVALTR.TEN_ID = GPRCS.TEN_ID
      AND GPRCS_EVALTR.GE_PRCS_UUID  = GPRCS.GE_PRCS_UUID
    WHERE GPRCS_EVALTR.TEN_ID = #{g.tenant}
      AND GPRCS_EVALTR.STS != 'D'
      AND GPRCS_EVALTR.EVAL_SUBJ_EVALTR_RES_UUID = #{p.eval_subj_evaltr_res_uuid}
    </select>
</mapper>
