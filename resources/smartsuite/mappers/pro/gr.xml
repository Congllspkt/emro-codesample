<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
GR: 입고헤더
GR_ITEM: 입고상세
 -->

<mapper namespace="gr">
    <select id="findGrIncrementRevisionByPoNo" resultType="java.lang.Integer">
        /* gr.findNewGrRevByPoNo : 기성 회차 증가 */
        SELECT CASE WHEN MAX(GR_ORDN) IS NULL THEN 1 ELSE MAX(GR_ORDN) + 1 END AS GR_ORDN
          FROM GR
         WHERE TEN_ID = #{g.tenant}
           AND PO_NO = (SELECT PO_NO FROM PO WHERE TEN_ID = #{g.tenant} AND PO_UUID = #{p.po_uuid})
           AND GR_STS_CCD = 'PP_CMPLD' /* 기성완료 */
           AND STS != 'D'
    </select>
    <insert id="insertGr">
        /* gr.insertGr: 입고헤더 등록 */
        INSERT
          INTO GR ( TEN_ID
                  , GR_UUID
                  , GR_NO
                  , GR_ORDN
                  , GR_TIT
                  , VD_CD
                  , OORG_CD
                  , GR_TYP_CCD
                  , PURC_TYP_CCD
                  , GR_DT
                  , GR_CRN_DT
                  , PYMTMETH_CCD
                  , PYMTMETH_EXPLN
                  , DLVYMETH_CCD
                  , DLVYMETH_EXPLN
                  , CUR_CCD
                  , GR_AMT
                  , DFRM_RO
                  , DELAY_DCNT
                  , DELAY_AMT
                  , DELAY_RSN
                  , PRTL_DELAY_YN
                  , PRTL_DELAY_AMT
                  , PRTL_DELAY_RSN
                  , DFRM_EXMT_YN
                  , DFRM_EXMT_REQ_DCNT
                  , DFRM_EXMT_RSN
                  , PPBAS_ST_DT
                  , PPBAS_CMPLD_DT
                  , PPREQ_DT
                  , PYMT_DT
                  , PP_CMPLD_YN
                  , DLVY_PLC
                  , GR_OPN
                  , BUYER_RMK
                  , VD_RMK
                  , SHPR_NM
                  , SHPG_VEHNO
                  , SHPG_TEL
                  , SHPG_RMK
                  , ATHG_UUID
                  , GR_PIC_ID
                  , DLVY_DT
                  , ASN_UUID
                  , ASN_NO
                  , ASN_ORDN
                  , PO_UUID
                  , PO_NO
                  , PO_REVNO
                  , RMK
                  , STS
                  , REGR_ID
                  , REG_DTTM
                  , MODR_ID
                  , MOD_DTTM
                  , GE_SUBJ_YN
                  , PYMT_TYP_CCD
                  )
        VALUES ( #{g.tenant}
               , #{p.gr_uuid}
               , #{p.gr_no}
               , CAST(#{p.gr_ordn} AS INT)
               , #{p.gr_tit}
               , #{p.vd_cd}
               , #{p.oorg_cd}
               , #{p.gr_typ_ccd}
               , #{p.purc_typ_ccd}
               , #{p.gr_dt}
               , #{p.gr_crn_dt}
               , #{p.pymtmeth_ccd}
               , #{p.pymtmeth_expln}
               , #{p.dlvymeth_ccd}
               , #{p.dlvymeth_expln}
               , #{p.cur_ccd}
               , CAST(#{p.gr_amt} AS FLOAT  )
               , CAST(#{p.dfrm_ro} AS FLOAT  )
               , CAST(#{p.delay_dcnt} AS INT)
               , CAST(#{p.delay_amt} AS FLOAT  )
               , #{p.delay_rsn}
               , #{p.prtl_delay_yn}
               , CAST(#{p.prtl_delay_amt} AS FLOAT  )
               , #{p.prtl_delay_rsn}
               , #{p.dfrm_exmt_yn}
               , CAST(#{p.dfrm_exmt_req_dcnt} AS INT)
               , #{p.dfrm_exmt_rsn}
               , #{p.ppbas_st_dt}
               , #{p.ppbas_cmpld_dt}
               , #{p.req_date}
               , #{p.pymt_dt}
               , #{p.pp_cmpld_yn}
               , #{p.dlvy_plc}
               , #{p.gr_opn}
               , #{p.buyer_rmk}
               , #{p.vd_rmk}
               , #{p.shpr_nm}
               , #{p.shpg_vehno}
               , #{p.shpg_tel}
               , #{p.shpg_rmk}
               , #{p.athg_uuid}
               , #{p.gr_pic_id}
               , #{p.dlvy_dt}
               , #{p.asn_uuid}
               , #{p.asn_no}
               , CAST(#{p.asn_ordn} AS INT)
               , #{p.po_uuid}
               , #{p.po_no}
               , CAST(#{p.po_revno} AS INT)
               , #{p.rmk}
               , 'C'
               , #{g.username}
               , #{g.now}
               , #{g.username}
               , #{g.now}
               , #{p.ge_subj_yn}
               , #{p.pymt_typ_ccd}
               )
    </insert>
    <update id="updateGrByGrUuid">
        /* gr.updateGrByGrUuid: 입고 헤더 수정 */
        UPDATE GR
           SET STS                = 'U'
             , MOD_DTTM           = #{g.now}
             , MODR_ID            = #{g.username}
             , GR_TIT             = #{p.gr_tit}
             , VD_CD              = #{p.vd_cd}
             , OORG_CD            = #{p.oorg_cd}
             , GR_TYP_CCD         = #{p.gr_typ_ccd}
             , GR_DT              = #{p.gr_dt}
             , GR_CRN_DT          = #{p.gr_crn_dt}
             , PYMTMETH_CCD       = #{p.pymtmeth_ccd}
             , PYMTMETH_EXPLN     = #{p.pymtmeth_expln}
             , DLVYMETH_CCD       = #{p.dlvymeth_ccd}
             , DLVYMETH_EXPLN     = #{p.dlvymeth_expln}
             , CUR_CCD            = #{p.cur_ccd}
             , GR_AMT             = CAST(#{p.gr_amt} AS FLOAT  )
             , DFRM_RO            = CAST(#{p.dfrm_ro} AS FLOAT  )
             , DELAY_DCNT         = CAST(#{p.delay_dcnt} AS INT)
             , DELAY_AMT          = CAST(#{p.delay_amt} AS FLOAT  )
             , DELAY_RSN          = #{p.delay_rsn}
             , PRTL_DELAY_YN      = #{p.prtl_delay_yn}
             , PRTL_DELAY_AMT     = CAST(#{p.prtl_delay_amt} AS FLOAT  )
             , PRTL_DELAY_RSN     = #{p.prtl_delay_rsn}
             , DFRM_EXMT_YN       = #{p.dfrm_exmt_yn}
             , DFRM_EXMT_REQ_DCNT = CAST(#{p.dfrm_exmt_req_dcnt} AS INT)
             , DFRM_EXMT_RSN      = #{p.dfrm_exmt_rsn}
             , PPBAS_ST_DT        = #{p.ppbas_st_dt}
             , PPBAS_CMPLD_DT     = #{p.ppbas_cmpld_dt}
             , PPREQ_DT           = #{p.ppreq_dt}
             , PYMT_DT            = #{p.pymt_dt}
             , PP_CMPLD_YN        = #{p.pp_cmpld_yn}
             , DLVY_PLC           = #{p.dlvy_plc}
             , GR_OPN             = #{p.gr_opn}
             , BUYER_RMK          = #{p.buyer_rmk}
             , VD_RMK             = #{p.vd_rmk}
             , SHPR_NM            = #{p.shpr_nm}
             , SHPG_VEHNO         = #{p.shpg_vehno}
             , SHPG_TEL           = #{p.shpg_tel}
             , SHPG_RMK           = #{p.shpg_rmk}
             , ATHG_UUID          = #{p.athg_uuid}
             , GR_PIC_ID          = #{p.gr_pic_id}
             , DLVY_DT            = #{p.dlvy_dt}
             , RMK                = #{p.rmk}
             , GE_SUBJ_YN         = #{p.ge_subj_yn}
             , PYMT_TYP_CCD       = #{p.pymt_typ_ccd}
         WHERE TEN_ID = #{g.tenant}
           AND GR_UUID = #{p.gr_uuid}
    </update>
    <update id="deleteGrByGrUuid">
        /* gr.deleteGrByGrUuid: 입고 헤더 삭제 */
        UPDATE GR
           SET STS = 'D'
         WHERE TEN_ID = #{g.tenant}
           AND GR_UUID = #{p.gr_uuid}
    </update>
    <select id="searchGr" resultType="map">
        /* gr.searchGr: 입고 헤더 목록 */
        SELECT HD.TEN_ID
        , HD.GR_UUID
        , TASK_APVL.TASK_UUID
        , HD.GR_NO
        , HD.GR_ORDN
        , HD.GR_TIT
        , HD.VD_CD
        , HD.OORG_CD
        , HD.GR_TYP_CCD
        , HD.PURC_TYP_CCD
        , HD.PYMTMETH_CCD
        , HD.PYMTMETH_EXPLN
        , HD.DLVYMETH_CCD
        , HD.DLVYMETH_EXPLN
        , HD.CUR_CCD
        , HD.GR_CRN_DT
        , (CASE WHEN HD.GR_STS_CCD = 'GR_CMPLD' /* C:검수완료 */
        THEN HD.GR_DT
        ELSE NULL
        END) AS GR_DT
        , (CASE WHEN HD.GR_STS_CCD = 'GR_CMPLD' /* C:검수완료 */
        THEN (CASE WHEN HD.GR_AMT IS NULL
        THEN 0
        ELSE HD.GR_AMT
        END)
        ELSE 0
        END) AS GR_AMT
        , (CASE WHEN HD.DELAY_AMT IS NULL THEN 0 ELSE HD.DELAY_AMT END) AS DELAY_AMT
        , (CASE WHEN HD.PRTL_DELAY_AMT IS NULL THEN 0 ELSE HD.PRTL_DELAY_AMT END) AS PRTL_DELAY_AMT
        , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
        , HD.DELAY_DCNT
        , HD.DELAY_RSN
        , HD.PRTL_DELAY_YN
        , HD.PRTL_DELAY_RSN
        , HD.DFRM_EXMT_YN
        , HD.DFRM_EXMT_REQ_DCNT
        , HD.DFRM_EXMT_RSN
        , HD.PPBAS_ST_DT
        , HD.PPBAS_CMPLD_DT
        , HD.PPREQ_DT
        , HD.PYMT_DT
        , HD.PP_CMPLD_YN
        , HD.DLVY_PLC
        , HD.GR_OPN
        , HD.BUYER_RMK
        , HD.VD_RMK
        , HD.SHPR_NM
        , HD.SHPG_VEHNO
        , HD.SHPG_TEL
        , HD.SHPG_RMK
        , HD.APVL_STS_CCD
        , HD.GR_STS_CCD
        , HD.ATHG_UUID
        , HD.GR_PIC_ID
        , HD.DLVY_DT
        , HD.ASN_UUID
        , HD.ASN_NO
        , HD.ASN_ORDN
        , HD.PO_UUID
        , HD.PO_NO
        , HD.PO_REVNO
        , HD.RMK
        , HD.STS
        , HD.REGR_ID
        , HD.REG_DTTM
        , HD.MODR_ID
        , HD.MOD_DTTM
        , (CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
        ELSE VD.VD_NM
        END) AS DISP_VD_NM
        , VD.ERP_VD_CD
        , GE.GE_UUID
        , GE.GE_STS_CCD
        , GE.EVAL_SC
        FROM GR HD
        LEFT OUTER JOIN TASK_APVL
        ON TASK_APVL.TEN_ID = HD.TEN_ID
        AND TASK_APVL.TASK_UUID = HD.GR_UUID
        AND TASK_APVL.USE_YN = 'Y'
        LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
        AND VD.VD_CD = HD.VD_CD
        LEFT OUTER JOIN GR_GE_MAPG
        ON GR_GE_MAPG.TEN_ID = HD.TEN_ID
        AND GR_GE_MAPG.GR_UUID = HD.GR_UUID
        LEFT OUTER JOIN GE
        ON GE.TEN_ID = GR_GE_MAPG.TEN_ID
        AND GE.GE_UUID = GR_GE_MAPG.GE_UUID
        WHERE HD.TEN_ID = #{g.tenant}
        AND HD.PURC_TYP_CCD = 'QTY' /* QTY:물품 */
        AND HD.GR_PIC_ID = #{g.username} /* 검수담당자 */
        <if test="p.gr_sts_ccd != null and p.gr_sts_ccd != &quot;&quot;">
            AND HD.GR_STS_CCD = #{p.gr_sts_ccd}
        </if>
        <if test="p.apvl_sts_ccd != null and p.apvl_sts_ccd != &quot;&quot;">
            AND HD.APVL_STS_CCD = #{p.apvl_sts_ccd}
        </if>
        <if test="p.erp_vd_cd != null and p.erp_vd_cd != &quot;&quot;">
            <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
            AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
        </if>
        <if test="p.gr_tit != null and p.gr_tit != &quot;&quot;">
            <bind name="p_gr_tit" value="'%' + p.gr_tit + '%'"/>
            AND HD.GR_TIT LIKE UPPER(#{p_gr_tit})
        </if>
        <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
            <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
            AND (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm})) /* 협력사 명 검색조건*/
        </if>
        <choose>
            <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
                AND HD.OORG_CD IN
                <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
                    #{oorg_cd}
                </foreach>
            </when>
            <otherwise>
                AND HD.OORG_CD = '0'
            </otherwise>
        </choose>
        <choose>
            <when test="p.gr_nos != null and p.gr_nos.size() != 0">
                AND HD.GR_NO IN
                <foreach close=")" collection="p.gr_nos" item="gr_no" open="(" separator=",">
                    #{gr_no}
                </foreach>
            </when>
            <otherwise>
                <if test="p.gr_no != null and p.gr_no != ''">
                    <bind name="p_gr_no" value="'%' + p.gr_no + '%'"/>
                    AND HD.GR_NO LIKE UPPER(#{p_gr_no})
                </if>
            </otherwise>
        </choose>
        <choose>
            <when test="p.asn_nos != null and p.asn_nos.size() != 0">
                AND HD.ASN_NO IN
                <foreach close=")" collection="p.asn_nos" item="asn_no" open="(" separator=",">
                    #{asn_no}
                </foreach>
            </when>
            <otherwise>
                <if test="p.asn_no != null and p.asn_no != ''">
                    <bind name="p_asn_no" value="'%' + p.asn_no + '%'"/>
                    AND HD.ASN_NO LIKE UPPER(#{p_asn_no})
                </if>
            </otherwise>
        </choose>
        <choose>
            <when test="p.po_nos != null and p.po_nos.size() != 0">
                AND HD.GR_UUID IN (
                SELECT GR_ITEM.GR_UUID
                FROM GR_ITEM
                WHERE TEN_ID = HD.TEN_ID
                AND PO_NO IN
                <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                    #{po_no}
                </foreach>
                AND STS != 'D'
                )
            </when>
            <otherwise>
                <if test="p.po_no != null and p.po_no != ''">
                    <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
                    AND HD.GR_UUID IN (
                    SELECT GR_ITEM.GR_UUID
                    FROM GR_ITEM
                    WHERE TEN_ID = HD.TEN_ID
                    AND PO_NO LIKE UPPER(#{p_po_no})
                    AND STS != 'D'
                    )
                </if>
            </otherwise>
        </choose>
        <if test="p.from_gr_dt != null">
            AND HD.GR_DT &gt;= #{p.from_gr_dt}
        </if>
        <if test="p.to_gr_dt != null">
            AND HD.GR_DT &lt;= #{p.to_gr_dt}
        </if>
        AND HD.STS != 'D'
        ORDER BY HD.REG_DTTM DESC
    </select>
    <select id="findGrByGrId" resultType="map">
        /* gr.findGrByGrId: 입고 헤더 상세정보 */
        SELECT HD.TEN_ID
             , HD.GR_UUID
             , HD.GR_NO
             , HD.GR_ORDN
             , HD.GR_TIT
             , HD.VD_CD
             , HD.OORG_CD
             , HD.GR_TYP_CCD
             , HD.PURC_TYP_CCD
             , HD.GR_DT
             , HD.GR_CRN_DT
             , HD.PYMTMETH_CCD
             , HD.PYMTMETH_EXPLN
             , HD.DLVYMETH_CCD
             , HD.DLVYMETH_EXPLN
             , HD.CUR_CCD
             , (CASE WHEN HD.GR_AMT IS NULL THEN 0 ELSE HD.GR_AMT END)                   AS GR_AMT
             , (CASE WHEN HD.DELAY_AMT IS NULL THEN 0 ELSE HD.DELAY_AMT END)             AS DELAY_AMT
             , (CASE WHEN HD.PRTL_DELAY_AMT IS NULL THEN 0 ELSE HD.PRTL_DELAY_AMT END)   AS PRTL_DELAY_AMT
             , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END)                 AS DFRM_RO
             , HD.DELAY_DCNT
             , HD.DELAY_RSN
             , HD.PRTL_DELAY_YN
             , HD.PRTL_DELAY_RSN
             , HD.DFRM_EXMT_YN
             , HD.DFRM_EXMT_REQ_DCNT
             , HD.DFRM_EXMT_RSN
             , HD.PPBAS_ST_DT
             , HD.PPBAS_CMPLD_DT
             , HD.PPREQ_DT
             , HD.PYMT_DT
             , HD.PP_CMPLD_YN
             , HD.DLVY_PLC
             , HD.GR_OPN
             , HD.BUYER_RMK
             , HD.VD_RMK
             , HD.SHPR_NM
             , HD.SHPG_VEHNO
             , HD.SHPG_TEL
             , HD.SHPG_RMK
             , HD.APVL_STS_CCD
             , HD.GR_STS_CCD
             , HD.ATHG_UUID
             , HD.GR_PIC_ID
             , HD.DLVY_DT
             , HD.ASN_UUID
             , HD.ASN_NO
             , HD.ASN_ORDN
             , HD.PO_UUID
             , HD.PO_NO
             , HD.PO_REVNO
             , HD.RMK
             , HD.STS
             , HD.REGR_ID
             , HD.REG_DTTM
             , HD.MODR_ID
             , HD.MOD_DTTM
             , (CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END)      AS DISP_VD_NM
             , VD.ERP_VD_CD
             , CASE WHEN HD.ASNEVAL_STS_CCD IS NULL OR HD.ASNEVAL_STS_CCD = '' THEN 'S' ELSE HD.ASNEVAL_STS_CCD END AS ASNEVAL_STS_CCD
             , CASE WHEN (SELECT COUNT(1)
                            FROM GR_ITEM DT
                           WHERE DT.TEN_ID = HD.TEN_ID
                             AND DT.GR_UUID = HD.GR_UUID
                             AND DT.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                             AND DT.STS != 'D'
                         ) &gt; 0 THEN 'Y'
                    ELSE 'N'
               END                                                                       AS HAS_NO_CD_ITEM
             , CASE WHEN HD.GE_SUBJ_YN IS NULL OR HD.GE_SUBJ_YN = '' THEN 'N'
                    ELSE HD.GE_SUBJ_YN
                END AS GE_SUBJ_YN
             , GR_GE_MAPG.GE_UUID
          FROM GR HD
          LEFT OUTER JOIN VD VD
                          ON VD.TEN_ID = HD.TEN_ID AND VD.VD_CD = HD.VD_CD
          LEFT OUTER JOIN GR_GE_MAPG
                          ON GR_GE_MAPG.TEN_ID = HD.TEN_ID AND GR_GE_MAPG.GR_UUID = HD.GR_UUID
         WHERE HD.TEN_ID = #{g.tenant}
           AND HD.GR_UUID = #{p.gr_uuid}
           AND HD.STS != 'D'
    </select>
    <!-- 검수등록 가능여부 체크 -->
    <select id="checkGrCreatable" resultType="map">
        /* gr.checkGrCreatable: 검수등록 가능여부 확인 */
        SELECT T.PO_NO
        , T.PO_LNO
        , T.CHECK_RESULT
        FROM ( SELECT HD.PO_NO AS PO_NO
        , DT.PO_LNO AS PO_LNO
        , CASE WHEN HD.PO_CMPLD_YN = 'Y' OR DT.PO_CMPLD_YN = 'Y' OR DT.PO_ERY_ED_YN = 'Y'
        THEN 'PO_COMPLETE'
        WHEN ( SELECT COUNT(1)
        FROM PO A
        WHERE A.TEN_ID = HD.TEN_ID
        AND A.PO_NO = HD.PO_NO
        AND A.PO_REVNO = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = HD.TEN_ID AND B.PO_NO = HD.PO_NO AND B.STS
        != 'D' )
        AND A.STS != 'D'
        AND A.PO_CHG_TYP_CCD = 'TRMN'
        AND A.PO_STS_CCD = 'TRMN' -- 발주 진행상태(D:발주해지)
        ) &gt; 0
        THEN 'PO_TERMINATE'
        WHEN ( SELECT COUNT(1)
        FROM PO A
        WHERE A.TEN_ID = HD.TEN_ID
        AND A.PO_NO = HD.PO_NO
        AND A.PO_REVNO = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = HD.TEN_ID AND B.PO_NO = HD.PO_NO AND B.STS
        != 'D' )
        AND A.STS != 'D'
        AND A.PO_CHG_TYP_CCD = 'CHG'
        AND A.PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG') /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중)*/
        ) &gt; 0
        THEN 'PO_CHANGE_PROGRESS'
        ELSE NULL
        END AS CHECK_RESULT
        FROM PO HD
        INNER JOIN PO_ITEM DT
        ON DT.TEN_ID = HD.TEN_ID
        AND DT.PO_UUID = HD.PO_UUID
        AND DT.STS != 'D'
        WHERE HD.TEN_ID = #{g.tenant}
        <choose>
            <when test="p.po_item_uuids != null and p.po_item_uuids.size() != 0">
                AND DT.PO_ITEM_UUID IN
                <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
                    #{po_item_uuid}
                </foreach>
            </when>
            <otherwise>
                <if test="p.po_item_uuid != null and p.po_item_uuid != ''">
                    AND DT.PO_ITEM_UUID = #{p.po_item_uuid}
                </if>
            </otherwise>
        </choose>
        ) T
        WHERE T.CHECK_RESULT IS NOT NULL  ORDER BY T.PO_NO, CAST(T.PO_LNO AS INT)
    </select>
    <select id="compareGrHeaderStatus" resultType="map">
        /* gr.compareGrHeaderStatus: 검수헤더 진행상태 비교 */
        SELECT GRHD.GR_UUID
             , GRHD.GR_NO
             , GRHD.GR_ORDN
             , GRHD.GR_STS_CCD
             , CDDL.DTLCD_NM                                                     AS GR_STS_CCD_NM
             , CASE WHEN GRHD.GR_STS_CCD = #{p.gr_sts_ccd} THEN 'Y' ELSE 'N' END AS VALID_YN
          FROM GR GRHD
          INNER JOIN DTLCD CDDT
                     ON CDDT.TEN_ID = GRHD.TEN_ID AND CDDT.CCD = 'P035' AND CDDT.DTLCD = GRHD.GR_STS_CCD AND
                        CDDT.USE_YN = 'Y' AND CDDT.STS != 'D'
          INNER JOIN DTLCD_MULTLANG CDDL
                     ON CDDL.TEN_ID = CDDT.TEN_ID AND CDDL.CCD = CDDT.CCD AND CDDL.DTLCD = CDDT.DTLCD AND
                        CDDL.LANG_CCD = #{g.locale} AND CDDL.STS != 'D'
         WHERE GRHD.TEN_ID = #{g.tenant}
           AND GRHD.GR_UUID = #{p.gr_uuid}
    </select>
</mapper>
