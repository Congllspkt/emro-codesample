<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
PO: 발주헤더
PO_ITEM: 발주품목
 -->
 
<mapper namespace="sp-po">
    <select id="findListPoHeader" resultType="map">
    /* sp-po.findListPoHeader: 발주 목록 */
    SELECT HD.TEN_ID
         , HD.PO_UUID
         , HD.PO_NO
         , HD.PO_REVNO
         , HD.OORG_CD
         , HD.RFX_NO
         , HD.RFX_RND
         , HD.PURC_GRP_CD
         , HD.PO_TIT
         , HD.PLT_CD
         , HD.VD_CD
         , HD.VD_PIC_NM
         , HD.VD_PIC_TEL
         , HD.VD_PIC_EML
         , HD.PURC_TYP_CCD
         , HD.PO_REQ_TYP_CCD
         , HD.PO_TYP_CCD
         , HD.PO_CHG_TYP_CCD
         , HD.PO_CHG_REQ_TYP_CCD
         , HD.PO_CHG_REQ_STS_CCD
         , HD.PO_CHG_REQ_RSN
         , HD.DOMOVRS_DIV_CCD
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.CONV_CUR_CCD
         , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
         , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
         , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
         , HD.EXCHRATE_DT
         , HD.CNTR_SGNG_TYP_CCD  -- 계약 체결 유형
         , HD.PO_RMK
         , HD.ATHG_UUID
         , HD.PYMTMETH_CCD
         , HD.PYMTMETH_EXPLN
         , HD.PYMTMETH_USE_YN
         , HD.DLVYMETH_CCD
         , HD.DLVYMETH_EXPLN
         , HD.DLVYMETH_USE_YN
         , HD.TAX_TYP_CCD
         , HD.OTREXP_EXPLN
         , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
         , HD.PYMTMETH_CND
         , HD.UPRCCNTR_NO
         , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
         , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
         , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
         , HD.CNTR_ST_DT
         , HD.CNTR_EXP_DT
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.CPGUR_USE_YN
         , HD.CPGUR_TYP_CCD
         , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
         , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
         , HD.CPGUR_ST_DT
         , HD.CPGUR_EXP_DT
         , HD.DEFPGUR_USE_YN
         , HD.DEFPGUR_TYP_CCD
         , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
         , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
         , HD.DEFPGUR_PD_TYP_CCD
         , HD.DEFPGUR_PD
         , HD.APYMTGUR_USE_YN
         , HD.APYMTGUR_TYP_CCD
         , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
         , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
         , HD.APYMTGUR_ST_DT
         , HD.APYMTGUR_EXP_DT
         , HD.EFCT_PO_YN
         , HD.PO_CMPLD_YN
         , HD.VD_PO_STS_CCD
         , HD.APVL_STS_CCD
         , HD.PO_STS_CCD
         , HD.CNTR_ATHG_UUID
         , HD.CNTR_STS_CCD
         , HD.MSTAGT_YN
         , HD.MSTAGT_NO
         , HD.STS
         , HD.REGR_ID
         , HD.REG_DTTM
         , HD.MODR_ID
         , HD.MOD_DTTM
         , JB.PURC_GRP_NM
         , CASE WHEN HD.VD_PO_STS_CCD = 'RJCT'
                     AND HD.PO_RCPT_RJCT_RSN IS NOT NULL  THEN 'Y'
                ELSE 'N'
           END AS RECV_REFS_YN
         , HD.PO_RCPT_RJCT_RSN
         , HD.CNTR_UUID
         , HD.CNTR_NO
      FROM PO HD
      LEFT OUTER JOIN PURC_GRP JB
        ON JB.TEN_ID       = HD.TEN_ID
       AND JB.PURC_GRP_TYP_CCD = 'PURC'
       AND JB.PURC_GRP_CD  = HD.PURC_GRP_CD
       AND JB.CO_CD      = #{g.co_cd}
       AND JB.USE_YN       = 'Y'
     WHERE HD.TEN_ID      = #{g.tenant}
       AND HD.VD_CD       = #{g.vd_cd}  /* 협력사 코드 */
       AND HD.PO_STS_CCD IN ('APVD', 'CHG', 'TRMN') /* C:발주승인완료, M:발주변경, D:발주해지 */
        <if test="p.oorg_cd != null and p.oorg_cd.size() != 0">
            AND HD.OORG_CD IN
            <foreach close=")" collection="p.oorg_cd" item="item" open="(" separator=",">
                #{item}
            </foreach>
        </if>
       <if test="p.from_po_crn_dt != null">
       AND HD.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null">
       AND HD.PO_CRN_DT &lt;= #{p.to_po_crn_dt}
       </if>
       <if test="p.vd_po_sts_ccd != null and p.vd_po_sts_ccd != &quot;&quot;">
       AND HD.VD_PO_STS_CCD = #{p.vd_po_sts_ccd}
       </if>
       <if test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd != &quot;&quot;">
       AND HD.PO_CHG_TYP_CCD = #{p.po_chg_typ_ccd}
       </if>
       <if test="p.po_tit != null and p.po_tit != ''">
           <bind name="p_po_tit" value="'%' + p.po_tit + '%'"/>
       AND UPPER(HD.PO_TIT) LIKE UPPER(#{p_po_tit})
       </if>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND HD.PO_NO IN
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND HD.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
       <choose>
           <when test="p.cntr_nos != null and p.cntr_nos.size() != 0">
       AND HD.CNTR_NO IN
               <foreach close=")" collection="p.cntr_nos" item="cntr_no" open="(" separator=",">
                   #{cntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.cntr_no != null and p.cntr_no != ''">
                   <bind name="p_cntr_no" value="'%' + p.cntr_no + '%'"/>
       AND HD.CNTR_NO LIKE UPPER(#{p_cntr_no})
               </if>
           </otherwise>
       </choose>
       <choose>
           <when test="p.uprccntr_nos != null and p.uprccntr_nos.size() != 0">
       AND HD.UPRCCNTR_NO IN
               <foreach close=")" collection="p.uprccntr_nos" item="p_uprccntr_no" open="(" separator=",">
                   #{p_cntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.uprccntr_no != null and p.uprccntr_no != ''">
                   <bind name="p_uprccntr_no" value="'%' + p.uprccntr_no + '%'"/>
       AND HD.UPRCCNTR_NO LIKE UPPER(#{p_uprccntr_no})
               </if>
           </otherwise>
       </choose>
       AND HD.STS != 'D'
     ORDER BY HD.PO_NO DESC, HD.PO_REVNO DESC
    </select>
    <select id="findPoHeader" resultType="map">
    /* sp-po.findPoHeader: 발주 상세정보 조회 */
    SELECT HD.TEN_ID
         , HD.PO_UUID
         , HD.PO_NO
         , HD.PO_REVNO
         , HD.OORG_CD
         , HD.RFX_NO
         , HD.RFX_RND
         , HD.PURC_GRP_CD
         , HD.PO_TIT
         , HD.PLT_CD
         , HD.VD_CD
         , HD.VD_PIC_NM
         , HD.VD_PIC_TEL
         , HD.VD_PIC_EML
         , HD.PURC_TYP_CCD
         , HD.PO_REQ_TYP_CCD
         , HD.PO_TYP_CCD
         , HD.PO_CHG_TYP_CCD
         , HD.PO_CHG_REQ_TYP_CCD
         , HD.PO_CHG_REQ_STS_CCD
         , HD.PO_CHG_REQ_RSN
         , HD.DOMOVRS_DIV_CCD
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.CONV_CUR_CCD
         , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
         , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
         , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
         , HD.EXCHRATE_DT
         , HD.CNTR_SGNG_TYP_CCD -- 계약체결유형
         , HD.PO_RMK
         , HD.ATHG_UUID
         , HD.PYMTMETH_CCD
         , HD.PYMTMETH_EXPLN
         , HD.PYMTMETH_USE_YN
         , HD.DLVYMETH_CCD
         , HD.DLVYMETH_EXPLN
         , HD.DLVYMETH_USE_YN
         , HD.TAX_TYP_CCD
         , HD.OTREXP_EXPLN
         , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
         , HD.PYMTMETH_CND
         , HD.UPRCCNTR_NO
         , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
         , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
         , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
         , HD.CNTR_ST_DT
         , HD.CNTR_EXP_DT
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.CPGUR_USE_YN
         , HD.CPGUR_TYP_CCD
         , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
         , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
         , HD.CPGUR_ST_DT
         , HD.CPGUR_EXP_DT
         , HD.DEFPGUR_USE_YN
         , HD.DEFPGUR_TYP_CCD
         , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
         , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
         , HD.DEFPGUR_PD_TYP_CCD
         , HD.DEFPGUR_PD
         , HD.APYMTGUR_USE_YN
         , HD.APYMTGUR_TYP_CCD
         , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
         , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
         , HD.APYMTGUR_ST_DT
         , HD.APYMTGUR_EXP_DT
         , HD.PO_CMPLD_YN
         , HD.VD_PO_STS_CCD
         , HD.APVL_STS_CCD
         , HD.PO_STS_CCD
         , HD.CNTR_ATHG_UUID
         , HD.CNTR_STS_CCD
         , HD.MSTAGT_YN
         , HD.MSTAGT_NO
         , HD.STS
         , HD.REGR_ID
         , HD.REG_DTTM
         , HD.MODR_ID
         , HD.MOD_DTTM
         , VD.VD_NM
         , VD.ERP_VD_CD
         , HD.STAX_YN
         , HD.STTPYMT_RO_TYP_CCD
         , HD.CSTM_YN
         , HD.CSTM_TYP_CCD
         , CASE WHEN ( SELECT COUNT(1)
                         FROM PO_ITEM DT
                        WHERE DT.TEN_ID        = HD.TEN_ID
                          AND DT.PO_UUID         = HD.PO_UUID
                          AND DT.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                          AND DT.STS          != 'D'
                     ) &gt; 0
                     THEN 'Y'
                ELSE 'N'
           END AS HAS_NO_CD_ITEM
            , HD.CNTR_UUID
            , HD.CNTR_NO
      FROM PO HD
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
       AND VD.VD_CD = HD.VD_CD
     WHERE HD.TEN_ID = #{g.tenant}
       AND HD.PO_UUID = #{p.po_uuid}
       AND HD.STS != 'D'
    </select>
    <select id="findRfxIdByPoId" resultType="java.lang.String">
    /* sp-po.findRfxIdByPoId */
    SELECT POHD.RFX_UUID
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID  = #{p.po_uuid}
    </select>
    <resultMap id="poHdValidCheckMap" type="java.util.HashMap">
        <result column="VALID_YN" property="valid_yn"/>
        <collection javaType="java.util.ArrayList" property="itemList" resultMap="poHdMap"/>
    </resultMap>
    <resultMap id="poHdMap" type="java.util.HashMap">
        <id column="PO_UUID" property="po_uuid"/>
        <result column="PO_NO" property="po_no"/>
        <result column="PO_REVNO" property="po_revno"/>
        <result column="PO_STS_CCD" property="po_sts_ccd"/>
        <result column="VD_PO_STS_CCD" property="vd_po_sts_ccd"/>
        <result column="PO_CMPLD_YN" property="po_cmpld_yn"/>
    </resultMap>
    <select id="compareListPoHdVdSts" resultMap="poHdValidCheckMap">
    /* sp-po.compareListPoHdVdSts */
    SELECT POHD.PO_UUID
         , POHD.PO_NO
         , POHD.PO_REVNO
         , POHD.PO_STS_CCD
         , POHD.VD_PO_STS_CCD
         , POHD.PO_CMPLD_YN
         , CASE WHEN POHD.PO_STS_CCD = 'APVD'    /* 발주승인완료 */
                 AND POHD.VD_PO_STS_CCD = 'RCPT_WTG'    /* 협력사 접수전 */
                 AND POHD.PO_CMPLD_YN != 'Y'    /* 발주종료 아님 */
                     THEN 'Y'
                ELSE 'N'
           END  AS VALID_YN
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID IN
       <foreach close=")" collection="p.po_uuids" item="po_uuid" open="(" separator=",">
           #{po_uuid}
       </foreach>
       AND POHD.STS   != 'D'
    </select>
    <select id="comparePoHdVdSts" resultType="map">
    /* sp-po.comparePoHdVdSts */
    SELECT POHD.PO_UUID
         , POHD.PO_NO
         , POHD.PO_REVNO
         , POHD.PO_STS_CCD
         , POHD.VD_PO_STS_CCD
         , POHD.PO_CMPLD_YN
         , CASE WHEN POHD.PO_STS_CCD = #{p.po_sts_ccd}
                 AND POHD.VD_PO_STS_CCD = #{p.vd_po_sts_ccd}
                 AND POHD.PO_CMPLD_YN != 'Y'    /* 발주종료 아님 */
                     THEN 'Y'
                ELSE 'N'
           END  AS VALID_YN
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID  = #{p.po_uuid}
       AND POHD.STS   != 'D'
    </select>
    <!-- 기성요청을 위한 발주정보 조회 -->
    <select id="findInitProgressPaymentRequestByPoUuid" resultType="map">
    /* sp-po.findInitProgressPaymentRequestByPoUuid: 초기 기성요청 헤더 조회 */
    SELECT POHD.PO_UUID
         , POHD.PO_NO
         , POHD.PO_REVNO
         , POHD.PO_TIT  AS ASN_TIT
         , POHD.OORG_CD
         , POHD.VD_CD
         , POHD.PURC_TYP_CCD
         , POHD.DOMOVRS_DIV_CCD
         , POHD.PYMTMETH_CCD
         , POHD.PYMTMETH_EXPLN
         , POHD.DLVYMETH_CCD
         , POHD.DLVYMETH_EXPLN
         , POHD.CUR_CCD
         , POHD.PURC_GRP_CD
         , POHD.PO_AMT
         , ( SELECT SUM(GRHD.GR_AMT)
               FROM GR GRHD
              WHERE GRHD.TEN_ID      = POHD.TEN_ID
                AND GRHD.PO_NO       = POHD.PO_NO  /* 발주변경이 가능하므로 PO_UUID가 아닌 PO_NO로 조회하여 이전 발주차수에 연결된 GR들도 포함한다 (작성하기 위한 데이터 조회이므로 현재 발주차수가 최종 발주차수임) */
                AND GRHD.GR_STS_CCD = 'PP_CMPLD' /* C:기성완료 */
           ) AS GR_TTL_AMT    /*전회누계금액*/
         , ( SELECT SUM(POPP.PYMT_AMT)
               FROM PO_PYMT_EXPT POPP
              WHERE POPP.TEN_ID     = POHD.TEN_ID
                AND POPP.PO_UUID      = POHD.PO_UUID
                AND POPP.PYMT_TYP_CCD = 'APYMT'
           ) AS APYMT_AMT
         , ( SELECT COUNT(POPP.PO_PYMT_EXPT_UUID)
               FROM PO_PYMT_EXPT POPP
              WHERE POPP.TEN_ID = POHD.TEN_ID
                AND POPP.PO_UUID  = POHD.PO_UUID
           ) AS PAY_PLAN_CNT   /* 총 지급회차 count */
         , ( SELECT COUNT(GR.GR_UUID)
               FROM GR GR
              WHERE GR.TEN_ID      = POHD.TEN_ID
                AND GR.PO_NO       = POHD.PO_NO
                AND GR.GR_STS_CCD = 'PP_CMPLD'
                AND GR.STS        != 'D'
           ) + 1 AS CRNT_PAY_REV    /* 현재 지급회차: 이전차수까지의 총 기성승인 건 count + 1 (작성하기 위한 데이터 조회이므로 현재 발주차수가 최종 발주차수임) */
         , ( SELECT SUM(POPP.PYMT_AMT)
               FROM PO_PYMT_EXPT POPP
              WHERE POPP.TEN_ID  = POHD.TEN_ID
                AND POPP.PO_UUID   = POHD.PO_UUID
                AND POPP.PYMT_REVNO <![CDATA[<=]]> COALESCE( ( SELECT MAX(GR.GR_ORDN)
                                                              FROM GR GR
                                                             WHERE GR.TEN_ID      = POHD.TEN_ID
                                                               AND GR.PO_NO       = POHD.PO_NO
                                                               AND GR.GR_STS_CCD = 'PP_CMPLD'
                                                               AND GR.STS        != 'D'
                                                          ), 0) + 1  /* 최종 승인차수 + 1 */
           ) AS SUM_PAY_PLAN_AMT  /* 차수기준 지급계획 총액 */
         , #{p.apymt_yn}  AS APYMT_YN
         , CASE WHEN ( SELECT COUNT(1)
                         FROM PO_ITEM PODT
                        WHERE PODT.TEN_ID        = POHD.TEN_ID
                          AND PODT.PO_UUID         = POHD.PO_UUID
                          AND PODT.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                          AND PODT.STS          != 'D'
                     ) &gt; 0
                     THEN 'Y'
                ELSE 'N'
           END AS HAS_NO_CD_ITEM
      FROM PO POHD
     WHERE POHD.TEN_ID = #{g.tenant}
       AND POHD.PO_UUID  = #{p.po_uuid}
    </select>
    <!-- 기성요청 가능여부 체크 -->
    <select id="validateProgressPaymentRequestStatus" resultType="map">
    /* sp-po.validateProgressPaymentRequestStatus: 기성요청 가능여부 확인 */
    SELECT T.PO_NO
         , T.VD_GR_STS_CCD
         , T.CHECK_RESULT
      FROM ( SELECT POHD.PO_NO                                         AS PO_NO
                  , POHD.VD_GR_STS_CCD                                AS VD_GR_STS_CCD /* 업체 입고 진행 상태(공사/용역) */
                  , CASE WHEN POHD.PO_CMPLD_YN = 'Y'
                              THEN 'PO_COMPLETE'                       /* 발주 종료 */
                         WHEN ( SELECT COUNT(1)
                                  FROM PO
                                 WHERE TEN_ID      = POHD.TEN_ID
                                   AND PO_NO       = POHD.PO_NO
                                   AND PO_REVNO      = ( SELECT MAX(PO_REVNO) FROM PO WHERE TEN_ID = POHD.TEN_ID AND PO_NO = POHD.PO_NO AND STS != 'D' )
                                   AND STS        != 'D'
                                   AND PO_CHG_TYP_CCD     = 'TRMN'
                                   AND PO_STS_CCD = 'TRMN'  /* 발주 진행상태(D:발주해지) */
                              ) &gt; 0
                              THEN 'PO_TERMINATE'                      /* 발주해지 */
                         WHEN ( SELECT COUNT(1)
                                  FROM PO
                                 WHERE TEN_ID      = POHD.TEN_ID
                                   AND PO_NO       = POHD.PO_NO
                                   AND PO_REVNO      = ( SELECT MAX(PO_REVNO) FROM PO WHERE TEN_ID = POHD.TEN_ID AND PO_NO = POHD.PO_NO AND STS != 'D' )
                                   AND STS        != 'D'
                                   AND PO_CHG_TYP_CCD     = 'CHG'
                                   AND PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG')  /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중) */
                              ) &gt; 0
                              THEN 'PO_CHANGE_PROGRESS'                /* 발주변경 진행중 */
                         <choose>
                           <when test="p.apymt_yn != null and p.apymt_yn == &quot;N&quot;">
                         WHEN (
                                  ( SELECT COUNT(1)
                                      FROM PO_PYMT_EXPT POPP
                                     WHERE POPP.TEN_ID     = POHD.TEN_ID
                                       AND POPP.PO_UUID      = POHD.PO_UUID
                                       AND POPP.PYMT_TYP_CCD = 'APYMT'
                                  ) &gt; 0  -- 선급금 지급계획 존재
                              AND ( SELECT COUNT(1)
                                      FROM GR GR
                                     WHERE GR.TEN_ID      = POHD.TEN_ID
                                       AND GR.VD_CD       = #{g.vd_cd}
                                       AND GR.PO_NO       = POHD.PO_NO
                                       AND GR.GR_STS_CCD = 'PP_CMPLD'
                                       AND GR.STS        != 'D'
                                  ) = 0 -- 기성(선급금 포함)완료된 건이 미존재
                              )
                              THEN 'PRE_PAY_REG_INCOMPLETE'            /* 선급금 등록 미완료 */
                         <if test="p.asn_uuid == null or p.asn_uuid == ''">
                         WHEN POHD.VD_GR_STS_CCD IN ('CRNG', 'PP_WTG', 'PP_PRGSG')   /* T:기성요청임시저장, S:기성요청, P:기성진행중 */
                              THEN 'VD_GR_STS_CCD_ERR'                /* 기성요청 상태 오류 */
                         </if>
                           </when>
                           <otherwise>
                         WHEN ( SELECT COUNT(1)
                                  FROM GR GR
                                 WHERE GR.TEN_ID       = POHD.TEN_ID
                                   AND GR.VD_CD        = #{g.vd_cd}
                                   AND GR.PO_NO        = POHD.PO_NO
                                   AND GR.GR_STS_CCD IN ('CRNG', 'APVL_REQ')    /* T:임시저장, P:승인요청 */
                                   AND GR.STS         != 'D'
                              ) &gt; 0
                              THEN 'PRE_PAY_REG_PROGRESS'              /* 선급금 등록 진행중 */
                         WHEN ( SELECT COUNT(1)
                                  FROM GR GR
                                 WHERE GR.TEN_ID       = POHD.TEN_ID
                                   AND GR.VD_CD        = #{g.vd_cd}
                                   AND GR.PO_NO        = POHD.PO_NO
                                   AND GR.GR_STS_CCD  = 'PP_CMPLD'           /* C:기성완료 */
                                   AND GR.STS         != 'D'
                              ) &gt; 0
                              THEN 'PRE_PAY_REG_COMPLETE'              /* 선급금 등록 완료 */
                         WHEN ( SELECT COUNT(1)
                                  FROM ASN AR
                                 WHERE AR.TEN_ID       = POHD.TEN_ID
                                   AND AR.VD_CD        = #{g.vd_cd}
                                   AND AR.PO_NO        = POHD.PO_NO
                                   <if test="p.asn_uuid != null and p.asn_uuid != ''">
                                   AND AR.ASN_UUID       != #{p.asn_uuid}
                                   </if>
                                   AND AR.ASN_STS_CCD  = 'CRNG'           /* T:기성요청임시저장 */
                                   AND AR.STS         != 'D'
                              ) &gt; 0
                              THEN 'PRE_PAY_REQ_PROGRESS'              /* 선급금 요청중 */
                         WHEN ( SELECT COUNT(1)
                                  FROM ASN AR
                                 WHERE AR.TEN_ID       = POHD.TEN_ID
                                   AND AR.VD_CD        = #{g.vd_cd}
                                   AND AR.PO_NO        = POHD.PO_NO
                                   AND AR.ASN_STS_CCD  = 'WTG'           /* S:기성승인대기 */
                                   AND AR.STS         != 'D'
                              ) &gt; 0
                              THEN 'PRE_PAY_REQ_COMPLETE'                 /* 선급금 요청완료 (승인대기) */
                           </otherwise>
                         </choose>
                         ELSE NULL
                    END                                                AS CHECK_RESULT
               FROM PO POHD
              WHERE POHD.TEN_ID = #{g.tenant}
                AND POHD.PO_UUID  = #{p.po_uuid}
           ) T
     WHERE T.CHECK_RESULT IS NOT NULL </select>
    <!-- 발주기준 기성현황 조회 -->
    <select id="searchPoForProgressPayment" resultType="map">
    /* sp-po.searchPoForProgressPayment: 발주기준 기성현황 조회 */
    SELECT X.TEN_ID
         , X.PO_UUID
         , X.VD_CD
         , X.PO_NO                /*발주번호*/
         , X.PO_REVNO               /*발주차수*/
         , X.OORG_CD          /*운영조직*/
         , X.PO_TIT               /*발주명*/
         , X.CUR_CCD                  /*통화*/
         , X.PO_AMT           /*발주금액*/
         , X.APYMT_AMT          /*선급금(PO기준)*/
         , X.ASN_AMT           /*요청금액*/
         , X.GR_TTL_AMT           /*승인금액*/
         , X.REMAIN_AMT           /*잔여금액*/
         , X.PO_CRN_DT          /*발주일자*/
         , X.ASN_DT              /*기성요청일자*/
         , X.PO_STS_CCD          /*발주진행상태*/
         , X.VD_PO_STS_CCD          /*협력사접수상태*/
         , X.VD_GR_STS_CCD        /*업체 입고 진행 상태(공사/용역)*/
         , X.PURC_TYP_CCD
      FROM ( SELECT PO.TEN_ID
                  , PO.PO_UUID
                  , PO.VD_CD
                  , PO.PO_NO                /*발주번호*/
                  , PO.PO_REVNO               /*발주차수*/
                  , PO.OORG_CD          /*운영조직*/
                  , PO.PO_TIT               /*발주명*/
                  , PO.CUR_CCD                  /*통화*/
                  , PO.PO_AMT           /*발주금액*/
                  , ( SELECT SUM(POPP.PYMT_AMT)
                        FROM PO_PYMT_EXPT POPP
                       WHERE POPP.TEN_ID     = PO.TEN_ID
                         AND POPP.PO_UUID      = PO.PO_UUID
                         AND POPP.PYMT_TYP_CCD = 'APYMT'
                    ) AS APYMT_AMT        /*선급금*/
                  , (CASE WHEN AR.ASN_AMT IS NULL THEN 0 ELSE AR.ASN_AMT END)                             AS ASN_AMT          /*요청금액*/
                  , (CASE WHEN GR.GR_TTL_AMT IS NULL THEN 0 ELSE GR.GR_TTL_AMT END)                             AS GR_TTL_AMT          /*승인금액*/
                  , (CASE WHEN GR.GR_TTL_AMT IS NULL THEN PO.PO_AMT ELSE PO.PO_AMT - GR.GR_TTL_AMT END) AS REMAIN_AMT /*잔여금액*/
                  , PO.PO_CRN_DT          /*발주일자*/
                  , AR.ASN_DT              /*기성요청일자*/
                  , PO.PO_STS_CCD          /*발주진행상태*/
                  , PO.VD_PO_STS_CCD          /*협력사접수상태*/
                  , PO.VD_GR_STS_CCD        /*업체 입고 진행 상태(공사/용역)*/
                  , PO.PURC_TYP_CCD
               FROM PO PO
               LEFT OUTER JOIN ( SELECT A.TEN_ID
                                      , A.PO_UUID
                                      , SUM(A.ASN_AMT) AS ASN_AMT  /*요청금액*/
                                      , MAX(A.ASN_DT)      AS ASN_DT
                                   FROM ASN A
                                  WHERE A.TEN_ID      = #{g.tenant}
                                    AND A.VD_CD       = #{g.vd_cd}
                                    AND A.ASN_STS_CCD IN ('WTG', 'PRGSG') /* S:기성승인대기, P:기성진행중*/
                                  GROUP BY A.TEN_ID
                                          ,A.PO_UUID ) AR
                 ON PO.TEN_ID = AR.TEN_ID
                AND PO.PO_UUID  = AR.PO_UUID
               LEFT OUTER JOIN ( SELECT A.TEN_ID
                                      , A.PO_NO
                                      , SUM(A.GR_AMT) AS GR_TTL_AMT  /*승인금액*/
                                   FROM GR A
                                  WHERE A.TEN_ID      = #{g.tenant}
                                    AND A.VD_CD       = #{g.vd_cd}
                                    AND A.GR_STS_CCD = 'PP_CMPLD' /* C:기성완료 */
                                  GROUP BY A.TEN_ID
                                         , A.PO_NO ) GR
                 ON PO.TEN_ID = GR.TEN_ID
                AND PO.PO_NO  = GR.PO_NO
              WHERE PO.TEN_ID      = #{g.tenant}
                AND PO.VD_CD       = #{g.vd_cd}
                AND PO.PO_STS_CCD = 'APVD'   /* C:계약승인완료 */
                AND PO.PURC_TYP_CCD    = 'CONSTSVC'  /* CONSTSVC:공사용역 */
                AND PO.VD_PO_STS_CCD <![CDATA[<>]]> 'RJCT'  /* R:거부 */
        <!-- 운영조직 -->
        <choose>
            <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
                AND PO.OORG_CD IN
                <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
                    #{oorg_cd}
                </foreach>
            </when>
            <otherwise>
                AND PO.OORG_CD = ''
               </otherwise>
        </choose>
        <!-- 발주일자 -->
        <if test="p.from_po_crn_dt != null">
                AND PO.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
        </if>
        <if test="p.to_po_crn_dt != null">
                AND PO.PO_CRN_DT <![CDATA[<=]]> #{p.to_po_crn_dt}
        </if>
    <!-- 발주번호 -->
        <choose>
            <when test="p.po_nos != null and p.po_nos.size() != 0">
                AND PO.PO_NO IN
                <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                    #{po_no}
                </foreach>
            </when>
            <otherwise>
                <if test="p.po_no != null and p.po_no != &quot;&quot;">
                    <bind name="noPattern" value="'%' + p.po_no + '%'"/>
                AND PO.PO_NO LIKE UPPER(#{noPattern})
                </if>
            </otherwise>
        </choose>
        <!-- 품목명 -->
        <if test="p.po_tit != null and p.po_tit != &quot;&quot;">
            <bind name="nmPattern" value="'%' + p.po_tit + '%'"/>
                AND UPPER(PO.PO_TIT) LIKE UPPER(#{nmPattern})
        </if>
        <!-- 상태 -->
        <if test="p.vd_gr_sts_ccd != null and p.vd_gr_sts_ccd != &quot;&quot;">
                AND PO.VD_GR_STS_CCD = #{p.vd_gr_sts_ccd}
        </if>
           ) X
     ORDER BY X.PO_NO DESC, X.PO_REVNO DESC
    </select>
    <select id="findInfoDocumentOutputSpPoHeader" resultType="map">
    /* sp-po.findInfoDocumentOutputSpPoHeader : 협력사 발주서(헤더정보) 출력 */
		SELECT  G.*
		     , CONCAT(CONCAT(G.REG_NM, CASE WHEN G.REG_MOBILE IS NULL OR G.REG_MOBILE = '' THEN ''
                                            ELSE CONCAT(' / ', G.REG_MOBILE)
                                        END), CASE WHEN G.REG_EMAIL IS NULL OR G.REG_EMAIL = '' THEN ''
                                                   ELSE CONCAT(' / ', G.REG_EMAIL)
                                               END) AS PO_CHR_INFO		--구매담당자
		     , CONCAT(G.GR_CHR_NM, CASE WHEN G.GR_TEL IS NULL OR G.GR_TEL = '' THEN ''
                                        ELSE CONCAT(' / ', G.GR_TEL)
                                    END) AS GR_CHAR_INFO		--인수자
		     , CONCAT(CASE WHEN G.DELY_ADDR IS NULL OR G.DELY_ADDR = '' THEN ''
		                   ELSE G.DELY_ADDR
		               END, CASE WHEN G.DELY_LOCAT IS NULL OR G.DELY_LOCAT = '' THEN ''
                                 ELSE CONCAT(CONCAT(' (', G.DELY_LOCAT), ')')
                             END) AS GR_ADDR_INFO --인수주소
		     , TO_CHAR(CAST(G.PO_CRN_DT AS TIMESTAMP), 'YYYY/MM/DD')  AS PO_DATE
		  FROM (
		        SELECT POHD.PO_UUID
		             , POHD.PO_NO		--P/O NO.
		             , POHD.PO_CRN_DT   --P/O Date
		             , POHD.VD_CD
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN VDGL.VD_NM
		                    ELSE VDGL.CEO_NM_EN END AS VD_NM		--공급사/Supplier
		             , (SELECT  CASE WHEN 'en_US' = #{g.locale}
		                                 THEN VDUSR.USR_NM_EN
		                            ELSE VDUSR.USR_NM
		                        END
		                  FROM USR VDUSR
		                 INNER JOIN ROLE_USR
		                    ON ROLE_USR.TEN_ID = VDUSR.TEN_ID
		                   AND ROLE_USR.USR_ID = VDUSR.USR_ID
		                   AND ROLE_USR.STS != 'D'
		                 WHERE VDUSR.TEN_ID = #{g.tenant}
		                   AND VDUSR.VD_CD = VDGL.VD_CD
		                   AND VDUSR.USE_YN = 'Y'
		                   AND ROLE_USR.ROLE_CD = 'V600' -- 발주 담당자 권한
		                   AND ROWNUM = 1  ) AS VD_USR_NM
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CONCAT(CASE WHEN VDGL.DTL_ADDR_EN_1 IS NULL OR VDGL.DTL_ADDR_EN_1 = '' THEN ''
		                                          ELSE VDGL.DTL_ADDR_EN_1
		                                      END, CASE WHEN VDGL.DTL_ADDR_EN_2 IS NULL OR VDGL.DTL_ADDR_EN_2 = '' THEN ''
		                                                ELSE VDGL.DTL_ADDR_EN_2
		                                            END)
		                    ELSE CONCAT(CASE WHEN VDGL.DTL_ADDR_1 IS NULL OR VDGL.DTL_ADDR_1 = '' THEN ''
		                                     ELSE VDGL.DTL_ADDR_1
		                                 END, CASE WHEN VDGL.DTL_ADDR_2 IS NULL OR VDGL.DTL_ADDR_2 = '' THEN ''
		                                           ELSE VDGL.DTL_ADDR_2
		                                       END)
		                END AS VD_ADDR		--공급사 주소
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(VDGL.BIZREGNO, 1, 3), '-'), SUBSTR(VDGL.BIZREGNO, 4, 2)), '-'), SUBSTR(VDGL.BIZREGNO, 6, 5))  AS BIZ_REG_NO /*공급처 사업자번호*/
		             , VDGL.VD_EML AS VD_EMAIL		--공급사 이메일
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CORP.LOGIC_ORG_NM_EN
		                    ELSE CORP.LOGIC_ORG_NM
		                END AS BUYER_NM		--발주사명/Buyer
		             , CASE WHEN 'en_US' = #{g.locale}
		                         THEN CORP.ADDR_EN
		                    ELSE CORP.ADDR
		                END AS CORP_ADDR			--발주사주소/Buyer addr
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(CORP.BIZREGNO, 1, 3), '-'), SUBSTR(CORP.BIZREGNO, 4, 2)), '-'), SUBSTR(CORP.BIZREGNO, 6, 5))  AS CORP_BIZ_REG_NO		--발주사 사업자번호
		             , POHD.REGR_ID
		             , CASE WHEN 'en_US' = #{g.locale}
		                    THEN PO_CHR.USR_NM 
		                    ELSE PO_CHR.USR_NM_EN END AS REG_NM		--구매담당자/Purchase
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN PO_CHR.MOB 
		                    ELSE CONCAT('+82-', SUBSTR(PO_CHR.TEL, 2))  END AS REG_MOBILE		--구매담당자/Purchase
		             , PO_CHR.EML AS REG_EMAIL		--구매담당자/Purchase
		             , CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(PLT.BIZREGNO, 1, 3), '-'), SUBSTR(PLT.BIZREGNO, 4, 2)), '-'), SUBSTR(PLT.BIZREGNO, 6, 5))  AS PLT_BIZ_REG_NO		--세금계산서 사업자번호
		             , PLT.LOGIC_ORG_NM AS PLT_OFFICIAL_NM		--사업자명
		             , POHD.CUR_CCD 					--통화/currency
		             , POHD.SUP_AMT						--공급가액
		             , POHD.VAT_AMT						--세액
		             , POHD.CNTR_AMT					--합계금액 -내자- (SUP_AMT+vat_amt)
		             , PODT.GR_PIC_ID
		             , GR_USR.USR_NM AS GR_CHR_NM		--MRO수령자명
		             , GR_USR.TEL AS GR_TEL				--MRO수령자전화번호
		             , PLT.ADDR AS DELY_ADDR        	--MRO수령자납품주소
		             , PLT.LOGIC_ORG_NM AS DELY_LOCAT   --MRO수령자납품장소
		             , POHD.PYMTMETH_CCD    			--외자-Payment Temrs-P009
		             , CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		                    THEN CDDL1.DTLCD_NM
		                    ELSE POHD.PYMTMETH_EXPLN END AS PAY_TERMS_NM
		             , POHD.DLVYMETH_CCD 				--외자-Incoterms-P010
		             , SUBSTR(CDDL2.DTLCD_NM, 7, 999)  AS DELY_TERMS_NM
		             , OOMG_CORP.PARNODE_OORG_CD
		          FROM PO POHD
		         INNER JOIN PO_ITEM PODT 
		            ON PODT.TEN_ID = POHD.TEN_ID
		           AND PODT.PO_UUID  = POHD.PO_UUID
		           AND PODT.STS != 'D'
		         INNER JOIN VD VDGL
		            ON VDGL.TEN_ID = POHD.TEN_ID
		           AND VDGL.VD_CD  = POHD.VD_CD
		         INNER JOIN USR PO_CHR
		            ON PO_CHR.TEN_ID = POHD.TEN_ID
		           AND PO_CHR.USR_ID = POHD.REGR_ID
		         INNER JOIN OORG OOMG_CORP  
		            ON OOMG_CORP.TEN_ID = POHD.TEN_ID
		           AND OOMG_CORP.OORG_CD = POHD.OORG_CD  
		         INNER JOIN OORG OOMG_CORP_2  
		            ON OOMG_CORP_2.TEN_ID = OOMG_CORP.TEN_ID
		           AND OOMG_CORP_2.OORG_CD = OOMG_CORP.PARNODE_OORG_CD
		         INNER JOIN LOGIC_ORG CORP
		            ON CORP.TEN_ID = OOMG_CORP_2.TEN_ID
		           AND CORP.LOGIC_ORG_TYP_CCD = OOMG_CORP_2.LOGIC_ORG_TYP_CCD
		           AND CORP.LOGIC_ORG_CD = OOMG_CORP_2.LOGIC_ORG_CD
		         INNER JOIN OORG OOMG_PLT  
		            ON OOMG_PLT.TEN_ID = POHD.TEN_ID
		           AND OOMG_PLT.OORG_CD = POHD.OORG_CD
		         INNER JOIN LOGIC_ORG PLT
		            ON PLT.TEN_ID = OOMG_PLT.TEN_ID
		           <!-- AND PLT.LOGIC_ORG_TYP_CCD = OOMG_PLT.LOGIC_ORG_TYP_CCD 
		           AND PLT.ORG_CD = OOMG_PLT.ORG_CD -->
		          LEFT OUTER JOIN USR GR_USR
		            ON GR_USR.TEN_ID = PODT.TEN_ID
		           AND GR_USR.USR_ID = PODT.GR_PIC_ID
		          LEFT OUTER JOIN DTLCD_MULTLANG CDDL1
		            ON CDDL1.TEN_ID = POHD.TEN_ID
		           AND CDDL1.CCD    = 'P009'				/* CONSTANT */
		           AND CDDL1.DTLCD  = POHD.PYMTMETH_CCD
		           AND CDDL1.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		          LEFT OUTER JOIN DTLCD_MULTLANG CDDL2
		            ON CDDL2.TEN_ID = POHD.TEN_ID
		           AND CDDL2.CCD    = 'P010' 				/* CONSTANT */
		           AND CDDL2.DTLCD  = POHD.DLVYMETH_CCD
		           AND CDDL2.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		         WHERE POHD.TEN_ID = #{g.tenant} 			/* SESSION.TEN_ID */
		           AND POHD.PO_UUID = #{p.po_uuid}  		/* VARIABLE */
		           AND POHD.STS != 'D'						/* CONSTANT */
		        ) G
		 WHERE 1=1
		   AND ROWNUM = 1 </select>
	<select id="findListDocumentOutputSpPoDetail" resultType="map">
	/* sp-po.findListDocumentOutputSpPoDetail : 협력사 발주서(품목정보) 출력 */
		SELECT PODT.TEN_ID
        	 , ROW_NUMBER() OVER(ORDER BY PODT.PO_LNO) AS SEQ
        	 , PODT.PO_LNO  	AS PO_SEQ
        	 , PODT.ITEM_CD 	AS ITEM_CD 
        	 , PODT.ITEM_NM 	AS ITEM_NM 		/*Description*/
        	 , PODT.ITEM_SPEC   AS SPEC    		/*Specification*/
        	 , PODT.PO_QTY   	AS PO_QTY  	/*Quantity*/
        	 , PODT.UOM_CCD    	AS UNIT_CD  	/*U/M*/
        	 , PODT.PO_UPRC 	AS PO_UPRC  	/*Unit Price*/
        	 , PODT.PO_AMT  	AS PO_AMT  	/*Amount*/
        	 , TO_CHAR(CAST(PODT.REQ_DLVY_DT AS TIMESTAMP), 'YYYY-MM-DD')  AS RD_DATE  /*Request Date*/
             , PODT.PO_UUID
        	 , PODT.DLVY_PLC
		  FROM PO_ITEM PODT
		  LEFT OUTER JOIN DTLCD_MULTLANG CDDL
		    ON CDDL.TEN_ID   = PODT.TEN_ID
		   AND CDDL.CCD      = 'C018'		/* CONSTANT */
		   AND CDDL.LANG_CCD = #{g.locale} 	/* SESSION.LANG_CD */
		   AND CDDL.DTLCD = PODT.WH_CCD
		   AND CDDL.STS     != 'D'			/* CONSTANT */
		 WHERE PODT.TEN_ID   = #{g.tenant} 	/* SESSION.TEN_ID */
		   AND PODT.PO_UUID  = #{p.po_uuid} /* VARIABLE */
		   AND PODT.STS     != 'D'			/* CONSTANT */
		 ORDER BY TO_NUMBER(PODT.PO_LNO)
	</select>
</mapper>
