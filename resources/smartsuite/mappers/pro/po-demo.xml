<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
PO: 발주헤더
PO_ITEM: 발주품목
 -->

<mapper namespace="po-demo">
    <select id="findListPoHeaderDemo" resultType="map">
    /* po-demo.findListPoHeaderDemo: 발주 목록 */
    SELECT HD.TEN_ID
         , HD.PO_UUID
         , TASK_PO.TASK_UUID AS PO_TASK_UUID
         , TASK_PO_CHG.TASK_UUID AS PO_CHG_TASK_UUID
         , HD.PO_NO
         , HD.PO_REVNO
         , HD.OORG_CD
         , HD.RFX_UUID
         , HD.RFX_NO
         , HD.RFX_RND
         , HD.PO_TIT
         , HD.PLT_CD
         , HD.VD_CD
         , HD.VD_PIC_NM
         , HD.VD_PIC_TEL
         , HD.VD_PIC_EML
         , HD.PURC_TYP_CCD
         , HD.PO_REQ_TYP_CCD
         , HD.PO_TYP_CCD
         , HD.DOMOVRS_DIV_CCD
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.CONV_CUR_CCD
         , (CASE WHEN HD.PO_AMT  IS NULL THEN 0 ELSE HD.PO_AMT  END) AS PO_AMT
         , (CASE WHEN HD.PO_CONV_AMT IS NULL THEN 0 ELSE HD.PO_CONV_AMT END) AS PO_CONV_AMT
         , (CASE WHEN HD.EXCHRATE   IS NULL THEN 0 ELSE HD.EXCHRATE   END) AS EXCHRATE
         , HD.EXCHRATE_DT
         , HD.CNTR_SGNG_TYP_CCD
         , HD.PO_RMK
         , HD.ATHG_UUID
         , HD.PYMTMETH_CCD
         , HD.PYMTMETH_EXPLN
         , HD.PYMTMETH_USE_YN
         , HD.DLVYMETH_CCD
         , HD.DLVYMETH_EXPLN
         , HD.DLVYMETH_USE_YN
         , HD.TAX_TYP_CCD
         , HD.OTREXP_EXPLN
         , (CASE WHEN HD.OTREXP   IS NULL THEN 0 ELSE HD.OTREXP   END) AS OTREXP
         , HD.PYMTMETH_CND
         , HD.UPRCCNTR_NO
         , (CASE WHEN HD.CNTR_AMT   IS NULL THEN 0 ELSE HD.CNTR_AMT   END) AS CNTR_AMT
         , (CASE WHEN HD.SUP_AMT IS NULL THEN 0 ELSE HD.SUP_AMT END) AS SUP_AMT
         , (CASE WHEN HD.VAT_AMT    IS NULL THEN 0 ELSE HD.VAT_AMT    END) AS VAT_AMT
         , HD.CNTR_ST_DT
         , HD.CNTR_EXP_DT
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.CPGUR_USE_YN
         , HD.CPGUR_TYP_CCD
         , (CASE WHEN HD.CPGUR_RO IS NULL THEN 0 ELSE HD.CPGUR_RO END) AS CPGUR_RO
         , (CASE WHEN HD.CPGUR_AMT  IS NULL THEN 0 ELSE HD.CPGUR_AMT  END) AS CPGUR_AMT
         , HD.CPGUR_ST_DT
         , HD.CPGUR_EXP_DT
         , HD.DEFPGUR_USE_YN
         , HD.DEFPGUR_TYP_CCD
         , (CASE WHEN HD.DEFPGUR_RO IS NULL THEN 0 ELSE HD.DEFPGUR_RO END) AS DEFPGUR_RO
         , (CASE WHEN HD.DEFPGUR_AMT  IS NULL THEN 0 ELSE HD.DEFPGUR_AMT  END) AS DEFPGUR_AMT
         , HD.DEFPGUR_PD_TYP_CCD
         , HD.DEFPGUR_PD
         , HD.APYMTGUR_USE_YN
         , HD.APYMTGUR_TYP_CCD
         , (CASE WHEN HD.APYMTGUR_RO IS NULL THEN 0 ELSE HD.APYMTGUR_RO END) AS APYMTGUR_RO
         , (CASE WHEN HD.APYMTGUR_AMT  IS NULL THEN 0 ELSE HD.APYMTGUR_AMT  END) AS APYMTGUR_AMT
         , HD.APYMTGUR_ST_DT
         , HD.APYMTGUR_EXP_DT
         , HD.PO_CMPLD_YN
         , HD.VD_PO_STS_CCD
         , HD.APVL_STS_CCD
         , HD.PO_STS_CCD
         , HD.CNTR_ATHG_UUID
         , HD.CNTR_STS_CCD
         , HD.MSTAGT_YN
         , HD.MSTAGT_NO
         , HD.PO_CHG_TYP_CCD
         , HD.PO_CHG_REQ_TYP_CCD
         , HD.PO_CHG_REQ_RSN
         , HD.PO_CHG_REQ_STS_CCD
         , HD.PO_CHG_REQ_APVL_STS_CCD
         , HD.PO_CHG_REQR_ID
         , HD.PO_CHG_REQ_DEPT_CD
         , HD.PO_CHG_REQ_DT
         , HD.PO_TRMN_PIC_ID
         , HD.PO_TRMN_RSN
         , HD.PO_TRMN_DT
         , HD.CSTM_YN
         , HD.CSTM_TYP_CCD
         , HD.STS
         , HD.REGR_ID
         , HD.REG_DTTM
         , HD.MODR_ID
         , HD.MOD_DTTM
         , VD.VD_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
         , VD.ERP_VD_CD
         , HD.PO_RCPT_RJCT_RSN
         , HD.CNTR_UUID
         , HD.CNTR_NO
         , PO_CNTR_REQ.PO_CNTR_REQ_UUID
         , PO_CNTR_REQ.CNTR_REQ_TYP_CCD
         , PO_CNTR_REQ.REQ_STS_CCD
         , HD.IF_STS_CCD
         , HD.IF_MSG
      FROM PO HD
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
       AND VD.VD_CD = HD.VD_CD
      LEFT OUTER JOIN TASK_APVL TASK_PO
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO'
       AND TASK_PO.USE_YN = 'Y'
      LEFT OUTER JOIN TASK_APVL TASK_PO_CHG
        ON TASK_PO.TEN_ID = HD.TEN_ID
       AND TASK_PO.TASK_UUID = HD.PO_UUID
       AND TASK_PO.APVL_TYP_CCD = 'PO_CHG'
       AND TASK_PO.USE_YN = 'Y'
      LEFT OUTER JOIN PO_CNTR_REQ
        ON PO_CNTR_REQ.TEN_ID = HD.TEN_ID
       AND PO_CNTR_REQ.PO_UUID = HD.PO_UUID
     WHERE HD.TEN_ID = #{g.tenant}
       <choose>
           <when test="p.req_dept_yn == &quot;Y&quot;">
       AND (HD.PO_STS_CCD IN ('APVD', 'CHG', 'TRMN') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C', 'T', 'P')) /* PO변경 요청부서 */
       /* PR(구매요청)이 있는 발주 건들만 조회 */
       AND EXISTS ( SELECT A.PO_ITEM_UUID
                      FROM PO_ITEM A
                     INNER JOIN PR_ITEM B
                        ON A.TEN_ID     = B.TEN_ID
                       AND A.PR_ITEM_UUID = B.PR_ITEM_UUID
                       AND B.REGR_ID     = #{g.username}
                       AND B.STS       != 'D'
                     WHERE A.TEN_ID = HD.TEN_ID
                       AND A.PO_UUID  = HD.PO_UUID
                       <choose>
                         <when test="p.pr_nos != null and p.pr_nos.size() &gt; 0">
                       AND B.PR_NO IN
                           <foreach close=")" collection="p.pr_nos" item="prNo" open="(" separator=",">
                           #{prNo}
                           </foreach>
                         </when>
                         <otherwise>
                           <if test="p.pr_no != null and p.pr_no != ''">
                             <bind name="prNoPattern" value="'%'+ p.pr_no +'%'"/>
                       AND B.PR_NO LIKE UPPER(#{prNoPattern})
                           </if>
                         </otherwise>
                       </choose>
                       <choose>
                         <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
                       AND A.ITEM_CD IN
                           <foreach close=")" collection="p.item_cds" item="itemCd" open="(" separator=",">
                           #{itemCd}
                           </foreach>
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                         </when>
                         <otherwise>
                           <if test="p.item_cd != null and p.item_cd != ''">
                             <bind name="itemCdPattern" value="'%'+ p.item_cd +'%'"/>
                       AND A.ITEM_CD LIKE UPPER(#{itemCdPattern})
                       AND A.ITEM_CD_CRN_TYP_CCD = 'ITEM_CD'  -- 정규 등록품목
                           </if>
                         </otherwise>
                       </choose>
                       AND A.STS   != 'D'
           )
           </when>
           <otherwise>
       AND (HD.PO_STS_CCD IN ('WTG', 'APVD', 'CHG', 'TRMN', 'CRNG', 'PRGSG', 'CNTR_CHG_REQ', 'CNTR_CHG', 'PO_CHG', 'CNTR_TRMN_REQ', 'CHG_RET') OR HD.PO_CHG_REQ_STS_CCD IN ('R', 'B', 'C')) /* PO 구매부서 */
           </otherwise>
       </choose>
       <if test="p.from_po_crn_dt != null and p.from_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null and p.to_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &lt;= #{p.to_po_crn_dt}
       </if>
       <choose>
         <when test="p.po_sts_ccds != null and p.po_sts_ccds.size() != 0">
       AND HD.PO_STS_CCD IN
           <foreach close=")" collection="p.po_sts_ccds" item="po_sts_ccd" open="(" separator=",">
             #{po_sts_ccd}
           </foreach>
         </when>
         <otherwise>
           <if test="p.po_sts_ccd != null and p.po_sts_ccd != &quot;&quot;">
       AND HD.PO_STS_CCD = #{p.po_sts_ccd}
           </if>
         </otherwise>
       </choose>
       <if test="p.domovrs_div_ccd != null and p.domovrs_div_ccd != &quot;&quot;">
       AND HD.DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
       </if>
       <if test="p.apvl_sts_ccd != null and p.apvl_sts_ccd != &quot;&quot;">
       AND HD.APVL_STS_CCD = #{p.apvl_sts_ccd}
       </if>
       <if test="p.erp_vd_cd != null and p.vd_cd != &quot;&quot;">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
       AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
       </if>
       <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
       AND    (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}) )
       </if>
       <if test="p.vd_po_sts_ccd != null and p.vd_po_sts_ccd != &quot;&quot;">
       AND HD.VD_PO_STS_CCD = #{p.vd_po_sts_ccd}
       </if>
       <if test="p.po_chg_req_sts_ccd != null and p.po_chg_req_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_STS_CCD = #{p.po_chg_req_sts_ccd}
       </if>
       <if test="p.po_chg_req_apvl_sts_ccd != null and p.po_chg_req_apvl_sts_ccd != &quot;&quot;">
       AND HD.PO_CHG_REQ_APVL_STS_CCD = #{p.po_chg_req_apvl_sts_ccd}
       </if>
       <if test="p.po_chg_typ_ccd != null and p.po_chg_typ_ccd != &quot;&quot;">
       AND HD.PO_CHG_TYP_CCD = #{p.po_chg_typ_ccd}
       </if>
       <if test="p.po_typ_ccd != null">
           AND HD.PO_TYP_CCD = #{p.po_typ_ccd}
       </if>
       <if test="p.purc_typ_ccd != null and p.purc_typ_ccd != &quot;&quot;">
       AND HD.PURC_TYP_CCD = #{p.purc_typ_ccd}
       </if>
       <if test="p.po_tit != null and p.po_tit != ''">
           <bind name="p_po_tit" value="'%' + p.po_tit + '%'"/>
       AND UPPER(HD.PO_TIT) LIKE UPPER(#{p_po_tit})
       </if>
       <choose>
           <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
       AND HD.OORG_CD IN
               <foreach close=")" collection="p.oorg_cd" item="item" open="(" separator=",">
                   #{item}
               </foreach>
           </when>
           <otherwise>
       AND HD.OORG_CD = '0'
           </otherwise>
       </choose>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND HD.PO_NO IN
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND HD.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
        <choose>
           <when test="p.cntr_nos != null and p.cntr_nos.size() != 0">
       AND HD.CNTR_NO IN
               <foreach close=")" collection="p.cntr_nos" item="cntr_no" open="(" separator=",">
                   #{cntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.cntr_no != null and p.cntr_no != ''">
                   <bind name="p_cntr_no" value="'%' + p.cntr_no + '%'"/>
       AND HD.CNTR_NO LIKE UPPER(#{p_cntr_no})
               </if>
           </otherwise>
       </choose>
       <if test="p.cs_vd_cd != null and p.cs_vd_cd != ''">
       AND EXISTS ( SELECT CS.VD_CD
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_cd" value="'%' + p.cs_vd_cd + '%'"/>
                       AND (
                               (
                                   CS.REP_VD_CD IS NOT NULL  AND CS.REP_VD_CD LIKE #{p_cs_vd_cd}
                               )
                            OR (
                                   (CS.REP_VD_CD IS NULL OR CS.REP_VD_CD = '')
                               AND CSVD.VD_CD LIKE #{p_cs_vd_cd}
                               )
                           )
                  )
       </if>
       <if test="p.cs_vd_nm != null and p.cs_vd_nm != ''">
       AND EXISTS ( SELECT
                                CASE WHEN 'en_US' = #{g.locale} THEN CSVD.VD_NM_EN ELSE CSVD.VD_NM END AS VD_NM
                      FROM PO_CSTM_VD CS
                     INNER JOIN VD CSVD
                        ON CSVD.TEN_ID = CS.TEN_ID
                       AND CSVD.VD_CD  = CS.VD_CD
                     WHERE CS.TEN_ID = HD.TEN_ID
                       AND CS.PO_UUID  = HD.PO_UUID
                       <bind name="p_cs_vd_nm" value="'%' + p.cs_vd_nm + '%'"/>
			          AND    (UPPER(CSVD.VD_NM) LIKE UPPER(#{p_cs_vd_nm}) OR UPPER(CSVD.VD_NM_EN) LIKE UPPER(#{p_cs_vd_nm}))      /* 협력사 명 검색조건*/
                  )
       </if>
       AND HD.STS != 'D'
     ORDER BY HD.PO_NO DESC, HD.PO_REVNO DESC
    </select>
    <update id="saveInfoPoIfSts">
        UPDATE PO
        SET IF_STS_CCD = 'PASS'
        WHERE TEN_ID = #{g.tenant}
        AND PO_UUID = #{p.po_uuid}
    </update>
    <select id="findInfoIfPoDemo" resultType="map">
        SELECT
            'INTERFACE_PO_CREATE' AS IF_ID
            , 'Prod' AS IF_LVL_CCD
            , TO_CHAR(REG_DTTM, 'YYYY/MM/DD HH24:MI:SS') AS IF_ST_DTTM
            , TO_CHAR(REG_DTTM + 34/(24*60*60), 'YYYY/MM/DD HH24:MI:SS') AS IF_ED_DTTM
            , IF_STS_CCD
            , IF_MSG
        FROM PO
        WHERE TEN_ID = #{g.tenant}
        AND PO_UUID = #{p.po_uuid}
    </select>
    <select id="findInfoIfPoHeaderDemo" resultType="map">
        SELECT
            *
        FROM PO
        WHERE TEN_ID = #{g.tenant}
          AND PO_UUID = #{p.po_uuid}
    </select>
    <select id="findInfoIfPoItemDemo" resultType="map">
        SELECT
            *
        FROM PO_ITEM
        WHERE TEN_ID = #{g.tenant}
          AND PO_UUID = #{p.po_uuid}
    </select>
    <update id="updatePoIfError">
        UPDATE PO
        SET IF_STS_CCD = 'FAIL'
        , IF_MSG = #{p.if_msg}
        WHERE TEN_ID = #{g.tenant}
        <if test="p.random_no != null and p.random_no != ''">
            <bind name="p_random_no" value="'%' + p.random_no"/>
            AND PO_NO LIKE  #{p_random_no}
        </if>
    </update>
    <update id="updateCntrIfError">
        UPDATE CNTR
        SET IF_STS_CCD = 'FAIL'
        , IF_MSG = #{p.if_msg}
        WHERE TEN_ID = #{g.tenant}
        <if test="p.random_no != null and p.random_no != ''">
            <bind name="p_random_no" value="'%' + p.random_no"/>
            AND CNTR_NO LIKE  #{p_random_no}
        </if>
    </update>
	<select id="findInfoDocumentOutputPoHeader" resultType="map">
		/* po.findInfoDocumentOutputPoHeader : 발주서(헤더정보) 출력 */
		SELECT  G.*
		, CONCAT(CONCAT(G.REG_NM, CASE WHEN G.REG_MOBILE IS NULL OR G.REG_MOBILE = '' THEN ''
		ELSE CONCAT(' / ', G.REG_MOBILE)
		END), CASE WHEN G.REG_EMAIL IS NULL OR G.REG_EMAIL = '' THEN ''
		ELSE CONCAT(' / ', G.REG_EMAIL)
		END) AS PO_CHR_INFO		--구매담당자
		, CONCAT(G.GR_CHR_NM, CASE WHEN G.GR_TEL IS NULL OR G.GR_TEL = '' THEN ''
		ELSE CONCAT(' / ', G.GR_TEL)
		END) AS GR_CHAR_INFO		--인수자
		, CONCAT(CASE WHEN G.DELY_ADDR IS NULL OR G.DELY_ADDR = '' THEN ''
		ELSE G.DELY_ADDR
		END, CASE WHEN G.DELY_LOCAT IS NULL OR G.DELY_LOCAT = '' THEN ''
		ELSE CONCAT(CONCAT(' (', G.DELY_LOCAT), ')')
		END) AS GR_ADDR_INFO --인수주소
		, TO_CHAR(CAST(G.PO_CRN_DT AS TIMESTAMP), 'YYYY/MM/DD')  AS PO_DATE
		FROM (
		SELECT POHD.PO_UUID
		, POHD.PO_NO		--P/O NO.
		, POHD.PO_CRN_DT   --P/O Date
		, POHD.VD_CD
		, CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		THEN VDGL.VD_NM
		ELSE VDGL.CEO_NM_EN END AS VD_NM		--공급사/Supplier
		, (SELECT  CASE WHEN 'en_US' = #{g.locale}
		THEN VDUSR.USR_NM_EN
		ELSE VDUSR.USR_NM
		END
		FROM USR VDUSR
		INNER JOIN ROLE_USR
		ON ROLE_USR.TEN_ID = VDUSR.TEN_ID
		AND ROLE_USR.USR_ID = VDUSR.USR_ID
		AND ROLE_USR.STS != 'D'
		WHERE VDUSR.TEN_ID = #{g.tenant}
		AND VDUSR.VD_CD = VDGL.VD_CD
		AND VDUSR.USE_YN = 'Y'
		AND ROLE_USR.ROLE_CD = 'V600' -- 발주 담당자 권한
		AND ROWNUM = 1  ) AS VD_USR_NM
		, CASE WHEN 'en_US' = #{g.locale}
		THEN CONCAT(CASE WHEN VDGL.DTL_ADDR_EN_1 IS NULL OR VDGL.DTL_ADDR_EN_1 = '' THEN ''
		ELSE VDGL.DTL_ADDR_EN_1
		END, CASE WHEN VDGL.DTL_ADDR_EN_2 IS NULL OR VDGL.DTL_ADDR_EN_2 = '' THEN ''
		ELSE VDGL.DTL_ADDR_EN_2
		END)
		ELSE CONCAT(CASE WHEN VDGL.DTL_ADDR_1 IS NULL OR VDGL.DTL_ADDR_1 = '' THEN ''
		ELSE VDGL.DTL_ADDR_1
		END, CASE WHEN VDGL.DTL_ADDR_2 IS NULL OR VDGL.DTL_ADDR_2 = '' THEN ''
		ELSE VDGL.DTL_ADDR_2
		END)
		END AS VD_ADDR		--공급사 주소
		, CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(VDGL.BIZREGNO, 1, 3), '-'), SUBSTR(VDGL.BIZREGNO, 4, 2)), '-'), SUBSTR(VDGL.BIZREGNO, 6, 5))  AS BIZ_REG_NO		--공급사 사업자번호
		, VDGL.VD_EML AS VD_EMAIL		--공급사 이메일
		, CASE WHEN 'en_US' = #{g.locale}
		THEN CORP.LOGIC_ORG_NM_EN
		ELSE CORP.LOGIC_ORG_NM
		END AS BUYER_NM		--발주사명/Buyer
		, CASE WHEN 'en_US' = #{g.locale}
		THEN CORP.ADDR_EN
		ELSE CORP.ADDR
		END AS CORP_ADDR			--발주사주소/Buyer addr
		, CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(CORP.BIZREGNO, 1, 3), '-'), SUBSTR(CORP.BIZREGNO, 4, 2)), '-'), SUBSTR(CORP.BIZREGNO, 6, 5))  AS CORP_BIZ_REG_NO		--발주사 사업자번호
		, POHD.REGR_ID
		, CASE WHEN 'en_US' = #{g.locale}
		THEN PO_CHR.USR_NM
		ELSE PO_CHR.USR_NM_EN END AS REG_NM		--구매담당자/Purchase
		, CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		THEN PO_CHR.MOB
		ELSE CONCAT('+82-', SUBSTR(PO_CHR.TEL, 2))  END AS REG_MOBILE		--구매담당자/Purchase
		, PO_CHR.EML AS REG_EMAIL		--구매담당자/Purchase
		, CONCAT(CONCAT(CONCAT(CONCAT(SUBSTR(PLT.BIZREGNO, 1, 3), '-'), SUBSTR(PLT.BIZREGNO, 4, 2)), '-'), SUBSTR(PLT.BIZREGNO, 6, 5))  AS PLT_BIZ_REG_NO		--세금계산서 사업자번호
		, CASE WHEN 'en_US' = #{g.locale} THEN PLT.LOGIC_ORG_NM_EN ELSE PLT.LOGIC_ORG_NM END AS PLT_OFFICIAL_NM		--사업자명
		, POHD.CUR_CCD 					--통화/currency
		, POHD.SUP_AMT						--공급가액
		, POHD.VAT_AMT						--세액
		, POHD.CNTR_AMT					--합계금액 -내자- (SUP_AMT+vat_amt)
		, PODT.GR_PIC_ID
		, CASE WHEN 'en_US' = #{g.locale} THEN GR_USR.USR_NM_EN ELSE GR_USR.USR_NM END AS GR_CHR_NM		--MRO수령자명
		, GR_USR.TEL AS GR_TEL				--MRO수령자전화번호
		, CASE WHEN 'en_US' = #{g.locale} THEN PLT.ADDR_EN ELSE PLT.ADDR END AS DELY_ADDR        	--MRO수령자납품주소
		, CASE WHEN 'en_US' = #{g.locale} THEN PLT.LOGIC_ORG_NM_EN ELSE PLT.LOGIC_ORG_NM END AS DELY_LOCAT   --MRO수령자납품장소
		, POHD.PYMTMETH_CCD    			--외자-Payment Temrs-P009
		, CASE WHEN POHD.DOMOVRS_DIV_CCD = 'DOM'
		THEN CDDL1.DTLCD_NM
		ELSE POHD.PYMTMETH_EXPLN END AS PAY_TERMS_NM
		, POHD.DLVYMETH_CCD 				--외자-Incoterms-P010
		, SUBSTR(CDDL2.DTLCD_NM, 7, 999)  AS DELY_TERMS_NM
		, OOMG_CORP.PARNODE_OORG_CD
		FROM PO POHD
		INNER JOIN PO_ITEM PODT
		ON PODT.TEN_ID = POHD.TEN_ID
		AND PODT.PO_UUID  = POHD.PO_UUID
		AND PODT.STS != 'D'
		INNER JOIN VD VDGL
		ON VDGL.TEN_ID = POHD.TEN_ID
		AND VDGL.VD_CD  = POHD.VD_CD
		INNER JOIN USR PO_CHR
		ON PO_CHR.TEN_ID = POHD.TEN_ID
		AND PO_CHR.USR_ID = POHD.REGR_ID
		INNER JOIN OORG OOMG_CORP
		ON OOMG_CORP.TEN_ID = POHD.TEN_ID
		AND OOMG_CORP.OORG_CD = POHD.OORG_CD
		INNER JOIN OORG OOMG_CORP_2
		ON OOMG_CORP_2.TEN_ID = OOMG_CORP.TEN_ID
		AND OOMG_CORP_2.OORG_CD = OOMG_CORP.PARNODE_OORG_CD
		INNER JOIN LOGIC_ORG CORP
		ON CORP.TEN_ID = OOMG_CORP_2.TEN_ID
		AND CORP.LOGIC_ORG_TYP_CCD = OOMG_CORP_2.LOGIC_ORG_TYP_CCD
		AND CORP.LOGIC_ORG_CD = OOMG_CORP_2.LOGIC_ORG_CD
		INNER JOIN OORG OOMG_PLT
		ON OOMG_PLT.TEN_ID = POHD.TEN_ID
		AND OOMG_PLT.OORG_CD = POHD.OORG_CD
		INNER JOIN LOGIC_ORG PLT
		ON PLT.TEN_ID = OOMG_PLT.TEN_ID
		<!-- AND PLT.LOGIC_ORG_TYP_CCD = OOMG_PLT.LOGIC_ORG_TYP_CCD
		AND PLT.ORG_CD = OOMG_PLT.ORG_CD -->
		LEFT OUTER JOIN USR GR_USR
		ON GR_USR.TEN_ID = PODT.TEN_ID
		AND GR_USR.USR_ID = PODT.GR_PIC_ID
		LEFT OUTER JOIN DTLCD_MULTLANG CDDL1
		ON CDDL1.TEN_ID = POHD.TEN_ID
		AND CDDL1.CCD    = 'P009'				/* CONSTANT */
		AND CDDL1.DTLCD  = POHD.PYMTMETH_CCD
		AND CDDL1.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		LEFT OUTER JOIN DTLCD_MULTLANG CDDL2
		ON CDDL2.TEN_ID = POHD.TEN_ID
		AND CDDL2.CCD    = 'P010' 				/* CONSTANT */
		AND CDDL2.DTLCD  = POHD.DLVYMETH_CCD
		AND CDDL2.LANG_CCD = #{g.locale} 		/* SESSION.LANG_CCD */
		WHERE POHD.TEN_ID = #{g.tenant} 			/* SESSION.TEN_ID */
		AND POHD.PO_UUID = #{p.po_uuid}  		/* VARIABLE */
		AND POHD.STS != 'D'						/* CONSTANT */
		) G
		WHERE 1=1
		AND ROWNUM = 1 </select>
	<select id="findListDocumentOutputPoDetail" resultType="map">
		/* po.findListDocumentOutputPoDetail : 발주서(품목정보) 출력 */
		SELECT PODT.TEN_ID
		, ROW_NUMBER() OVER(ORDER BY PODT.PO_LNO) AS SEQ
		, PODT.PO_LNO  	AS PO_SEQ
		, PODT.ITEM_CD 	AS ITEM_CD
		, CASE WHEN 'en_US' = #{g.locale} THEN PODT.ITEM_NM_EN ELSE PODT.ITEM_NM END AS ITEM_NM 		/*Description*/
		, PODT.ITEM_SPEC   AS SPEC    		/*Specification*/
		, PODT.PO_QTY   	AS PO_QTY  	/*Quantity*/
		, PODT.UOM_CCD    	AS UNIT_CD  	/*U/M*/
		, PODT.PO_UPRC 	AS PO_UPRC  	/*Unit Price*/
		, PODT.PO_AMT  	AS PO_AMT  	/*Amount*/
		, TO_CHAR(CAST(PODT.REQ_DLVY_DT AS TIMESTAMP), 'YYYY-MM-DD')  AS RD_DATE
		, PODT.PO_UUID
		, PODT.DLVY_PLC
		FROM PO_ITEM PODT
		LEFT OUTER JOIN DTLCD_MULTLANG CDDL
		ON CDDL.TEN_ID   = PODT.TEN_ID
		AND CDDL.LANG_CCD = #{g.locale} 	/* SESSION.LANG_CD */
		AND CDDL.DTLCD = PODT.WH_CCD
		AND CDDL.STS     != 'D'			/* CONSTANT */
		WHERE PODT.TEN_ID   = #{g.tenant} 	/* SESSION.TEN_ID */
		AND PODT.PO_UUID  = #{p.po_uuid} /* VARIABLE */
		AND PODT.STS     != 'D'			/* CONSTANT */
		ORDER BY PODT.PO_LNO
	</select>
</mapper>
