<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pro-shared">
  	<select id="findListCateItem" resultType="map">
  	<bind name="nowDate" value="g.getFormatNow(g.now, 'yyyyMMdd')"/>
  		/* pro-shared.findListCateItem */
		SELECT ITEM_OORG.TEN_ID                                        AS TEN_ID
		     , ITEM_OORG.OORG_CD                                   AS OORG_CD
		     , CASE WHEN ITEM_OORG.TL_YN IS NULL OR ITEM_OORG.TL_YN = '' THEN 'N' ELSE ITEM_OORG.TL_YN END AS TL_YN
		     , LOGIC_ORG.ORG_CD
			, CASE WHEN 'en_US' = #{g.locale} THEN LOGIC_ORG.LOGIC_ORG_NM_EN ELSE LOGIC_ORG.LOGIC_ORG_NM END AS LOGIC_ORG_NM
		     , MTGL.ITEM_CD                                       AS ITEM_CD
		     , MTGL.REQ_ITEM_CD                                   AS REQ_ITEM_CD
		     , MTGL.ITEM_REG_REQ_NO                                    AS ITEM_REG_REQ_NO
		     , CASE WHEN 'en_US' = #{g.locale}
                       THEN MTGL.ITEM_NM_EN
                	   ELSE MTGL.ITEM_NM
                	    END AS DISP_ITEM_NM
		     , MTGL.ITEM_NM                                       AS ITEM_NM
		     , MTGL.ITEM_NM_EN                                    AS ITEM_NM_EN
		     , MTGL.ITEM_SIMWORD                                       AS ITEM_SIMWORD
		     , MTGL.ITEM_SPEC                                          AS ITEM_SPEC
		     , MTGL.UOM_CCD	AS UOM_CCD
		     , MTGL.SG_CD                                         AS SG_CD
		     <if test="g.existModule('SRM')">
			 , CASE WHEN 'en_US' = #{g.locale} THEN SG.SG_NM_EN
			        ELSE SG.SG_NM
			    END AS SG_NM
			 </if>
		     , MTGL.ATHG_UUID                                        AS ATHG_UUID
		     , MTGL.IMG_ATHG_UUID                                    AS IMG_ATHG_UUID
		     , MTGL.DWG_NO                                    AS DWG_NO
		     , MTGL.MFGR_CD                                      AS MFGR_CD
		     , MTGL.MFGR_NM                                      AS MFGR_NM
		     , MTGL.MDL_NO                                        AS MDL_NO
		     , MTGL.HS_NO                                         AS HS_NO
		     , MTGL.REP_ITEM_CD_YN                                     AS REP_ITEM_CD_YN
		     , MTGL.USE_YN                                        AS USE_YN
		     , MTGL.RMK                                           AS RMK
		     , MTGL.STS                                           AS STS
		     , MCLS1.ITEMCAT_CD                                      AS ITEMCAT_LVL_1_CD
		     , MCLS1.ITEMCAT_NM                                      AS CATE1_NM
		     , MCLS2.ITEMCAT_CD                                      AS ITEMCAT_LVL_2_CD
		     , MCLS2.ITEMCAT_NM                                      AS CATE2_NM
		     , MCLS3.ITEMCAT_CD                                      AS ITEMCAT_LVL_3_CD
		     , MCLS3.ITEMCAT_NM                                      AS CATE3_NM
		     , MCLS4.ITEMCAT_CD                                      AS ITEMCAT_LVL_4_CD
		     , MCLS4.ITEMCAT_NM                                      AS CATE4_NM
		     , CASE WHEN MYMT.USE_YN IS NULL OR MYMT.USE_YN = ''
		                 THEN 'N'
		            ELSE MYMT.USE_YN
		       END							                      AS MY_ITEM_YN
		  FROM ITEM MTGL
		 INNER JOIN ITEM_OORG ITEM_OORG
		    ON ITEM_OORG.TEN_ID      = MTGL.TEN_ID
		   AND ITEM_OORG.OORG_CD = #{p.oorg_cd}
		   AND ITEM_OORG.ITEM_CD     = MTGL.ITEM_CD
		 INNER JOIN OORG OORG
			ON ITEM_OORG.TEN_ID      = OORG.TEN_ID
			AND ITEM_OORG.OORG_CD = OORG.OORG_CD
		    AND OORG.OUNIT_CD = 'IO'
		  INNER JOIN LOGIC_ORG LOGIC_ORG
			ON OORG.TEN_ID      = LOGIC_ORG.TEN_ID
			AND OORG.LOGIC_ORG_CD = LOGIC_ORG.LOGIC_ORG_CD
		  LEFT OUTER JOIN ITEMCAT MCLS1
		    ON MCLS1.TEN_ID = MTGL.TEN_ID
		   AND MCLS1.ITEMCAT_CD = MTGL.ITEMCAT_LVL_1_CD
		  LEFT OUTER JOIN ITEMCAT MCLS2
		    ON MCLS2.TEN_ID  = MTGL.TEN_ID
		   AND MCLS2.ITEMCAT_CD = MTGL.ITEMCAT_LVL_2_CD
		  LEFT OUTER JOIN ITEMCAT MCLS3
		    ON MCLS3.TEN_ID = MTGL.TEN_ID
		   AND MCLS3.ITEMCAT_CD = MTGL.ITEMCAT_LVL_3_CD
		  LEFT OUTER JOIN ITEMCAT MCLS4
		    ON MCLS4.TEN_ID = MTGL.TEN_ID
		   AND MCLS4.ITEMCAT_CD = MTGL.ITEMCAT_LVL_4_CD
		  LEFT OUTER JOIN USR_FAV_ITEM MYMT
		  	ON	MYMT.TEN_ID      = ITEM_OORG.TEN_ID
		  	AND MYMT.OORG_CD = ITEM_OORG.OORG_CD
		  	AND MYMT.ITEM_CD     = ITEM_OORG.ITEM_CD
		  	AND MYMT.USR_ID      = #{g.username}
		  LEFT OUTER JOIN PURC_GRP_ITEMCAT JOB_MCLS_MAP    /* 품목분류_직무(그룹)유형_매핑  */
		    ON JOB_MCLS_MAP.TEN_ID       = MTGL.TEN_ID
		   AND JOB_MCLS_MAP.PURC_GRP_TYP_CCD = #{p.purc_grp_typ_ccd}
		   AND JOB_MCLS_MAP.CO_CD      = #{p.co_cd}
		   AND JOB_MCLS_MAP.ITEMCAT_CD      = MTGL.ITEMCAT_LVL_4_CD
		  LEFT OUTER JOIN PURC_GRP JOB             /* 직무(그룹) */
		    ON JOB.TEN_ID       = JOB_MCLS_MAP.TEN_ID
		   AND JOB.PURC_GRP_TYP_CCD = JOB_MCLS_MAP.PURC_GRP_TYP_CCD
		   AND JOB.PURC_GRP_CD  = JOB_MCLS_MAP.PURC_GRP_CD
		   AND JOB.CO_CD      = JOB_MCLS_MAP.CO_CD
		   AND JOB.USE_YN       = 'Y'
		  <if test="g.existModule('SRM')">
		  LEFT OUTER JOIN SG SG
		    ON SG.TEN_ID = MTGL.TEN_ID
		   AND SG.SG_CD = MTGL.SG_CD
		  AND SG.STS != 'D'
		  </if>
		 WHERE MTGL.TEN_ID          = #{g.tenant}
		 <if test="p.itemcat_lvl_1_cd != null and p.itemcat_lvl_1_cd != ''">
		   AND MCLS1.ITEMCAT_CD        = #{p.itemcat_lvl_1_cd}
		 </if>
		 <if test="p.itemcat_lvl_2_cd != null and p.itemcat_lvl_2_cd != ''">
		   AND MCLS2.ITEMCAT_CD        = #{p.itemcat_lvl_2_cd}
		 </if>
		 <if test="p.itemcat_lvl_3_cd != null and p.itemcat_lvl_3_cd != ''">
		   AND MCLS3.ITEMCAT_CD        = #{p.itemcat_lvl_3_cd}
		 </if>
		 <if test="p.itemcat_lvl_4_cd != null and p.itemcat_lvl_4_cd != ''">
		   AND MCLS4.ITEMCAT_CD        = #{p.itemcat_lvl_4_cd}
		 </if>
		 <choose>
		   <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
		   AND MTGL.ITEM_CD IN
		       <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		       #{item_cd}
		       </foreach>
		   </when>
		   <otherwise>
		     <if test="p.item_cd != null and p.item_cd != ''">
		       <bind name="cdPattern" value="'%' + g.trim(p.item_cd) + '%'"/>
		   AND MTGL.ITEM_CD  LIKE UPPER(#{cdPattern})
		     </if>
		   </otherwise>
		 </choose>
		 <if test="p.disp_item_nm != null and p.disp_item_nm != ''">
		   <bind name="namePattern" value="'%' + g.trim(p.disp_item_nm) + '%'"/>
		   AND (UPPER(MTGL.ITEM_NM) LIKE UPPER(#{namePattern}) OR UPPER(MTGL.ITEM_NM_EN) LIKE UPPER(#{namePattern}))
		 </if>
		 <if test="p.mfgr_nm != null and p.mfgr_nm != ''">
		   <bind name="makerNmPattern" value="'%' + p.mfgr_nm + '%'"/>
		   AND UPPER(MTGL.MFGR_NM) LIKE UPPER(#{makerNmPattern})
		 </if>
		 <if test="p.item_spec != null and p.item_spec != ''">
		   <bind name="specPattern" value="'%' + p.item_spec + '%'"/>
		   AND UPPER(MTGL.ITEM_SPEC) LIKE UPPER(#{specPattern})
		 </if>
		 <if test="p.my_item_yn == &quot;Y&quot;">
		 	AND MYMT.USE_YN = 'Y'
		 </if>
  	</select>
	<select id="findListCate" resultType="map">
		/* pro-shared.findListCate */
		SELECT CLS.PAR_ITEMCAT_CD
		     , CLS.TEN_ID
		     , CLS.ITEMCAT_CD
		     , CLS.ITEMCAT_LVL
		     , CASE WHEN 'en_US' = #{g.locale}
                       THEN (CASE WHEN CLS.ITEMCAT_NM_EN IS NULL OR CLS.ITEMCAT_NM_EN = ''
                	              THEN CLS.ITEMCAT_NM
                	              ELSE CLS.ITEMCAT_NM_EN
                	         END)
                	   ELSE CLS.ITEMCAT_NM
           	   END ITEMCAT_NM
		     , CLS.ITEMCAT_PATH
		     , CLS.ITEMCAT_PATH_EN
		     , CLS.MGMT_DEPT_CD
		     , CLS.ITEMCAT_SIMWORD
		     , CLS.SORT
		     , CLS.RISK_MGMT_YN
		     , CLS.ITEM_CD_MAND_YN
		     , CLS.USE_YN
		     , CLS.USG_EXPLN
		  FROM ITEMCAT CLS
		 WHERE CLS.TEN_ID = #{g.tenant}
		 <if test="p.itemcat_cd != null and p.itemcat_cd != ''">
		   AND CLS.ITEMCAT_CD = #{p.itemcat_cd}
		 </if>
		 <if test="p.itemcat_nm != null and p.itemcat_nm != ''">
		   <bind name="catenamePattern" value="'%' + p.itemcat_nm + '%'"/>
		   AND UPPER(CLS.ITEMCAT_NM) like UPPER(#{catenamePattern})
		 </if>
		 <if test="p.purc_typ_ccd != null and p.purc_typ_ccd != ''">
		   AND (CLS.PURC_TYP_CCD = #{p.purc_typ_ccd} OR CLS.PURC_TYP_CCD IS NULL OR CLS.PURC_TYP_CCD = '')
		 </if>
		   AND CLS.STS != 'D'
		 ORDER BY CLS.SORT ASC
	</select>
  	<select id="findListCateItemAndBpa" resultType="map">
  	<bind name="nowDate" value="g.getFormatNow(g.now, 'yyyyMMdd')"/>
  		/* pro-shared.findListCateItemAndBpa */
		SELECT ITEM_OORG.TEN_ID                                        AS TEN_ID
		     , ITEM_OORG.OORG_CD                                   AS OORG_CD
		     , CASE WHEN ITEM_OORG.TL_YN IS NULL OR ITEM_OORG.TL_YN = '' THEN 'N' ELSE ITEM_OORG.TL_YN END AS TL_YN
		     , LOGIC_ORG.ORG_CD
			, CASE WHEN 'en_US' = #{g.locale} THEN LOGIC_ORG.LOGIC_ORG_NM_EN ELSE LOGIC_ORG.LOGIC_ORG_NM END AS LOGIC_ORG_NM
		     , MTGL.ITEM_CD                                       AS ITEM_CD
		     , MTGL.REQ_ITEM_CD                                   AS REQ_ITEM_CD
		     , MTGL.ITEM_REG_REQ_NO                                    AS ITEM_REG_REQ_NO
		     , CASE WHEN 'en_US' = #{g.locale}
                       THEN MTGL.ITEM_NM_EN
                	   ELSE MTGL.ITEM_NM
                	    END AS DISP_ITEM_NM
		     , MTGL.ITEM_NM                                       AS ITEM_NM
		     , MTGL.ITEM_NM_EN                                    AS ITEM_NM_EN
		     , MTGL.ITEM_SIMWORD                                       AS ITEM_SIMWORD
		     , MTGL.ITEM_SPEC                                          AS ITEM_SPEC
		     , CASE WHEN PINFO.UOM_CCD IS NULL OR PINFO.UOM_CCD = ''
		                 THEN MTGL.UOM_CCD
		            ELSE PINFO.UOM_CCD
		       END                                                AS UOM_CCD
		     , MTGL.SG_CD                                         AS SG_CD
		     <if test="g.existModule('SRM')">
			 , CASE WHEN 'en_US' = #{g.locale} THEN SG.SG_NM_EN
			        ELSE SG.SG_NM
			    END AS SG_NM
			 </if>
		     , MTGL.ATHG_UUID                                        AS ATHG_UUID
		     , MTGL.IMG_ATHG_UUID                                    AS IMG_ATHG_UUID
		     , MTGL.DWG_NO                                    AS DWG_NO
		     , MTGL.MFGR_CD                                      AS MFGR_CD
		     , MTGL.MFGR_NM                                      AS MFGR_NM
		     , MTGL.MDL_NO                                        AS MDL_NO
		     , MTGL.HS_NO                                         AS HS_NO
		     , MTGL.REP_ITEM_CD_YN                                     AS REP_ITEM_CD_YN
		     , MTGL.USE_YN                                        AS USE_YN
		     , MTGL.RMK                                           AS RMK
		     , MTGL.STS                                           AS STS
		     , MCLS1.ITEMCAT_CD                                      AS ITEMCAT_LVL_1_CD
		     , MCLS1.ITEMCAT_NM                                      AS CATE1_NM
		     , MCLS2.ITEMCAT_CD                                      AS ITEMCAT_LVL_2_CD
		     , MCLS2.ITEMCAT_NM                                      AS CATE2_NM
		     , MCLS3.ITEMCAT_CD                                      AS ITEMCAT_LVL_3_CD
		     , MCLS3.ITEMCAT_NM                                      AS CATE3_NM
		     , MCLS4.ITEMCAT_CD                                      AS ITEMCAT_LVL_4_CD
		     , MCLS4.ITEMCAT_NM                                      AS CATE4_NM
		     , PINFO.UPRC_EFCT_ST_DT                                     AS UPRC_EFCT_ST_DT
		     , PINFO.UPRC_EFCT_EXP_DT                                     AS UPRC_EFCT_EXP_DT
		     , PINFO.UPRCCNTR_DT                                    AS UPRCCNTR_DT
		     , PINFO.CUR_CCD                                          AS CUR_CCD
		     , CASE WHEN PINFO.UPRCCNTR_QTY IS NULL
		                 THEN 0
		            ELSE PINFO.UPRCCNTR_QTY
		       END                                                AS UPRCCNTR_QTY
		     , CASE WHEN PINFO.UPRCCNTR_UPRC IS NULL
		                 THEN 0
		            ELSE PINFO.UPRCCNTR_UPRC
		       END                                                AS UPRCCNTR_UPRC
		     , CASE WHEN PINFO.UPRCCNTR_QTY IS NOT NULL
		             AND PINFO.UPRCCNTR_UPRC IS NOT NULL
		                 THEN  GETPRECFORMAT(#{g.tenant}, 'amt', PINFO.UPRCCNTR_QTY * PINFO.UPRCCNTR_UPRC, PINFO.CUR_CCD)
		            ELSE 0
		       END                                                AS UPRCCNTR_AMT
		     , PINFO.CNTR_NO
		     , PINFO.CNTR_REVNO
		     , PINFO.PURC_CNTR_ITEM_UUID
		     , PINFO.PURC_CNTR_ITEM_LNO
		     , ITEM_OORG.TL_YN
		     , VDGL.VD_CD                                         AS VD_CD
		     , VDGL.ERP_VD_CD                                     AS ERP_VD_CD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VDGL.VD_NM_EN ELSE VDGL.VD_NM END    AS DISP_VD_NM
		     , VDGL.VD_NM                                         AS VD_NM
		     , VDGL.VD_NM_EN                                      AS VD_NM_EN
		     , CASE WHEN MYMT.USE_YN IS NULL OR MYMT.USE_YN = ''
		                 THEN 'N'
		            ELSE MYMT.USE_YN
		       END							                      AS MY_ITEM_YN
		     , CASE WHEN PINFO_JOB.PURC_GRP_CD IS NULL OR PINFO_JOB.PURC_GRP_CD = ''
		                 THEN JOB.PURC_GRP_CD
		            ELSE PINFO_JOB.PURC_GRP_CD
		       END                                                AS PURC_GRP_CD
		     , CASE WHEN PINFO_JOB.PURC_GRP_TYP_CCD IS NULL OR PINFO_JOB.PURC_GRP_TYP_CCD = ''
		                 THEN JOB.PURC_GRP_TYP_CCD
		            ELSE PINFO_JOB.PURC_GRP_TYP_CCD
		       END                                                AS PURC_GRP_TYP_CCD
		     , CASE WHEN PINFO_JOB.CO_CD IS NULL OR PINFO_JOB.CO_CD = ''
		                 THEN JOB.CO_CD
		            ELSE PINFO_JOB.CO_CD
		       END                                                AS CO_CD
		      , CASE WHEN 'en_US' = #{g.locale} THEN
		          CASE WHEN PINFO_JOB.PURC_GRP_NM_EN IS NULL OR PINFO_JOB.PURC_GRP_NM_EN = ''
		                 THEN JOB.PURC_GRP_NM_EN
		            ELSE PINFO_JOB.PURC_GRP_NM_EN
		               END
		          ELSE
		           CASE WHEN PINFO_JOB.PURC_GRP_NM IS NULL OR PINFO_JOB.PURC_GRP_NM = ''
		                 THEN JOB.PURC_GRP_NM
		            ELSE PINFO_JOB.PURC_GRP_NM
		          END
		        END AS PURC_GRP_NM         /* 요청자 명 */
		  FROM ITEM MTGL
		 INNER JOIN ITEM_OORG ITEM_OORG
		    ON ITEM_OORG.TEN_ID      = MTGL.TEN_ID
		   AND ITEM_OORG.OORG_CD = #{p.oorg_cd}
		   AND ITEM_OORG.ITEM_CD     = MTGL.ITEM_CD
		 INNER JOIN OORG OORG
			ON ITEM_OORG.TEN_ID      = OORG.TEN_ID
			AND ITEM_OORG.OORG_CD = OORG.OORG_CD
		    AND OORG.OUNIT_CD = 'IO'
		  INNER JOIN LOGIC_ORG LOGIC_ORG
			ON OORG.TEN_ID      = LOGIC_ORG.TEN_ID
			AND OORG.LOGIC_ORG_CD = LOGIC_ORG.LOGIC_ORG_CD
		  LEFT OUTER JOIN ITEMCAT MCLS1
		    ON MCLS1.TEN_ID = MTGL.TEN_ID
		   AND MCLS1.ITEMCAT_CD = MTGL.ITEMCAT_LVL_1_CD
		  LEFT OUTER JOIN ITEMCAT MCLS2
		    ON MCLS2.TEN_ID  = MTGL.TEN_ID
		   AND MCLS2.ITEMCAT_CD = MTGL.ITEMCAT_LVL_2_CD
		  LEFT OUTER JOIN ITEMCAT MCLS3
		    ON MCLS3.TEN_ID = MTGL.TEN_ID
		   AND MCLS3.ITEMCAT_CD = MTGL.ITEMCAT_LVL_3_CD
		  LEFT OUTER JOIN ITEMCAT MCLS4
		    ON MCLS4.TEN_ID = MTGL.TEN_ID
		   AND MCLS4.ITEMCAT_CD = MTGL.ITEMCAT_LVL_4_CD
		  LEFT OUTER JOIN USR_FAV_ITEM MYMT
		  	ON	MYMT.TEN_ID      = ITEM_OORG.TEN_ID
		  	AND MYMT.OORG_CD = ITEM_OORG.OORG_CD
		  	AND MYMT.ITEM_CD     = ITEM_OORG.ITEM_CD
		  	AND MYMT.USR_ID      = #{g.username}
		  <choose>
		    <when test="p.price_cntr_yn == &quot;Y&quot; or p.tl_yn == &quot;Y&quot;">
		 INNER JOIN ITEM_UPRC_HISTREC PINFO                 /* 단가정보 */
		    </when>
		    <otherwise>
		  LEFT OUTER JOIN ITEM_UPRC_HISTREC PINFO           /* 단가정보 */
		    </otherwise>
		  </choose>
		    ON PINFO.TEN_ID      = MTGL.TEN_ID
		   AND PINFO.OORG_CD IN ( SELECT OOLM.CONNSRC_OORG_CD
		                                FROM OORG_MAPG OOLM
		                               WHERE OOLM.TEN_ID           = ITEM_OORG.TEN_ID
		                                 AND OOLM.CONN_TYP_CCD         = 'POIO'
		                                 AND OOLM.CONNSUBJ_OORG_CD = ITEM_OORG.OORG_CD
		                                 AND OOLM.CONN_YN          = 'Y' )
		   AND PINFO.ITEM_CD     = MTGL.ITEM_CD
		   AND PINFO.UPRC_EFCT_ST_DT    <![CDATA[<=]]> #{nowDate}
		   AND PINFO.UPRC_EFCT_EXP_DT    <![CDATA[>=]]> #{nowDate}
		   AND PINFO.STS         <![CDATA[<>]]> 'D'
		  <choose>
		    <when test="p.price_cntr_yn == &quot;Y&quot; or p.tl_yn == &quot;Y&quot;">
		 INNER JOIN VD VDGL                  /* 단가계약 업체 */
		    </when>
		    <otherwise>
		  LEFT OUTER JOIN VD VDGL            /* 단가계약 업체 */
		    </otherwise>
		  </choose>
		    ON VDGL.TEN_ID = PINFO.TEN_ID
		   AND VDGL.VD_CD  = PINFO.VD_CD
		  LEFT OUTER JOIN PURC_GRP_ITEMCAT JOB_MCLS_MAP    /* 품목분류_직무(그룹)유형_매핑  */
		    ON JOB_MCLS_MAP.TEN_ID       = MTGL.TEN_ID
		   AND JOB_MCLS_MAP.PURC_GRP_TYP_CCD = #{p.purc_grp_typ_ccd}
		   AND JOB_MCLS_MAP.CO_CD      = #{p.co_cd}
		   AND JOB_MCLS_MAP.ITEMCAT_CD      = MTGL.ITEMCAT_LVL_4_CD
		  LEFT OUTER JOIN PURC_GRP JOB             /* 직무(그룹) */
		    ON JOB.TEN_ID       = JOB_MCLS_MAP.TEN_ID
		   AND JOB.PURC_GRP_TYP_CCD = JOB_MCLS_MAP.PURC_GRP_TYP_CCD
		   AND JOB.PURC_GRP_CD  = JOB_MCLS_MAP.PURC_GRP_CD
		   AND JOB.CO_CD      = JOB_MCLS_MAP.CO_CD
		   AND JOB.USE_YN       = 'Y'
		  LEFT OUTER JOIN PURC_GRP PINFO_JOB       /* 단가계약 구매그룹 */
		    ON PINFO_JOB.TEN_ID       = PINFO.TEN_ID
		   AND PINFO_JOB.PURC_GRP_TYP_CCD = 'PURC'
		   AND PINFO_JOB.PURC_GRP_CD  = PINFO.PURC_GRP_CD
		   AND PINFO_JOB.CO_CD      = #{g.co_cd}
		   AND PINFO_JOB.USE_YN       = 'Y'
		<if test="g.existModule('SRM')">
		  LEFT OUTER JOIN SG SG
		    ON SG.TEN_ID = MTGL.TEN_ID
		   AND SG.SG_CD = MTGL.SG_CD
		  AND SG.STS != 'D'
		  </if>
		 WHERE MTGL.TEN_ID          = #{g.tenant}
		 <if test="p.itemcat_lvl_1_cd != null and p.itemcat_lvl_1_cd != ''">
		   AND MCLS1.ITEMCAT_CD        = #{p.itemcat_lvl_1_cd}
		 </if>
		 <if test="p.itemcat_lvl_2_cd != null and p.itemcat_lvl_2_cd != ''">
		   AND MCLS2.ITEMCAT_CD        = #{p.itemcat_lvl_2_cd}
		 </if>
		 <if test="p.itemcat_lvl_3_cd != null and p.itemcat_lvl_3_cd != ''">
		   AND MCLS3.ITEMCAT_CD        = #{p.itemcat_lvl_3_cd}
		 </if>
		 <if test="p.itemcat_lvl_4_cd != null and p.itemcat_lvl_4_cd != ''">
		   AND MCLS4.ITEMCAT_CD        = #{p.itemcat_lvl_4_cd}
		 </if>
		 <choose>
		   <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
		   AND MTGL.ITEM_CD IN
		       <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		       #{item_cd}
		       </foreach>
		   </when>
		   <otherwise>
		     <if test="p.item_cd != null and p.item_cd != ''">
		       <bind name="cdPattern" value="'%' + g.trim(p.item_cd) + '%'"/>
		   AND MTGL.ITEM_CD  LIKE UPPER(#{cdPattern})
		     </if>
		   </otherwise>
		 </choose>
		 <if test="p.disp_item_nm != null and p.disp_item_nm != ''">
		   <bind name="namePattern" value="'%' + g.trim(p.disp_item_nm) + '%'"/>
		   AND (UPPER(MTGL.ITEM_NM) LIKE UPPER(#{namePattern}) OR UPPER(MTGL.ITEM_NM_EN) LIKE UPPER(#{namePattern}))
		 </if>
		 <if test="p.mfgr_nm != null and p.mfgr_nm != ''">
		   <bind name="makerNmPattern" value="'%' + p.mfgr_nm + '%'"/>
		   AND UPPER(MTGL.MFGR_NM) LIKE UPPER(#{makerNmPattern})
		 </if>
		 <if test="p.item_spec != null and p.item_spec != ''">
		   <bind name="specPattern" value="'%' + p.item_spec + '%'"/>
		   AND UPPER(MTGL.ITEM_SPEC) LIKE UPPER(#{specPattern})
		 </if>
		 <if test="p.my_item_yn == &quot;Y&quot;">
		 	AND MYMT.USE_YN = 'Y'
		 </if>
  	</select>
	<select id="findListPoHistory" resultType="map">
	/* pro-shared.findListPoHistory : 품목 or 협력사 별 발주 이력 조회*/
	SELECT POHD.TEN_ID
         , POHD.OORG_CD
         , POHD.VD_CD
         , VDGL.VD_NM
         , PODT.ITEM_CD
	     , CASE WHEN 'en_US' = #{g.locale} THEN PODT.ITEM_NM_EN
		            ELSE PODT.ITEM_NM
		        END AS DISP_ITEM_NM
	     , PODT.ITEM_NM
         , PODT.PO_UPRC
         , PODT.PO_QTY
         ,  GETPRECFORMAT(#{g.tenant}, 'amt', PODT.PO_QTY * PODT.PO_UPRC, PODT.CUR_CCD) AS PO_AMT
         , POHD.PO_CRN_DT                AS UPRCCNTR_DT
         , POHD.PO_NO                      AS UPRCCNTR_NO
         , POHD.PO_REVNO                     AS UPRCCNTR_REVNO
      FROM PO POHD
     INNER JOIN PO_ITEM PODT
        ON PODT.TEN_ID = POHD.TEN_ID
       AND PODT.PO_UUID  = POHD.PO_UUID
       AND PODT.STS   != 'D'
     INNER JOIN VD VDGL
        ON VDGL.TEN_ID = POHD.TEN_ID
       AND VDGL.VD_CD  = POHD.VD_CD
       AND VDGL.STS   != 'D'
     WHERE POHD.TEN_ID       = #{g.tenant}
       AND POHD.OORG_CD IN
           <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
           </foreach>
       AND POHD.EFCT_PO_YN   = 'Y'
       AND POHD.PO_STS_CCD  = 'APVD'
       <if test="p.vd_cd != null and p.vd_cd != ''">
       AND POHD.VD_CD         = #{p.vd_cd}
       </if>
       <if test="p.item_cd != null and p.item_cd != ''">
       AND PODT.ITEM_CD      = #{p.item_cd}
       </if>
	  ORDER BY POHD.PO_CRN_DT DESC
	</select>
	<select id="findListUnitPriceContractHistory" resultType="map">
	/* pro-shared.findListUnitPriceContractHistory */
	SELECT INFO.TEN_ID
	     , INFO.OORG_CD
	     , INFO.VD_CD
	     , VDGL.VD_NM
	     , INFO.ITEM_CD
	     , CASE WHEN 'en_US' = #{g.locale} THEN INFO.ITEM_NM_EN
		            ELSE INFO.ITEM_NM
		        END AS DISP_ITEM_NM
	     , INFO.ITEM_NM
	     , INFO.UPRCCNTR_QTY
	     , INFO.UPRCCNTR_QTY
	     ,  GETPRECFORMAT(#{g.tenant}, 'amt', INFO.UPRCCNTR_QTY * INFO.UPRCCNTR_QTY, INFO.CUR_CCD) AS PO_AMT
	     , INFO.UPRCCNTR_DT
	     , INFO.UPRC_EFCT_ST_DT
	     , INFO.UPRC_EFCT_EXP_DT
	     , INFO.UPRCCNTR_NO
	     , INFO.UPRCCNTR_REVNO
	  FROM ITEM_UPRC_HISTREC INFO
	 INNER JOIN VD VDGL
	    ON VDGL.TEN_ID = INFO.TEN_ID
	   AND VDGL.VD_CD  = INFO.VD_CD
	   AND VDGL.STS   != 'D'
	 WHERE INFO.TEN_ID       = #{g.tenant}
       AND INFO.OORG_CD IN
           <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
           </foreach>
       <if test="p.vd_cd != null and p.vd_cd != ''">
       AND INFO.VD_CD         = #{p.vd_cd}
       </if>
       <if test="p.item_cd != null and p.item_cd != ''">
       AND INFO.ITEM_CD      = #{p.item_cd}
       </if>
	  ORDER BY INFO.UPRC_EFCT_ST_DT DESC
	</select>
	<resultMap id="cntrPriceMap" type="java.util.HashMap">
		<result column="UPRCCNTR_QTY" property="po_uprc"/>
		<collection javaType="list" property="cntrInfos" resultMap="cntrInfoMap"/>
	</resultMap>
	<resultMap id="cntrInfoMap" type="java.util.HashMap">
		<result column="OORG_CD" property="oorg_cd"/>
		<result column="UPRCCNTR_NO" property="uprccntr_no"/>
		<result column="UPRCCNTR_REVNO" property="uprccntr_revno"/>
		<result column="ITEM_CD" property="item_cd"/>
		<result column="ITEM_NM" property="item_nm"/>
		<result column="VD_CD" property="vd_cd"/>
		<result column="VD_NM" property="vd_nm"/>
		<result column="UPRC_EFCT_ST_DT" property="uprc_efct_st_dt"/>
		<result column="UPRC_EFCT_EXP_DT" property="uprc_efct_exp_dt"/>
	</resultMap>
	<select id="findListCntrItemGroupByPrice" resultMap="cntrPriceMap">
	/* pro-shared.findListCntrItemGroupByPrice */
	SELECT INFO.TEN_ID
         , INFO.OORG_CD
         , INFO.ITEM_CD
	     , CASE WHEN 'en_US' = #{g.locale} THEN INFO.ITEM_NM_EN
		            ELSE INFO.ITEM_NM
		        END AS DISP_ITEM_NM
	     ,	INFO.ITEM_NM
         , INFO.UPRCCNTR_QTY
         , INFO.UPRCCNTR_NO
         , INFO.UPRCCNTR_REVNO
         , INFO.VD_CD
         , VDGL.VD_NM
         , INFO.UPRC_EFCT_ST_DT
         , INFO.UPRC_EFCT_EXP_DT
      FROM ITEM_UPRC_HISTREC INFO
     INNER JOIN VD VDGL
        ON VDGL.TEN_ID = INFO.TEN_ID
       AND VDGL.VD_CD  = INFO.VD_CD
       AND VDGL.STS   != 'D'
     WHERE INFO.TEN_ID       = #{g.tenant}
       AND INFO.OORG_CD IN
       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
       </foreach>
       <if test="p.item_cd != null and p.item_cd != ''">
       AND INFO.ITEM_CD      = #{p.item_cd}
       </if>
       <if test="p.vd_cd != null and p.vd_cd != ''">
       AND INFO.VD_CD        = #{p.vd_cd}
       </if>
       AND INFO.STS         != 'D'
     ORDER BY INFO.UPRCCNTR_QTY, INFO.VD_CD, INFO.UPRC_EFCT_ST_DT
	</select>
	<resultMap id="annualPoAmtMap" type="java.util.HashMap">
		<result column="YEAR" property="year"/>
		<collection javaType="list" property="monthlyPoAmts" resultMap="monthlyPoAmtMap"/>
	</resultMap>
	<resultMap id="monthlyPoAmtMap" type="java.util.HashMap">
		<result column="MONTH" property="month"/>
		<result column="PO_AMT" property="po_amt"/>
	</resultMap>
	<select id="findListMonthlyPoAmt" resultMap="annualPoAmtMap">
    /* pro-shared.findListMonthlyPoAmt */
    <bind name="from_dt" value="g.getFormatNow(g.increaseDate(g.now, 'y', -2), 'yyyy') + '0101'"/>
    <bind name="to_dt" value="g.getFormatNow(g.now, 'yyyy') + '1231'"/>
    SELECT SUBSTR(POHD.PO_CRN_DT, 1, 4)  AS YEAR
         , SUBSTR(POHD.PO_CRN_DT, 5, 2)  AS MONTH
         , SUM(POHD.PO_AMT)              AS PO_AMT
      FROM PO POHD
     INNER JOIN VD VDGL
        ON VDGL.TEN_ID = POHD.TEN_ID
       AND VDGL.VD_CD  = POHD.VD_CD
       AND VDGL.STS   != 'D'
     WHERE POHD.TEN_ID        = #{g.tenant}
       AND POHD.OORG_CD IN
           <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
           </foreach>
       AND POHD.EFCT_PO_YN    = 'Y'
       AND POHD.PO_STS_CCD   = 'APVD'
       <if test="p.vd_cd != null and p.vd_cd != ''">
       AND POHD.VD_CD         = #{p.vd_cd}
       </if>
       AND POHD.PO_CRN_DT   <![CDATA[>=]]> #{from_dt}
       AND POHD.PO_CRN_DT   <![CDATA[<=]]> #{to_dt}
     GROUP BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  , SUBSTR(POHD.PO_CRN_DT, 5, 2)  ORDER BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  DESC
            , SUBSTR(POHD.PO_CRN_DT, 5, 2) </select>
	<select id="findItemBasicInfo" resultType="map">
    /* shared.findItemBasicInfo: 품목 기본정보 조회 */
    SELECT MTGL.IMG_ATHG_UUID
         , MTGL.ITEMCAT_LVL_1_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN MCLS.ITEMCAT_NM_EN
                	   ELSE MCLS.ITEMCAT_NM
                	    END AS DISP_ITEM_NM
               FROM ITEMCAT MCLS
              WHERE MCLS.TEN_ID  = MTGL.TEN_ID
                AND MCLS.ITEMCAT_CD = MTGL.ITEMCAT_LVL_1_CD
           )  AS ITEMCAT_LVL_1_NM
         , MTGL.ITEMCAT_LVL_2_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN MCLS.ITEMCAT_NM_EN
                	   ELSE MCLS.ITEMCAT_NM
                	    END AS DISP_ITEM_NM
               FROM ITEMCAT MCLS
              WHERE MCLS.TEN_ID  = MTGL.TEN_ID
                AND MCLS.ITEMCAT_CD = MTGL.ITEMCAT_LVL_2_CD
           )  AS ITEMCAT_LVL_2_NM
         , MTGL.ITEMCAT_LVL_3_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN MCLS.ITEMCAT_NM_EN
                	   ELSE MCLS.ITEMCAT_NM
                	    END AS DISP_ITEM_NM
               FROM ITEMCAT MCLS
              WHERE MCLS.TEN_ID  = MTGL.TEN_ID
                AND MCLS.ITEMCAT_CD = MTGL.ITEMCAT_LVL_3_CD
           )  AS ITEMCAT_LVL_3_NM
         , MTGL.ITEMCAT_LVL_4_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN MCLS.ITEMCAT_NM_EN
                	   ELSE MCLS.ITEMCAT_NM
                	    END AS DISP_ITEM_NM
               FROM ITEMCAT MCLS
              WHERE MCLS.TEN_ID  = MTGL.TEN_ID
                AND MCLS.ITEMCAT_CD = MTGL.ITEMCAT_LVL_4_CD
           )  AS ITEMCAT_LVL_4_NM
         , MTGL.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale}
                       THEN MTGL.ITEM_NM_EN
                	   ELSE MTGL.ITEM_NM
                	    END AS DISP_ITEM_NM
         , MTGL.ITEM_NM
         , MTGL.ITEM_NM_EN
         , MTGL.UOM_CCD
         , MTGL.ITEM_SPEC
         , MTGL.RMK
      FROM ITEM MTGL
     WHERE MTGL.TEN_ID  = #{g.tenant}
       AND MTGL.ITEM_CD = #{p.item_cd}
    </select>
    <select id="findListVendorPoTotAmtByItem" resultType="map">
    /* pro-shared.findListVendorPoTotAmtByItem: 특정 품목에 대한 협력사 별 발주누적금액 목록 조회 */
    SELECT POHD.OORG_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN OGMG.LOGIC_ORG_NM_EN
                	   ELSE OGMG.LOGIC_ORG_NM
                	    END AS LOGIC_ORG_NM
               FROM OORG OOMG
              INNER JOIN LOGIC_ORG OGMG
                 ON OGMG.TEN_ID     = OOMG.TEN_ID
                AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
                AND OGMG.LOGIC_ORG_CD     = OOMG.LOGIC_ORG_CD
                AND OGMG.STS != 'D'
              WHERE OOMG.TEN_ID      = POHD.TEN_ID
                AND OOMG.OORG_CD = POHD.OORG_CD
           )  AS OPER_ORG_NM
         , POHD.VD_CD
		,	CASE WHEN 'en_US' = #{g.locale}
                       THEN VDGL.VD_NM_EN
                	   ELSE VDGL.VD_NM
                	    END AS VD_NM
         , SUM(PODT.PO_AMT)  AS PO_AMT
      FROM PO POHD
     INNER JOIN PO_ITEM PODT
        ON PODT.TEN_ID = POHD.TEN_ID
       AND PODT.PO_UUID  = POHD.PO_UUID
     INNER JOIN VD VDGL
        ON VDGL.TEN_ID = POHD.TEN_ID
       AND VDGL.VD_CD  = POHD.VD_CD
     WHERE POHD.TEN_ID       = #{g.tenant}
       AND POHD.OORG_CD IN
       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
       </foreach>
       AND POHD.PO_STS_CCD  = 'APVD'
       AND POHD.EFCT_PO_YN   = 'Y'  /* 유효한 PO 여부 */
       AND PODT.ITEM_CD      = #{p.item_cd}
       AND PODT.STS         != 'D'
     GROUP BY POHD.TEN_ID, POHD.OORG_CD, POHD.VD_CD, VDGL.VD_NM,VDGL.VD_NM_EN
     ORDER BY POHD.OORG_CD, POHD.VD_CD
    </select>
    <select id="findListVendorPoItemPriceByItem" resultType="map">
    /* pro-shared.findListVendorPoItemPriceByItem: 특정 품목에 대한 협력사 발주 이력 목록 조회 */
    SELECT POHD.OORG_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN OGMG.LOGIC_ORG_NM_EN
                	   ELSE OGMG.LOGIC_ORG_NM
                	    END AS LOGIC_ORG_NM
               FROM OORG OOMG
              INNER JOIN LOGIC_ORG OGMG
                 ON OGMG.TEN_ID     = OOMG.TEN_ID
                AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
                AND OGMG.LOGIC_ORG_CD     = OOMG.LOGIC_ORG_CD
                AND OGMG.STS       != 'D'
              WHERE OOMG.TEN_ID      = POHD.TEN_ID
                AND OOMG.OORG_CD = POHD.OORG_CD
           )  AS OPER_ORG_NM
         , POHD.VD_CD
         ,	CASE WHEN 'en_US' = #{g.locale}
                       THEN VDGL.VD_NM_EN
                	   ELSE VDGL.VD_NM
                	    END AS VD_NM
         , PODT.PO_UPRC
         , POHD.PO_CRN_DT
      FROM PO POHD
     INNER JOIN PO_ITEM PODT
        ON PODT.TEN_ID = POHD.TEN_ID
       AND PODT.PO_UUID  = POHD.PO_UUID
     INNER JOIN VD VDGL
        ON VDGL.TEN_ID = POHD.TEN_ID
       AND VDGL.VD_CD  = POHD.VD_CD
     WHERE POHD.TEN_ID       = #{g.tenant}
       AND POHD.OORG_CD IN
       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
       </foreach>
       AND POHD.PO_STS_CCD  = 'APVD'
       AND POHD.EFCT_PO_YN   = 'Y'  /* 유효한 PO 여부 */
       AND PODT.ITEM_CD      = #{p.item_cd}
       AND PODT.STS         != 'D'
     ORDER BY POHD.OORG_CD, POHD.VD_CD, POHD.PO_CRN_DT
    </select>
    <select id="findVendorBasicInfo" resultType="map">
    /* pro-shared.findVendorBasicInfo: 협력사 기본정보 조회 */
    SELECT VDGL.CTRY_CCD
         , VDGL.VD_CD
         , VDGL.ERP_VD_CD
         , CASE WHEN VDGL.ERP_VD_CD IS NOT NULL  THEN VDGL.ERP_VD_CD
                ELSE VDGL.VD_CD
           END  AS DISP_VD_CD
         , VDGL.VD_NM
         , VDGL.VD_NM_EN
         , VDGL.BIZREGNO
         , VDGL.CORPNO
         , VDGL.CEO_NM
         , VDGL.CEO_NM_EN
         , VDGL.IND
         , VDGL.BIZTYP
      FROM VD VDGL
     WHERE VDGL.TEN_ID = #{g.tenant}
       AND VDGL.VD_CD  = #{p.vd_cd}
    </select>
    <select id="findListYearlyPoItemByVendor" resultType="map">
    /* pro-shared.findListYearlyPoItemByVendor: 특정 협력사에 대한 연도별 발주품목 별 발주누적금액 목록 조회 */
    SELECT SUBSTR(POHD.PO_CRN_DT, 1, 4)  AS PO_YEAR
         , POHD.OORG_CD
         , ( SELECT CASE WHEN 'en_US' = #{g.locale}
                       THEN OGMG.LOGIC_ORG_NM_EN
                	   ELSE OGMG.LOGIC_ORG_NM
                	    END AS LOGIC_ORG_NM
               FROM OORG OOMG
              INNER JOIN LOGIC_ORG OGMG
                 ON OGMG.TEN_ID     = OOMG.TEN_ID
                AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
                AND OGMG.LOGIC_ORG_CD     = OOMG.LOGIC_ORG_CD
                AND OGMG.STS != 'D'
              WHERE OOMG.TEN_ID      = POHD.TEN_ID
                AND OOMG.OORG_CD = POHD.OORG_CD
           )  AS OPER_ORG_NM
         , PODT.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN PODT.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                     THEN NULL
                ELSE PODT.ITEM_CD
           END  AS DISP_ITEM_CD
         , PODT.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale}
                       THEN PODT.ITEM_NM_EN
                	   ELSE PODT.ITEM_NM
                	    END AS ITEM_NM
         , PODT.ITEM_SPEC
         , PODT.ITEM_SPEC_DTL
         , SUM(PODT.PO_AMT)  AS PO_AMT
      FROM PO POHD
     INNER JOIN PO_ITEM PODT
        ON PODT.TEN_ID = POHD.TEN_ID
       AND PODT.PO_UUID  = POHD.PO_UUID
     WHERE POHD.TEN_ID        = #{g.tenant}
       <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
       AND POHD.OORG_CD  IN
       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
           #{oorg_cd}
       </foreach>
       </if>
       AND POHD.VD_CD        = #{p.vd_cd}
       AND POHD.PO_STS_CCD  = 'APVD'
       AND POHD.EFCT_PO_YN   = 'Y'  /* 유효한 PO 여부 */
     GROUP BY POHD.TEN_ID
            , SUBSTR(POHD.PO_CRN_DT, 1, 4)  , POHD.OORG_CD
            , PODT.ITEM_CD_CRN_TYP_CCD
            , PODT.ITEM_CD
            , PODT.ITEM_NM
            , PODT.ITEM_NM_EN
            , PODT.ITEM_SPEC
            , PODT.ITEM_SPEC_DTL
     ORDER BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  DESC
            , POHD.OORG_CD
            , PODT.ITEM_CD_CRN_TYP_CCD
            , PODT.ITEM_CD
    </select>
    <select id="findListYearlyPoTotAmtByVendor" resultType="map">
    /* pro-shared.findListYearlyPoTotAmtByVendor: 특정 협력사에 대한 연도별 운영단위 발주금액 및 증가율 목록 조회 */
    SELECT T.PO_YEAR
         , T.OORG_CD
         , T.OPER_ORG_NM
         , T.PO_AMT
         , T.PREV_PO_TOT_AMT
         , CASE WHEN T.PREV_PO_TOT_AMT IS NULL THEN 0
                ELSE (T.PO_AMT - T.PREV_PO_TOT_AMT) / T.PREV_PO_TOT_AMT * 100
           END AS INCREASE_RATE
      FROM ( SELECT SUBSTR(POHD.PO_CRN_DT, 1, 4)  AS PO_YEAR
                  , POHD.OORG_CD
                  , ( SELECT OGMG.LOGIC_ORG_NM
                        FROM OORG OOMG
                       INNER JOIN LOGIC_ORG OGMG
                          ON OGMG.TEN_ID     = OOMG.TEN_ID
                         AND OGMG.LOGIC_ORG_TYP_CCD = OOMG.LOGIC_ORG_TYP_CCD
                         AND OGMG.LOGIC_ORG_CD     = OOMG.LOGIC_ORG_CD
                         AND OGMG.STS != 'D'
                       WHERE OOMG.TEN_ID      = POHD.TEN_ID
                         AND OOMG.OORG_CD = POHD.OORG_CD
                    )  AS OPER_ORG_NM
                  , SUM(POHD.PO_AMT)  AS PO_AMT
                  , LEAD(SUM(POHD.PO_AMT)) OVER (PARTITION BY POHD.TEN_ID, POHD.OORG_CD ORDER BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  DESC)  AS PREV_PO_TOT_AMT
               FROM PO POHD
              WHERE POHD.TEN_ID        = #{g.tenant}
                <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
                AND POHD.OORG_CD  IN
                <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
                    #{oorg_cd}
                </foreach>
                </if>
                AND POHD.VD_CD         = #{p.vd_cd}
                AND POHD.PO_STS_CCD   = 'APVD'
                AND POHD.EFCT_PO_YN    = 'Y'  /* 유효한 PO 여부 */
              GROUP BY POHD.TEN_ID
                     , POHD.OORG_CD
                     , SUBSTR(POHD.PO_CRN_DT, 1, 4)  ) T
     ORDER BY T.PO_YEAR DESC, T.OORG_CD
    </select>
    <select id="findListMonthlyPoTotAmtByVendor" resultType="map">
    /* pro-shared.findListMonthlyPoTotAmtByVendor: 특정 협력사에 대한 년월 별 발주금액 및 증가율 목록 조회 */
    SELECT T.PO_YEAR
         , T.PO_MONTH
         , T.PO_AMT
         , T.PREV_PO_TOT_AMT
         , CASE WHEN T.PREV_PO_TOT_AMT IS NULL THEN 0
                ELSE (T.PO_AMT - T.PREV_PO_TOT_AMT) / T.PREV_PO_TOT_AMT * 100
           END AS INCREASE_RATE
      FROM ( SELECT SUBSTR(POHD.PO_CRN_DT, 1, 4)  AS PO_YEAR
                  , SUBSTR(POHD.PO_CRN_DT, 5, 2)  AS PO_MONTH
                  , SUM(POHD.PO_AMT)              AS PO_AMT
                  , LAG(SUM(POHD.PO_AMT)) OVER (ORDER BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  , SUBSTR(POHD.PO_CRN_DT, 5, 2)  ) AS PREV_PO_TOT_AMT
               FROM PO POHD
              WHERE POHD.TEN_ID        = #{g.tenant}
                <if test="p.oorg_cds != null and p.oorg_cds.size() gt 0">
                AND POHD.OORG_CD  IN
                <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
                    #{oorg_cd}
                </foreach>
                </if>
                AND POHD.VD_CD         = #{p.vd_cd}
                AND POHD.PO_STS_CCD   = 'APVD'
                AND POHD.EFCT_PO_YN    = 'Y'  /* 유효한 PO 여부 */
              GROUP BY SUBSTR(POHD.PO_CRN_DT, 1, 4)  , SUBSTR(POHD.PO_CRN_DT, 5, 2)  ) T
     ORDER BY T.PO_YEAR, T.PO_MONTH
    </select>
</mapper>
