<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
PO: 발주헤더
PO_ITEM: 발주품목
 -->

<mapper namespace="po-item">
<select id="findListPoItem" resultType="map">
    /* po.findListPoItem: 발주품목 목록 */
    SELECT DT.TEN_ID
         , DT.PO_ITEM_UUID
         , DT.PO_NO
         , DT.PO_REVNO
         , DT.PO_LNO
         , DT.OORG_CD
         , DT.PO_UUID
         , DT.PR_ITEM_UUID
         , DT.PR_NO
         , DT.PR_REVNO
         , DT.PR_LNO
         , DT.PR_REALUSR_ID
         , DT.RFX_ITEM_UUID
         , DT.RFX_NO
         , DT.RFX_RND
         , DT.RFX_ITEM_LNO
         , DT.RFX_BID_ITEM_UUID
         , DT.RFX_BID_NO
         , DT.RFX_BID_REVNO
         , DT.RFX_BID_LNO
         , DT.PURC_TYP_CCD
         , DT.PLT_CD
         , DT.ITEM_OORG_CD
         , DT.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN DT.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE DT.ITEM_CD
           END  AS DISP_ITEM_CD
         , DT.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale}
                       THEN DT.ITEM_NM_EN
                	   ELSE DT.ITEM_NM
                	    END AS DISP_ITEM_NM
         , DT.ITEM_NM
         , DT.ITEM_NM_EN
         , DT.ITEM_SPEC
         , DT.ITEM_SPEC_DTL
         , DT.UOM_CCD
         , DT.CUR_CCD
         , (CASE WHEN DT.PO_QTY   IS NULL THEN 0 ELSE DT.PO_QTY   END) AS PO_QTY
         , (CASE WHEN DT.PO_UPRC IS NULL THEN 0 ELSE DT.PO_UPRC END) AS PO_UPRC
         , (CASE WHEN DT.PO_AMT   IS NULL THEN 0 ELSE DT.PO_AMT   END) AS PO_AMT
         , (CASE WHEN DT.CUST_RO  IS NULL THEN 0 ELSE DT.CUST_RO  END) AS CUST_RO
         , (CASE WHEN DT.CUST_AMT   IS NULL THEN 0 ELSE DT.CUST_AMT   END) AS CUST_AMT
         , DT.WH_CCD
         , DT.DLVY_PLC
         , DT.PURC_GRP_CD
         , DT.GR_PIC_ID
         , DT.CNTR_UUID
         , DT.CNTR_NO
         , DT.CNTR_REVNO
         , DT.PURC_CNTR_ITEM_UUID
         , DT.SG_CD
         , DT.CONST_ST_DT
         , DT.CONST_EXP_DT
         , DT.REQ_DLVY_DT
         , DT.DLVY_DT
         , DT.ATHG_UUID
         , (CASE WHEN DT.ASN_QTY IS NULL THEN 0 ELSE DT.ASN_QTY END) AS ASN_QTY
         , (CASE WHEN DT.GR_QTY IS NULL THEN 0 ELSE DT.GR_QTY END) AS GR_QTY
         , HD.EFCT_PO_YN
         , DT.PO_CMPLD_YN
         , DT.PO_ERY_ED_YN
         , DT.PO_ERY_ED_DTTM
         , DT.DF_YN
         , DT.PO_ITEM_STS_CCD
         , DT.VD_CD
         , DT.STS
         , DT.REGR_ID
         , DT.REG_DTTM
         , DT.MODR_ID
         , DT.MOD_DTTM
         , HD.PO_UUID
         , HD.PO_CRN_DT
         , HD.CUR_CCD
         , HD.PYMTMETH_CCD
         , (CASE WHEN HD.DFRM_RO IS NULL THEN 0 ELSE HD.DFRM_RO END) AS DFRM_RO
         , HD.DOMOVRS_DIV_CCD
         , HD.VD_PO_STS_CCD
         , HD.PO_STS_CCD AS PO_STS
         , HD.PO_TYP_CCD
         , HD.PO_CHG_TYP_CCD
         , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN ELSE VD.VD_NM END AS VD_NM
         , VD.ERP_VD_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN SU.USR_NM_EN ELSE SU.USR_NM END AS PR_REALUSR_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN CU.USR_NM_EN ELSE CU.USR_NM END AS GR_PIC_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN JB.PURC_GRP_NM_EN ELSE JB.PURC_GRP_NM END AS PURC_GRP_NM /*구매그룹명*/
         , HD.PO_RCPT_RJCT_RSN
      FROM PO_ITEM DT
     INNER JOIN PO HD
        ON DT.TEN_ID = HD.TEN_ID
       AND DT.PO_UUID = HD.PO_UUID
       AND HD.PO_STS_CCD = 'APVD' /* C:발주승인완료 */
       AND HD.STS != 'D'
      LEFT OUTER JOIN VD VD
        ON VD.TEN_ID = HD.TEN_ID
       AND VD.VD_CD = HD.VD_CD
      LEFT OUTER JOIN USR SU
        ON SU.TEN_ID = DT.TEN_ID
       AND SU.USR_ID = DT.PR_REALUSR_ID 
      LEFT OUTER JOIN USR CU
        ON CU.TEN_ID = DT.TEN_ID 
       AND CU.USR_ID = DT.GR_PIC_ID
      LEFT OUTER JOIN PURC_GRP JB
        ON JB.TEN_ID       = DT.TEN_ID
       AND JB.PURC_GRP_TYP_CCD = 'PURC'
       AND JB.PURC_GRP_CD  = DT.PURC_GRP_CD 
       AND JB.CO_CD      = #{g.co_cd}
       AND JB.USE_YN       = 'Y'
     WHERE DT.TEN_ID = #{g.tenant}
       <if test="p.from_po_crn_dt != null and p.from_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &gt;= #{p.from_po_crn_dt}
       </if>
       <if test="p.to_po_crn_dt != null and p.to_po_crn_dt != &quot;&quot;">
       AND HD.PO_CRN_DT &lt;= #{p.to_po_crn_dt}
       </if>
       <if test="p.domovrs_div_ccd != null and p.domovrs_div_ccd != &quot;&quot;">
       AND HD.DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
       </if>
       <if test="p.erp_vd_cd != null and p.erp_vd_cd != &quot;&quot;">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
       AND VD.ERP_VD_CD LIKE UPPER(#{p_erp_vd_cd})
       </if>
       <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
       AND    (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))      /* 협력사 명 검색조건*/
       </if>
       <if test="p.po_typ_ccd != null and p.po_typ_ccd != &quot;&quot;">
       AND HD.PO_TYP_CCD = #{p.po_typ_ccd}
       </if>
       <if test="p.from_req_dlvy_dt != null and p.from_req_dlvy_dt != &quot;&quot;">
       AND DT.REQ_DLVY_DT &gt;= #{p.from_req_dlvy_dt}
       </if>
       <if test="p.to_req_dlvy_dt != null and p.to_req_dlvy_dt != &quot;&quot;">
       AND DT.REQ_DLVY_DT &lt;= #{p.to_req_dlvy_dt}
       </if>
       <if test="p.purc_typ_ccd != null and p.purc_typ_ccd != &quot;&quot;">
       AND DT.PURC_TYP_CCD = #{p.purc_typ_ccd}
       </if>
       <if test="p.item_nm != null and p.item_nm != ''">
           <bind name="p_item_nm" value="'%' + p.item_nm + '%'"/>
       AND (UPPER(DT.ITEM_NM) LIKE UPPER(#{p_item_nm}) OR UPPER(DT.ITEM_NM_EN) LIKE UPPER(#{p_item_nm}))
       </if>
       <choose>
           <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
       AND DT.OORG_CD IN 
               <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
                   #{oorg_cd}
               </foreach>
           </when>
           <otherwise>
       AND DT.OORG_CD = '0'
           </otherwise>
       </choose>
       <choose>
           <when test="p.po_nos != null and p.po_nos.size() != 0">
       AND DT.PO_NO IN 
               <foreach close=")" collection="p.po_nos" item="po_no" open="(" separator=",">
                   #{po_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.po_no != null and p.po_no != ''">
                   <bind name="p_po_no" value="'%' + p.po_no + '%'"/>
       AND DT.PO_NO LIKE UPPER(#{p_po_no})
               </if>
           </otherwise>
       </choose>
       <choose>
           <when test="p.item_cds != null and p.item_cds.size() != 0">
       AND DT.ITEM_CD IN 
               <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
                   #{item_cd}
               </foreach>
           </when>
           <otherwise>
               <if test="p.item_cd != null and p.item_cd != ''">
                   <bind name="p_item_cd" value="'%' + p.item_cd + '%'"/>
       AND DT.ITEM_CD LIKE UPPER(#{p_item_cd})
               </if>
           </otherwise>
       </choose>
       <choose>
           <when test="p.uprccntr_nos != null and p.uprc_cntr_nos.size() != 0">
       AND DT.CNTR_NO IN
               <foreach close=")" collection="p.uprc_cntr_nos" item="uprccntr_no" open="(" separator=",">
                   #{uprccntr_no}
               </foreach>
           </when>
           <otherwise>
               <if test="p.uprccntr_no != null and p.uprccntr_no != ''">
                   <bind name="p_uprc_cntr_no" value="'%' + p.uprccntr_no + '%'"/>
       AND DT.CNTR_NO LIKE UPPER(#{p_uprc_cntr_no})
               </if>
           </otherwise>
       </choose>
       <choose>
         <when test="p.purc_grp_cd != null and p.purc_grp_cd != ''">
       AND DT.PURC_GRP_CD = #{p.purc_grp_cd}
         </when>
         <otherwise>
           <if test="p.purc_grp_nm != null and p.purc_grp_nm != ''">
            <bind name="purcGrpNmPattern" value="'%' + p.purc_grp_nm + '%'"/>
       			AND (UPPER(JB.PURC_GRP_NM) LIKE UPPER(#{purcGrpNmPattern}) OR UPPER(JB.PURC_GRP_NM_EN) LIKE UPPER(#{purcGrpNmPattern}))
           </if>
         </otherwise>
       </choose>
       AND DT.STS != 'D'
     ORDER BY DT.PO_NO DESC, DT.PO_REVNO DESC, CAST(DT.PO_LNO AS INT) ASC 
    </select>
    <insert id="insertPoItem">
        /* po-item.insertPoItem: 발주품목 등록 */
        INSERT
        INTO PO_ITEM (
        TEN_ID
        , PO_ITEM_UUID
        , PO_NO
        , PO_REVNO
        , PO_LNO
        , OORG_CD
        , PO_UUID
        , PR_ITEM_UUID
        , PR_NO
        , PR_REVNO
        , PR_LNO
        , PR_REALUSR_ID
        , RFX_ITEM_UUID
        , RFX_NO
        , RFX_RND
        , RFX_ITEM_LNO
        , RFX_BID_ITEM_UUID
        , RFX_BID_NO
        , RFX_BID_REVNO
        , RFX_BID_LNO
        , PURC_TYP_CCD
        , PLT_CD
        , ITEM_OORG_CD
        , ITEM_CD_CRN_TYP_CCD
        , ITEM_CD
        , ITEM_NM
        , ITEM_NM_EN
        , ITEM_SPEC
        , ITEM_SPEC_DTL
        , UOM_CCD
        , PO_QTY
        , CUR_CCD
        , PO_UPRC
        , PO_AMT
        , CUST_RO
        , CUST_AMT
        , WH_CCD
        , DLVY_PLC
        , PURC_GRP_CD
        , GR_PIC_ID
        , CNTR_UUID
        , CNTR_NO
        , CNTR_REVNO
        , PURC_CNTR_ITEM_UUID
        , SG_CD
        , CONST_ST_DT
        , CONST_EXP_DT
        , REQ_DLVY_DT
        , DLVY_DT
        , ATHG_UUID
        , ASN_QTY
        , GR_QTY
        , PO_CMPLD_YN
        , PO_ERY_ED_YN
        , DF_YN
        , VD_CD
        , ERP_VD_CD
        , PO_REQ_ITEM_RCPT_UUID
        , PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
        , PO_ITEM_STS_CCD
        , STS
        , REGR_ID
        , REG_DTTM
        , MODR_ID
        , MOD_DTTM
        ) VALUES (
        #{g.tenant}
        , #{p.po_item_uuid}
        , #{p.po_no}
        , CAST(#{p.po_revno} AS INT)
        , TO_CHAR(#{p.po_lno})  , #{p.oorg_cd}
        , #{p.po_uuid}
        , #{p.pr_item_uuid}
        , #{p.pr_no}
        , CAST(#{p.pr_revno} AS INT)
        , TO_CHAR(#{p.pr_lno})  , #{p.pr_realusr_id}
        , #{p.rfx_item_uuid}
        , #{p.rfx_no}
        , CAST(#{p.rfx_rnd} AS INT)
        , TO_CHAR(#{p.rfx_item_lno})  , #{p.rfx_bid_item_uuid}
        , #{p.rfx_bid_no}
        , CAST(#{p.rfx_bid_revno} AS INT)
        , TO_CHAR(#{p.rfx_bid_lno})  , #{p.purc_typ_ccd}
        , #{p.plt_cd}
        , #{p.item_oorg_cd}
        , #{p.item_cd_crn_typ_ccd}
        , #{p.item_cd}
        , #{p.item_nm}
        , #{p.item_nm_en}
        , #{p.item_spec}
        , #{p.item_spec_dtl}
        , #{p.uom_ccd}
        , CAST(#{p.po_qty} AS FLOAT  )
        , #{p.cur_ccd}
        , CAST(#{p.po_uprc} AS FLOAT  )
        , CAST(#{p.po_amt} AS FLOAT  )
        , CAST(#{p.cust_ro} AS FLOAT  )
        , CAST(#{p.cust_amt} AS FLOAT  )
        , #{p.wh_ccd}
        , #{p.dlvy_plc}
        , #{p.purc_grp_cd}
        , #{p.gr_pic_id}
        , #{p.cntr_uuid}
        , #{p.cntr_no}
        , CAST(#{p.cntr_revno} AS INT)
        , #{p.purc_cntr_item_uuid}
        , #{p.sg_cd}
        , #{p.const_st_dt}
        , #{p.const_exp_dt}
        , #{p.req_dlvy_dt}
        , #{p.dlvy_dt}
        , #{p.athg_uuid}
        , CAST(#{p.asn_qty} AS FLOAT  )
        , CAST(#{p.gr_qty} AS FLOAT  )
        , #{p.po_cmpld_yn}
        , #{p.po_ery_ed_yn}
        , #{p.df_yn}
        , #{p.vd_cd}
        , #{p.erp_vd_cd}
        , #{p.po_req_item_rcpt_uuid}
        , #{p.po_req_item_rcpt_qta_aloc_uuid}
        <choose>
            <when test="p.po_item_sts_ccd != null">
                , #{p.po_item_sts_ccd}
            </when>
            <otherwise>
                , ''
            </otherwise>
        </choose>
        , 'C'
        , #{g.username}
        , #{g.now}
        , #{g.username}
        , #{g.now}
        )
    </insert>
	<select id="findListPoItemByPoId" resultType="map">
    /* po-item.findListPoItemByPoId: 발주별 발주품목 목록 */
    SELECT PO_ITEM.TEN_ID
         , PO_ITEM.PO_ITEM_UUID
         , PO_ITEM.PO_NO
         , PO_ITEM.PO_REVNO
         , PO_ITEM.PO_LNO
         , PO_ITEM.OORG_CD
         , PO_ITEM.PO_UUID
         , PO_ITEM.PR_ITEM_UUID
         , PO_ITEM.PR_NO
         , PO_ITEM.PR_REVNO
         , PO_ITEM.PR_LNO
         , PO_ITEM.PR_REALUSR_ID
         , PO_ITEM.RFX_ITEM_UUID
         , PO_ITEM.RFX_NO
         , PO_ITEM.RFX_RND
         , PO_ITEM.RFX_ITEM_LNO
         , PO_ITEM.RFX_ITEM_LNO AS RFX_LNO
         , PO_ITEM.RFX_BID_ITEM_UUID
         , PO_ITEM.RFX_BID_NO
         , PO_ITEM.RFX_BID_REVNO
         , PO_ITEM.RFX_BID_LNO
         , PO_ITEM.PURC_TYP_CCD
         , PO_ITEM.PLT_CD
         , PO_ITEM.ITEM_OORG_CD
         , (SELECT
                CASE WHEN 'en_US' = #{g.locale}
                         THEN LOGIC_ORG.LOGIC_ORG_NM_EN
                     ELSE LOGIC_ORG.LOGIC_ORG_NM
                    END AS LOGIC_ORG_NM
            FROM LOGIC_ORG LOGIC_ORG
                     INNER JOIN OORG OORG
                                ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
                                    AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
            WHERE LOGIC_ORG.TEN_ID = PO_ITEM.TEN_ID
              AND LOGIC_ORG.ORG_CD = PO_ITEM.PLT_CD
              AND OORG.OORG_CD = PO_ITEM.ITEM_OORG_CD) AS PLT_NM
         , PO_ITEM.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN PO_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE PO_ITEM.ITEM_CD
           END  AS DISP_ITEM_CD
         , PO_ITEM.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN PO_ITEM.ITEM_NM_EN
		            ELSE PO_ITEM.ITEM_NM
		        END AS DISP_ITEM_NM
         , PO_ITEM.ITEM_NM
         , PO_ITEM.ITEM_NM_EN
         , PO_ITEM.ITEM_SPEC
         , PO_ITEM.ITEM_SPEC_DTL
         , PO_ITEM.UOM_CCD
         , PO_ITEM.CUR_CCD
         , (CASE WHEN PO_ITEM.PO_QTY   IS NULL THEN 0 ELSE PO_ITEM.PO_QTY   END) AS PO_QTY
         , (CASE WHEN PO_ITEM.PO_UPRC IS NULL THEN 0 ELSE PO_ITEM.PO_UPRC END) AS PO_UPRC
         , (CASE WHEN PO_ITEM.PO_AMT   IS NULL THEN 0 ELSE PO_ITEM.PO_AMT   END) AS PO_AMT
         , (CASE WHEN PO_ITEM.CUST_RO  IS NULL THEN 0 ELSE PO_ITEM.CUST_RO  END) AS CUST_RO
         , (CASE WHEN PO_ITEM.CUST_AMT   IS NULL THEN 0 ELSE PO_ITEM.CUST_AMT   END) AS CUST_AMT
         , PO_ITEM.WH_CCD
         , PO_ITEM.DLVY_PLC
         , PO_ITEM.PURC_GRP_CD
         , PO_ITEM.GR_PIC_ID
         , PO_ITEM.CNTR_UUID
         , PO_ITEM.CNTR_NO
         , PO_ITEM.CNTR_REVNO
         , PO_ITEM.PURC_CNTR_ITEM_UUID
         , PO_ITEM.SG_CD
         , PO_ITEM.CONST_ST_DT
         , PO_ITEM.CONST_EXP_DT
         , PO_ITEM.REQ_DLVY_DT
         , PO_ITEM.DLVY_DT
         , PO_ITEM.ATHG_UUID
         , (CASE WHEN PO_ITEM.ASN_QTY IS NULL THEN 0 ELSE PO_ITEM.ASN_QTY END) AS ASN_QTY
         , (CASE WHEN PO_ITEM.GR_QTY IS NULL THEN 0 ELSE PO_ITEM.GR_QTY END) AS GR_QTY
         , PO_ITEM.PO_CMPLD_YN
         , PO_ITEM.PO_ERY_ED_YN
         , PO_ITEM.PO_ERY_ED_DTTM
         , PO_ITEM.DF_YN
         , PO_ITEM.PO_ITEM_STS_CCD
         , PO_ITEM.VD_CD
         , PO_ITEM.ERP_VD_CD
         , PO_ITEM.PO_REQ_ITEM_RCPT_UUID
         , PO_ITEM.PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
         , PO_ITEM.STS
         , PO_ITEM.REGR_ID
         , PO_ITEM.REG_DTTM
         , PO_ITEM.MODR_ID
         , PO_ITEM.MOD_DTTM
         , CASE WHEN 'en_US' = #{g.locale} THEN SU.USR_NM_EN
		            ELSE SU.USR_NM
		        END AS PR_REALUSR_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN CU.USR_NM_EN
		            ELSE CU.USR_NM
		        END AS GR_PIC_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS PURC_GRP_NM
         , PR_ITEM.REGR_ID AS PR_REGR_ID
      FROM PO_ITEM PO_ITEM
      LEFT OUTER JOIN USR SU
        ON SU.TEN_ID = PO_ITEM.TEN_ID
       AND SU.USR_ID = PO_ITEM.PR_REALUSR_ID
      LEFT OUTER JOIN USR CU
        ON CU.TEN_ID = PO_ITEM.TEN_ID
       AND CU.USR_ID = PO_ITEM.GR_PIC_ID
      LEFT OUTER JOIN PURC_GRP PURC_GRP
        ON PURC_GRP.TEN_ID       = PO_ITEM.TEN_ID
       AND PURC_GRP.PURC_GRP_TYP_CCD = 'PURC'
       AND PURC_GRP.PURC_GRP_CD  = PO_ITEM.PURC_GRP_CD
       AND PURC_GRP.CO_CD      = #{g.co_cd}
       AND PURC_GRP.USE_YN       = 'Y'
      LEFT OUTER JOIN PR_ITEM PR_ITEM
        ON PR_ITEM.TEN_ID = PO_ITEM.TEN_ID
       AND PR_ITEM.PR_ITEM_UUID = PO_ITEM.PR_ITEM_UUID
       AND PR_ITEM.STS != 'D'
     WHERE PO_ITEM.TEN_ID = #{g.tenant}
       AND PO_ITEM.PO_UUID = #{p.po_uuid}
       AND PO_ITEM.STS != 'D'
     ORDER BY PO_ITEM.PO_NO ASC, CAST(PO_ITEM.PO_LNO AS INT) ASC
    </select>
    <select id="findListPoItemModifyByPoId" resultType="map">
    /* po-item.findListPoItemModifyByPoId: 발주별 발주품목 목록(발주변경시) */
    SELECT PO_ITEM.TEN_ID
         , PO_ITEM.PO_ITEM_UUID
         , PO_ITEM.PO_NO
         , PO_ITEM.PO_REVNO
         , PO_ITEM.PO_LNO
         , PO_ITEM.OORG_CD
         , PO_ITEM.PO_UUID
         , PO_ITEM.PR_ITEM_UUID
         , PO_ITEM.PR_NO
         , PO_ITEM.PR_REVNO
         , PO_ITEM.PR_LNO
         , PO_ITEM.PR_REALUSR_ID
         , PO_ITEM.RFX_ITEM_UUID
         , PO_ITEM.RFX_NO
         , PO_ITEM.RFX_RND
         , PO_ITEM.RFX_ITEM_LNO
         , PO_ITEM.RFX_BID_ITEM_UUID
         , PO_ITEM.RFX_BID_NO
         , PO_ITEM.RFX_BID_REVNO
         , PO_ITEM.RFX_BID_LNO
         , PO_ITEM.PURC_TYP_CCD
         , PO_ITEM.PLT_CD
         , PO_ITEM.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN PO_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE PO_ITEM.ITEM_CD
           END  AS DISP_ITEM_CD
         , PO_ITEM.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN PO_ITEM.ITEM_NM_EN
		            ELSE PO_ITEM.ITEM_NM
		        END AS DISP_ITEM_NM
         , PO_ITEM.ITEM_NM
         , PO_ITEM.ITEM_NM_EN
         , PO_ITEM.ITEM_SPEC
         , PO_ITEM.ITEM_SPEC_DTL
         , PO_ITEM.UOM_CCD
         , PO_ITEM.CUR_CCD
         , (CASE WHEN PO_ITEM.PO_QTY   IS NULL THEN 0 ELSE PO_ITEM.PO_QTY   END) AS PO_QTY
         , (CASE WHEN PO_ITEM.PO_UPRC IS NULL THEN 0 ELSE PO_ITEM.PO_UPRC END) AS PO_UPRC
         , (CASE WHEN PO_ITEM.PO_AMT   IS NULL THEN 0 ELSE PO_ITEM.PO_AMT   END) AS PO_AMT
         , (CASE WHEN PO_ITEM.CUST_RO  IS NULL THEN 0 ELSE PO_ITEM.CUST_RO  END) AS CUST_RO
         , (CASE WHEN PO_ITEM.CUST_AMT   IS NULL THEN 0 ELSE PO_ITEM.CUST_AMT   END) AS CUST_AMT
         , PO_ITEM.WH_CCD
         , PO_ITEM.DLVY_PLC
         , PO_ITEM.PURC_GRP_CD
         , PO_ITEM.GR_PIC_ID
         , PO_ITEM.CNTR_UUID
         , PO_ITEM.CNTR_NO
         , PO_ITEM.CNTR_REVNO
         , PO_ITEM.PURC_CNTR_ITEM_UUID
         , PO_ITEM.SG_CD
         , PO_ITEM.CONST_ST_DT
         , PO_ITEM.CONST_EXP_DT
         , PO_ITEM.REQ_DLVY_DT
         , PO_ITEM.DLVY_DT
         , PO_ITEM.ATHG_UUID
         , (CASE WHEN PO_ITEM.ASN_QTY IS NULL THEN 0 ELSE PO_ITEM.ASN_QTY END) AS ASN_QTY
         , (CASE WHEN PO_ITEM.GR_QTY IS NULL THEN 0 ELSE PO_ITEM.GR_QTY END) AS GR_QTY
         , PO_ITEM.PO_CMPLD_YN
         , PO_ITEM.PO_ERY_ED_YN
         , PO_ITEM.PO_ERY_ED_DTTM
         , PO_ITEM.DF_YN
         , PO_ITEM.PO_ITEM_STS_CCD
         , PO_ITEM.VD_CD
         , PO_ITEM.ERP_VD_CD
         , PO_ITEM.PO_REQ_ITEM_RCPT_UUID
         , PO_ITEM.PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
         , PO_ITEM.STS
         , PO_ITEM.REGR_ID
         , PO_ITEM.REG_DTTM
         , PO_ITEM.MODR_ID
         , PO_ITEM.MOD_DTTM
         , CASE WHEN 'en_US' = #{g.locale} THEN SU.USR_NM_EN ELSE SU.USR_NM END AS PR_REALUSR_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN CU.USR_NM_EN ELSE CU.USR_NM END AS GR_PIC_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN PURC_GRP.PURC_GRP_NM_EN ELSE PURC_GRP.PURC_GRP_NM END AS PURC_GRP_NM /*구매그룹명*/
         , PR_ITEM.REGR_ID AS PR_REGR_ID
         , (
               SELECT SUM(CASE WHEN GR_AMT IS NULL THEN 0 ELSE GR_AMT END)
                 FROM GR_ITEM
                WHERE TEN_ID = #{g.tenant}
                  AND PO_NO = PO_ITEM.PO_NO
                  AND PO_LNO = PO_ITEM.PO_LNO
                  AND GR_ITEM_STS_CCD = 'GR_CMPLD' /* GC: 검수완료 */
                  AND STS != 'D'
            ) AS GR_AMT
      FROM PO_ITEM PO_ITEM
      LEFT OUTER JOIN USR SU
        ON SU.TEN_ID = PO_ITEM.TEN_ID
       AND SU.USR_ID = PO_ITEM.PR_REALUSR_ID
      LEFT OUTER JOIN USR CU
        ON CU.TEN_ID = PO_ITEM.TEN_ID
       AND CU.USR_ID = PO_ITEM.GR_PIC_ID
      LEFT OUTER JOIN PURC_GRP PURC_GRP
        ON PURC_GRP.TEN_ID       = PO_ITEM.TEN_ID
       AND PURC_GRP.PURC_GRP_TYP_CCD = 'PURC'
       AND PURC_GRP.PURC_GRP_CD  = PO_ITEM.PURC_GRP_CD
       AND PURC_GRP.CO_CD      = #{g.co_cd}
       AND PURC_GRP.USE_YN       = 'Y'
      LEFT OUTER JOIN PR_ITEM PR_ITEM
        ON PR_ITEM.TEN_ID = PO_ITEM.TEN_ID
       AND PR_ITEM.PR_ITEM_UUID = PO_ITEM.PR_ITEM_UUID
       AND PR_ITEM.STS != 'D'
     WHERE PO_ITEM.TEN_ID = #{g.tenant}
       AND PO_ITEM.PO_UUID = #{p.po_uuid}
       AND PO_ITEM.STS != 'D'
     ORDER BY PO_ITEM.PO_NO ASC, CAST(PO_ITEM.PO_LNO AS INT) ASC
    </select>
	<select id="findPrevPoItemByModification" resultType="map">
    SELECT B.*
      FROM PO_ITEM A INNER JOIN (
      	SELECT TEN_ID    AS TEN_ID
             , PO_NO     AS PO_NO
             , PO_REVNO -1 AS PO_REVNO
             , PO_LNO    AS PO_LNO
          FROM PO_ITEM
         WHERE TEN_ID = #{g.tenant}
           AND PO_UUID  = #{p.po_uuid}
           AND STS   != 'D'
      ) B ON (
      	A.TEN_ID = B.TEN_ID
        AND A.PO_NO  = B.PO_NO
        AND A.PO_REVNO = B.PO_REVNO
        AND A.PO_LNO = B.PO_LNO
      )
    </select>
    <update id="updatePrevPoItemByModification">
    UPDATE PO_ITEM 
       SET PO_CMPLD_YN = 'Y'
     WHERE TEN_ID = #{g.tenant}
       AND PO_NO  = #{p.po_no}
       AND PO_REVNO = #{p.po_revno}
       AND PO_LNO = #{p.po_lno}
    </update>
    <select id="findPreviousListPoItemByPoId" resultType="map">
    /* po-item.findPreviousListPoItemByPoId: 이전차수 발주별 발주품목 목록 */
    SELECT DT.TEN_ID
         , DT.PO_ITEM_UUID
         , DT.PO_NO
         , DT.PO_REVNO
         , DT.PO_LNO
         , DT.OORG_CD
         , DT.PO_UUID
         , DT.PR_ITEM_UUID
         , DT.PR_NO
         , DT.PR_REVNO
         , DT.PR_LNO
         , DT.PR_REALUSR_ID
         , DT.RFX_ITEM_UUID
         , DT.RFX_NO
         , DT.RFX_RND
         , DT.RFX_ITEM_LNO
         , DT.RFX_BID_ITEM_UUID
         , DT.RFX_BID_NO
         , DT.RFX_BID_REVNO
         , DT.RFX_BID_LNO
         , DT.PURC_TYP_CCD
         , DT.PLT_CD
         , DT.ITEM_OORG_CD
         , DT.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN DT.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE DT.ITEM_CD
           END  AS DISP_ITEM_CD
         , DT.ITEM_CD
        , CASE WHEN 'en_US' = #{g.locale} THEN DT.ITEM_NM_EN
		            ELSE DT.ITEM_NM
		        END AS DISP_ITEM_NM
         , DT.ITEM_NM
         , DT.ITEM_NM_EN
         , DT.ITEM_SPEC
         , DT.ITEM_SPEC_DTL
         , DT.UOM_CCD
         , DT.CUR_CCD
         , (CASE WHEN DT.PO_QTY   IS NULL THEN 0 ELSE DT.PO_QTY   END) AS PO_QTY
         , (CASE WHEN DT.PO_UPRC IS NULL THEN 0 ELSE DT.PO_UPRC END) AS PO_UPRC
         , (CASE WHEN DT.PO_AMT   IS NULL THEN 0 ELSE DT.PO_AMT   END) AS PO_AMT
         , (CASE WHEN DT.CUST_RO  IS NULL THEN 0 ELSE DT.CUST_RO  END) AS CUST_RO
         , (CASE WHEN DT.CUST_AMT   IS NULL THEN 0 ELSE DT.CUST_AMT   END) AS CUST_AMT
         , DT.WH_CCD
         , DT.DLVY_PLC
         , DT.PURC_GRP_CD
         , DT.GR_PIC_ID
         , DT.CNTR_UUID
         , DT.CNTR_NO
         , DT.CNTR_REVNO
         , DT.PURC_CNTR_ITEM_UUID
         , DT.SG_CD
         , DT.CONST_ST_DT
         , DT.CONST_EXP_DT
         , DT.REQ_DLVY_DT
         , DT.DLVY_DT
         , DT.ATHG_UUID
         , (CASE WHEN DT.ASN_QTY IS NULL THEN 0 ELSE DT.ASN_QTY END) AS ASN_QTY
         , (CASE WHEN DT.GR_QTY IS NULL THEN 0 ELSE DT.GR_QTY END) AS GR_QTY
         , DT.PO_CMPLD_YN
         , DT.PO_ERY_ED_YN
         , DT.PO_ERY_ED_DTTM
         , DT.DF_YN
         , DT.PO_ITEM_STS_CCD
         , DT.VD_CD
         , DT.ERP_VD_CD
         , DT.STS
         , DT.REGR_ID
         , DT.REG_DTTM
         , DT.MODR_ID
         , DT.MOD_DTTM
         , CASE WHEN 'en_US' = #{g.locale} THEN SU.USR_NM_EN ELSE SU.USR_NM END AS PR_REALUSR_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN CU.USR_NM_EN ELSE CU.USR_NM END AS GR_PIC_NM
         , CASE WHEN 'en_US' = #{g.locale} THEN JB.PURC_GRP_NM_EN ELSE JB.PURC_GRP_NM END AS PURC_GRP_NM /*구매그룹명*/
         , PR.REGR_ID AS PR_REGR_ID
      FROM PO_ITEM DT
      LEFT OUTER JOIN USR SU
        ON SU.TEN_ID = DT.TEN_ID
       AND SU.USR_ID = DT.PR_REALUSR_ID
      LEFT OUTER JOIN USR CU
        ON CU.TEN_ID = DT.TEN_ID
       AND CU.USR_ID = DT.GR_PIC_ID
      LEFT OUTER JOIN PURC_GRP JB
        ON JB.TEN_ID       = DT.TEN_ID
       AND JB.PURC_GRP_TYP_CCD = 'PURC'
       AND JB.PURC_GRP_CD  = DT.PURC_GRP_CD 
       AND JB.CO_CD      = #{g.co_cd}
       AND JB.USE_YN       = 'Y'
      LEFT OUTER JOIN PR_ITEM PR
        ON PR.TEN_ID = DT.TEN_ID
       AND PR.PR_ITEM_UUID = DT.PR_ITEM_UUID
       AND PR.STS != 'D'
     WHERE DT.TEN_ID = #{g.tenant}
       AND DT.PO_NO  = #{p.po_no}
       AND DT.PO_REVNO = CAST(#{p.po_revno} AS INT)
       AND DT.STS   != 'D'
     ORDER BY DT.PO_NO ASC, CAST(DT.PO_LNO AS INT) ASC
    </select>
    <select id="findListComparePoItem" resultType="map">
    /* po-item.findListComparePoItem */
    SELECT PO_ITEM_LINE.PO_NO
	     , PO_ITEM_LINE.PO_LNO
	     , PO_ITEM_LINE.ITEM_CD_CRN_TYP_CCD
	     , CASE WHEN PO_ITEM_LINE.ITEM_CD_CRN_TYP_CCD = 'CDLS'
	                 THEN NULL
	            ELSE PO_ITEM_LINE.ITEM_CD
	       END                           AS DISP_ITEM_CD
	     , PO_ITEM_LINE.ITEM_CD
         , PO_ITEM_LINE.DISP_ITEM_NM
	     , PO_ITEM_LINE.ITEM_NM
	     , PO_ITEM_LINE.ITEM_SPEC
	     , PO_ITEM_LINE.ITEM_SPEC_DTL
	     , PO_ITEM_LINE.UOM_CCD
	     , PREV_PODT.PO_ITEM_UUID          AS PREV_PO_ITEM_UUID
	     , POST_PODT.PO_ITEM_UUID          AS POST_PO_ITEM_UUID
	     , PREV_PODT.PO_REVNO              AS PREV_PO_REV
	     , POST_PODT.PO_REVNO              AS POST_PO_REV
	     , PREV_PODT.DF_YN        AS PREV_DUTY_FREE_YN
	     , POST_PODT.DF_YN        AS POST_DUTY_FREE_YN
	     , PREV_PODT.PO_QTY            AS PREV_PO_QTY
	     , POST_PODT.PO_QTY            AS POST_PO_QTY
	     , PREV_PODT.PO_UPRC          AS PREV_PO_UPRC
	     , POST_PODT.PO_UPRC          AS POST_PO_UPRC
	     , PREV_PODT.PO_AMT            AS PREV_PO_AMT
	     , POST_PODT.PO_AMT            AS POST_PO_AMT
	     , PREV_PODT.REQ_DLVY_DT             AS PREV_REQ_DLVY_DT
	     , POST_PODT.REQ_DLVY_DT             AS POST_REQ_DLVY_DT
	     , PREV_PODT.CONST_ST_DT              AS PREV_CONST_ST_DT
	     , POST_PODT.CONST_ST_DT              AS POST_CONST_ST_DT
	     , PREV_PODT.CONST_EXP_DT              AS PREV_CONST_EXP_DT
	     , POST_PODT.CONST_EXP_DT              AS POST_CONST_EXP_DT
	     , PREV_PODT.DLVY_PLC            AS PREV_DLVY_PLC
	     , POST_PODT.DLVY_PLC            AS POST_DLVY_PLC
	     , PREV_PODT.PURC_GRP_CD         AS PREV_PURC_GRP_CD
	     , POST_PODT.PURC_GRP_CD         AS POST_PURC_GRP_CD
         ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN PREV_PURC_GRP.PURC_GRP_NM_EN
                	   ELSE PREV_PURC_GRP.PURC_GRP_NM
                	    END AS PREV_PURC_GRP_NM
         ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN POST_PURC_GRP.PURC_GRP_NM_EN
                	   ELSE POST_PURC_GRP.PURC_GRP_NM
                	    END AS POST_PURC_GRP_NM
         ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN PREV_PR_SUG.USR_NM_EN
                	   ELSE PREV_PR_SUG.USR_NM
                	    END AS PREV_PR_REALUSR_NM
         ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN POST_PR_SUG.USR_NM_EN
                	   ELSE POST_PR_SUG.USR_NM
                	    END AS POST_PR_REALUSR_NM
          ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN PREV_GR_CHR.USR_NM_EN
                	   ELSE PREV_GR_CHR.USR_NM
                	    END AS PREV_GR_PIC_NM
         ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN POST_GR_CHR.USR_NM_EN
                	   ELSE POST_GR_CHR.USR_NM
                	    END AS POST_GR_PIC_NM
      FROM ( SELECT DT.TEN_ID, DT.PO_NO, DT.PO_LNO, DT.ITEM_CD_CRN_TYP_CCD, DT.ITEM_CD
                    ,   CASE WHEN 'en_US' = #{g.locale}
                       THEN DT.ITEM_NM_EN
                	   ELSE DT.ITEM_NM
                	    END AS DISP_ITEM_NM
                    ,   DT.ITEM_NM, DT.ITEM_SPEC, DT.ITEM_SPEC_DTL, DT.UOM_CCD
               FROM PO_ITEM DT
              WHERE DT.TEN_ID  = #{g.tenant}
                AND DT.PO_NO   = #{p.po_no}
                AND DT.PO_REVNO IN (CAST(#{p.prev_po_revno} AS INT), CAST(#{p.post_po_revno} AS INT))
                AND DT.STS    != 'D'
              GROUP BY DT.TEN_ID, DT.PO_NO, DT.PO_LNO, DT.ITEM_CD_CRN_TYP_CCD, DT.ITEM_CD, DT.ITEM_NM_EN, DT.ITEM_NM, DT.ITEM_SPEC, DT.ITEM_SPEC_DTL, DT.UOM_CCD
           ) PO_ITEM_LINE
      LEFT OUTER JOIN PO_ITEM PREV_PODT
        ON PREV_PODT.TEN_ID  = PO_ITEM_LINE.TEN_ID
       AND PREV_PODT.PO_NO   = PO_ITEM_LINE.PO_NO
       AND PREV_PODT.PO_LNO  = PO_ITEM_LINE.PO_LNO
       AND PREV_PODT.PO_REVNO  = CAST(#{p.prev_po_revno} AS INT)
       AND PREV_PODT.STS    != 'D'
      LEFT OUTER JOIN PURC_GRP PREV_PURC_GRP
        ON PREV_PURC_GRP.TEN_ID       = PREV_PODT.TEN_ID
       AND PREV_PURC_GRP.PURC_GRP_TYP_CCD = 'PURC'
       AND PREV_PURC_GRP.PURC_GRP_CD  = PREV_PODT.PURC_GRP_CD
       AND PREV_PURC_GRP.CO_CD      = #{g.co_cd}
       AND PREV_PURC_GRP.USE_YN       = 'Y'
      LEFT OUTER JOIN USR PREV_PR_SUG
        ON PREV_PODT.TEN_ID    = PREV_PR_SUG.TEN_ID
       AND PREV_PODT.PR_REALUSR_ID = PREV_PR_SUG.USR_ID
      LEFT OUTER JOIN USR PREV_GR_CHR
        ON PREV_PODT.TEN_ID    = PREV_GR_CHR.TEN_ID
       AND PREV_PODT.GR_PIC_ID = PREV_GR_CHR.USR_ID
      LEFT OUTER JOIN PO_ITEM POST_PODT
        ON POST_PODT.TEN_ID  = PO_ITEM_LINE.TEN_ID
       AND POST_PODT.PO_NO   = PO_ITEM_LINE.PO_NO
       AND POST_PODT.PO_LNO  = PO_ITEM_LINE.PO_LNO
       AND POST_PODT.PO_REVNO  = CAST(#{p.post_po_revno} AS INT)
       AND POST_PODT.STS    != 'D'
      LEFT OUTER JOIN PURC_GRP POST_PURC_GRP
        ON POST_PURC_GRP.TEN_ID       = POST_PODT.TEN_ID
       AND POST_PURC_GRP.PURC_GRP_TYP_CCD = 'PURC'
       AND POST_PURC_GRP.PURC_GRP_CD  = POST_PODT.PURC_GRP_CD
       AND POST_PURC_GRP.CO_CD      = #{g.co_cd}
       AND POST_PURC_GRP.USE_YN       = 'Y'
      LEFT OUTER JOIN USR POST_PR_SUG
        ON POST_PODT.TEN_ID    = POST_PR_SUG.TEN_ID
       AND POST_PODT.PR_REALUSR_ID = POST_PR_SUG.USR_ID
      LEFT OUTER JOIN USR POST_GR_CHR
        ON POST_PODT.TEN_ID    = POST_GR_CHR.TEN_ID
       AND POST_PODT.GR_PIC_ID = POST_GR_CHR.USR_ID
     ORDER BY CAST(PO_ITEM_LINE.PO_LNO AS INT)
    </select>
    <select id="findPoItemCompleteByAmt" resultType="map">
	/* po-item.findPoItemCompleteByAmt: 발주품목(기성) 발주완료여부 조회(발주금액과 기성승인금액 비교) */
	SELECT B.*
	  FROM PO_ITEM A INNER JOIN (
	  		SELECT PODT.TEN_ID
	             , COALESCE((SELECT SUM(GRDT.GR_AMT)
	                           FROM GR_ITEM GRDT
	                          WHERE GRDT.TEN_ID      = PODT.TEN_ID
	                            AND GRDT.PO_NO       = PODT.PO_NO
	                            AND GRDT.PO_LNO      = PODT.PO_LNO
	                            AND GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD' /* 검수완료 */
	                        ),0) AS SUM_GR_AMT
	             , PODT.PO_ITEM_UUID
	          FROM PO_ITEM PODT
	         WHERE PODT.TEN_ID = #{g.tenant}
	           <if test="p.po_uuid != null and p.po_uuid != ''">
	           AND PODT.PO_UUID  = #{p.po_uuid}
	           </if>
	           <choose>
	             <when test="p.po_item_uuid != null and p.po_item_uuid != ''">
	           AND PODT.PO_ITEM_UUID = #{p.po_item_uuid}
	             </when>
	             <otherwise>
	               <if test="p.po_item_uuids != null and p.po_item_uuids.size() != 0">
	           AND PODT.PO_ITEM_UUID IN
	                 <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
	                   #{po_item_uuid}
	                 </foreach>
	               </if>
	             </otherwise>
	           </choose>
	           AND PODT.STS != 'D'
	  ) B ON (
	  		 A.TEN_ID     = B.TEN_ID
	     AND A.PO_ITEM_UUID = B.PO_ITEM_UUID
	  )
	</select>
	<update id="updatePoItemCompleteByAmt">
	/* po-item.updatePoItemCompleteByAmt: 발주품목(기성) 발주완료여부 수정(발주금액과 기성승인금액 비교) */
	UPDATE PO_ITEM
	   SET PO_CMPLD_YN = CASE WHEN PO_AMT <![CDATA[<=]]> #{p.sum_gr_amt}
	                                      THEN 'Y'
	                                 ELSE 'N'
	                            END
	 WHERE TEN_ID = #{g.tenant}
	   AND PO_ITEM_UUID = #{p.po_item_uuid}
	</update>
	<update id="updatePoVendor">
    /* po-item.updatePoVendor: 발주협력사 수정 */
    UPDATE PO_ITEM
       SET VD_CD     = #{p.vd_cd}
         , ERP_VD_CD = #{p.erp_vd_cd}
    WHERE  TEN_ID = #{g.tenant}
    AND    PO_UUID  = #{p.po_uuid}
    AND    VD_CD != #{p.vd_cd}
    </update>
    <update id="updatePoItem">
    /* po-item.updatePoItem: 발주품목 수정 */
    UPDATE PO_ITEM
       SET STS = 'U'
         , MOD_DTTM = #{g.now}
         , MODR_ID = #{g.username}
         , PO_NO = #{p.po_no}
         , PO_REVNO = CAST(#{p.po_revno} AS INT)
         , PO_LNO = TO_CHAR(#{p.po_lno})  , OORG_CD = #{p.oorg_cd}
         , PLT_CD = #{p.plt_cd}
         , ITEM_OORG_CD = #{p.item_oorg_cd}
         , ITEM_NM = #{p.item_nm}
         , ITEM_NM_EN = #{p.item_nm_en}
         , ITEM_SPEC = #{p.item_spec}
         , ITEM_SPEC_DTL = #{p.item_spec_dtl}
         , UOM_CCD = #{p.uom_ccd}
         , PO_QTY = CAST(#{p.po_qty} AS FLOAT  )
         , CUR_CCD = #{p.cur_ccd}
         , PO_UPRC = CAST(#{p.po_uprc} AS FLOAT  )
         , PO_AMT = CAST(#{p.po_amt} AS FLOAT  )
         , CUST_RO = CAST(#{p.cust_ro} AS FLOAT  )
         , CUST_AMT = CAST(#{p.cust_amt} AS FLOAT  )
         , WH_CCD = #{p.wh_ccd}
         , DLVY_PLC = #{p.dlvy_plc}
         , PURC_GRP_CD = #{p.purc_grp_cd}
         , GR_PIC_ID = #{p.gr_pic_id}
         , CNTR_UUID = #{p.cntr_uuid}
         , CNTR_NO = #{p.cntr_no}
         , CNTR_REVNO = CAST(#{p.cntr_revno} AS INT)
         , PURC_CNTR_ITEM_UUID = #{p.purc_cntr_item_uuid}
         , SG_CD = #{p.sg_cd}
         , CONST_ST_DT = #{p.const_st_dt}
         , CONST_EXP_DT = #{p.const_exp_dt}
         , REQ_DLVY_DT = #{p.req_dlvy_dt}
         , DLVY_DT = #{p.dlvy_dt}
         , ATHG_UUID = #{p.athg_uuid}
         , ASN_QTY = CAST(#{p.asn_qty} AS FLOAT  )
         , GR_QTY = CAST(#{p.gr_qty} AS FLOAT  )
         , DF_YN = #{p.df_yn}
         , VD_CD = #{p.vd_cd}
         , ERP_VD_CD = #{p.erp_vd_cd}
         , PR_REALUSR_ID = #{p.pr_realusr_id}
     WHERE TEN_ID = #{g.tenant}
       AND PO_ITEM_UUID = #{p.po_item_uuid}
    </update>
    <update id="deletePoItemByPoId">
    /* po-item.deletePoItemByPoId: 발주품목 삭제 */
    UPDATE PO_ITEM 
       SET STS = 'D'
     WHERE TEN_ID = #{g.tenant}
       AND PO_UUID = #{p.po_uuid}
    </update>
    <update id="deletePoItem">
    /* po-item.deletePoItem: 발주품목 삭제 */
    DELETE FROM PO_ITEM
     WHERE TEN_ID     = #{g.tenant}
       AND PO_ITEM_UUID = #{p.po_item_uuid}
    </update>
    <update id="updatePoItemCrcEnd">
    /* po.updatePoItemCrcEnd: 발주품목 발주종료(강제) */
    UPDATE PO_ITEM
       SET PO_ERY_ED_YN = 'Y'
         , PO_ERY_ED_DTTM = #{g.now}
     WHERE TEN_ID = #{g.tenant}
       AND PO_ITEM_UUID IN
           <foreach close=")" collection="p.po_item_uuids" item="poItemId" open="(" separator=",">
             #{poItemId}
           </foreach>
    </update>
    <!-- 검수등록 가능여부 체크 -->
    <select id="checkGrCreatable" resultType="map">
    /* po-item.checkGrCreatable */
    SELECT T.PO_NO
         , T.PO_LNO
         , T.CHECK_RESULT
      FROM ( SELECT HD.PO_NO             AS PO_NO
                  , DT.PO_LNO            AS PO_LNO
                  , CASE WHEN HD.PO_CMPLD_YN = 'Y' OR DT.PO_CMPLD_YN = 'Y' OR DT.PO_ERY_ED_YN = 'Y'
                              THEN 'PO_COMPLETE'
                         WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = HD.TEN_ID
                                   AND A.PO_NO       = HD.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = HD.TEN_ID AND B.PO_NO = HD.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D' 
                                   AND A.PO_CHG_TYP_CCD     = 'TRMN'
                                   AND A.PO_STS_CCD = 'TRMN'    /* 발주 진행상태(D:발주해지)*/
                              ) &gt; 0
                              THEN 'PO_TERMINATE'
                         WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = HD.TEN_ID
                                   AND A.PO_NO       = HD.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = HD.TEN_ID AND B.PO_NO = HD.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D' 
                                   AND A.PO_CHG_TYP_CCD     = 'CHG'
                                   AND A.PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG')    /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중)*/
                              ) &gt; 0
                              THEN 'PO_CHANGE_PROGRESS'
                         WHEN ( SELECT COUNT(1)
                                  FROM ASN_ITEM ARDT
                                 WHERE ARDT.TEN_ID       = #{g.tenant}
                                   AND ARDT.PO_NO        = DT.PO_NO
                                   AND ARDT.PO_LNO       = DT.PO_LNO
                                   AND ARDT.ASN_STS_CCD  = 'GR_REQ'  /* GR:납품예정*/
                                   AND ARDT.STS         != 'D'
                              ) &gt; 0
                              THEN 'HAS_ASN_ITEM'
                         WHEN ( SELECT COUNT(1)
                                  FROM GR_ITEM GRDT
                                 WHERE GRDT.TEN_ID      = #{g.tenant}
                                   AND GRDT.PO_NO       = DT.PO_NO
                                   AND GRDT.PO_LNO      = DT.PO_LNO
                                   AND GRDT.GR_ITEM_STS_CCD = 'GR_PRGSG' /* 검수등록 진행중*/
                                   AND GRDT.STS        != 'D'
                              ) &gt; 0
                              THEN 'HAS_GR_ITEM'
                         ELSE NULL
                    END                  AS CHECK_RESULT
               FROM PO HD
              INNER JOIN PO_ITEM DT
                 ON DT.TEN_ID = HD.TEN_ID
                AND DT.PO_UUID  = HD.PO_UUID
                AND DT.STS   != 'D'
              WHERE HD.TEN_ID = #{g.tenant}
             <choose>
                <when test="p.po_item_uuids != null and p.po_item_uuids.size() != 0">
                AND DT.PO_ITEM_UUID IN
                    <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
                       #{po_item_uuid}
                    </foreach>
                </when>
                <otherwise>
                    <if test="p.po_item_uuid != null and p.po_item_uuid != ''">
                AND DT.PO_ITEM_UUID = #{p.po_item_uuid}
                    </if>
                </otherwise>
            </choose>
           ) T
     WHERE T.CHECK_RESULT IS NOT NULL  ORDER BY T.PO_NO, CAST(T.PO_LNO AS INT)
    </select>
    <update id="updatePoItemCompleteByQty">
    /* po-item.updatePoItemCompleteByQty: 발주품목 발주완료여부 수정(발주수량과 입고수량 비교) */
    UPDATE PO_ITEM
       SET PO_ITEM.PO_CMPLD_YN = (
               CASE WHEN PO_QTY <![CDATA[<=]]> GR_QTY
                   OR (SELECT COUNT(1)
                        FROM PO POHD
                        WHERE POHD.TEN_ID = #{g.tenant}
                        AND POHD.PO_UUID = PO_ITEM.PO_UUID
                        AND POHD.EFCT_PO_YN = 'N') &gt; 0
                   THEN 'Y' ELSE 'N' END
           )
     WHERE PO_ITEM.TEN_ID     = #{g.tenant}
       <if test="p.po_uuid != null and p.po_uuid != ''">
       AND PO_ITEM.PO_UUID      = #{p.po_uuid}
       </if>
       <choose>
         <when test="p.po_item_uuid != null and p.po_item_uuid != ''">
       AND PO_ITEM.PO_ITEM_UUID = #{p.po_item_uuid}
         </when>
         <otherwise>
           <if test="p.po_item_uuids != null and p.po_item_uuids.size() != 0">
       AND PO_ITEM.PO_ITEM_UUID IN
             <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
             #{po_item_uuid}
             </foreach>
           </if>
         </otherwise>
       </choose>
    </update>
    <select id="findListPoItemHistory" resultType="map">
    /* po-item.findListPoItemHistory */
    SELECT T.PO_LNO
         , T.PO_REVNO
         , T.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN T.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                     THEN NULL
                ELSE T.ITEM_CD
           END  AS DISP_ITEM_CD
         , T.ITEM_CD
         , T.DISP_ITEM_NM
         , T.ITEM_SPEC
         , T.ITEM_SPEC_DTL
         , T.UOM_CCD
         , T.DF_YN
         , T.PO_QTY
         , T.PO_UPRC
         , T.PO_AMT
         , T.REQ_DLVY_DT
         , T.DLVY_DT
         , T.CONST_ST_DT
         , T.CONST_EXP_DT
         , T.DLVY_PLC
         , T.PURC_GRP_CD
         , T.PURC_GRP_NM
         , T.PR_REALUSR_ID
         , T.PR_REALUSR_NM
         , T.GR_PIC_ID
         , T.GR_PIC_NM
         , T.ITEM_MOD_STATE
      FROM ( SELECT PODT.PO_LNO
                  , PODT.PO_REVNO
                  , PODT.ITEM_CD_CRN_TYP_CCD
                  , PODT.ITEM_CD
                  , CASE WHEN 'en_US' = #{g.locale} THEN PODT.ITEM_NM_EN ELSE PODT.ITEM_NM END AS DISP_ITEM_NM
                  , PODT.ITEM_SPEC
                  , PODT.ITEM_SPEC_DTL
                  , PODT.UOM_CCD
                  , PODT.DF_YN
                  , PODT.PO_QTY
                  , PODT.PO_UPRC
                  , PODT.PO_AMT
                  , PODT.REQ_DLVY_DT
                  , PODT.DLVY_DT
                  , PODT.CONST_ST_DT
                  , PODT.CONST_EXP_DT
                  , PODT.DLVY_PLC
                  , PODT.PURC_GRP_CD
                  , CASE WHEN 'en_US' = #{g.locale} THEN JOB.PURC_GRP_NM_EN ELSE JOB.PURC_GRP_NM END AS PURC_GRP_NM
                  , PODT.PR_REALUSR_ID
                  , CASE WHEN 'en_US' = #{g.locale} THEN PR_SUG_USR.USR_NM_EN ELSE PR_SUG_USR.USR_NM END AS PR_REALUSR_NM
                  , PODT.GR_PIC_ID
                  , CASE WHEN 'en_US' = #{g.locale} THEN GR_CHR_USR.USR_NM_EN ELSE GR_CHR_USR.USR_NM END AS GR_PIC_NM
                  , ( CASE WHEN PODT.PO_REVNO = 1
                                THEN ''
                           ELSE ( CASE WHEN PREV_PODT.PO_REVNO IS NULL
                                            THEN 'NEW'
                                       WHEN PODT.PO_QTY = PREV_PODT.PO_QTY AND PODT.PO_UPRC = PREV_PODT.PO_UPRC AND PODT.PO_AMT = PREV_PODT.PO_AMT    /* 수량,단가,금액 */
                                        AND ((PODT.REQ_DLVY_DT IS NULL AND PREV_PODT.REQ_DLVY_DT IS NULL) OR PODT.REQ_DLVY_DT = PREV_PODT.REQ_DLVY_DT)                              /* 납기일자 */
                                        AND ((PODT.CONST_ST_DT IS NULL AND PREV_PODT.CONST_ST_DT IS NULL) OR PODT.CONST_ST_DT = PREV_PODT.CONST_ST_DT)                                  /* 공사 시작 일자 */
                                        AND ((PODT.CONST_EXP_DT IS NULL AND PREV_PODT.CONST_EXP_DT IS NULL) OR PODT.CONST_EXP_DT = PREV_PODT.CONST_EXP_DT)                                  /* 공사 종료 일자 */
                                        AND (((PODT.DLVY_PLC IS NULL OR PODT.DLVY_PLC = '') AND (PREV_PODT.DLVY_PLC IS NULL OR PREV_PODT.DLVY_PLC = '')) OR PODT.DLVY_PLC = PREV_PODT.DLVY_PLC)                          /* 납품(수행)장소 */
                                        AND (((PODT.PURC_GRP_CD IS NULL OR PODT.PURC_GRP_CD = '') AND (PREV_PODT.PURC_GRP_CD IS NULL OR PREV_PODT.PURC_GRP_CD = '')) OR PODT.PURC_GRP_CD = PREV_PODT.PURC_GRP_CD)              /* 구매그룹 */
                                        AND (((PODT.PR_REALUSR_ID IS NULL OR PODT.PR_REALUSR_ID = '') AND (PREV_PODT.PR_REALUSR_ID IS NULL OR PREV_PODT.PR_REALUSR_ID = '')) OR PODT.PR_REALUSR_ID = PREV_PODT.PR_REALUSR_ID)                      /* 구매의뢰자 */
                                        AND (((PODT.GR_PIC_ID IS NULL OR PODT.GR_PIC_ID = '') AND (PREV_PODT.GR_PIC_ID IS NULL OR PREV_PODT.GR_PIC_ID = '')) OR PODT.GR_PIC_ID = PREV_PODT.GR_PIC_ID)                      /* 검수담당자 */
                                        AND PODT.DF_YN = PREV_PODT.DF_YN
                                            THEN ''
                                       ELSE 'UPDATE'
                                  END )
                      END )              AS ITEM_MOD_STATE
               FROM PO_ITEM PODT
               LEFT OUTER JOIN PURC_GRP JOB               /* JOB : 직무(그룹) */
                 ON JOB.TEN_ID       = PODT.TEN_ID
                AND JOB.PURC_GRP_TYP_CCD = 'PURC'
                AND JOB.PURC_GRP_CD  = PODT.PURC_GRP_CD
                AND JOB.CO_CD      = #{g.co_cd}
                AND JOB.USE_YN       = 'Y'
               LEFT OUTER JOIN USR PR_SUG_USR        /* PR_SUG_USR : 구매요청 의뢰자 */
                 ON PODT.TEN_ID    = PR_SUG_USR.TEN_ID
                AND PODT.PR_REALUSR_ID = PR_SUG_USR.USR_ID
               LEFT OUTER JOIN USR GR_CHR_USR        /* GR_CHR_USR : 검수 담당자 */
                 ON PODT.TEN_ID    = GR_CHR_USR.TEN_ID
                AND PODT.GR_PIC_ID = GR_CHR_USR.USR_ID
               LEFT OUTER JOIN PO_ITEM PREV_PODT
                 ON PREV_PODT.TEN_ID = PODT.TEN_ID
                AND PREV_PODT.PO_NO  = PODT.PO_NO
                AND PREV_PODT.PO_LNO = PODT.PO_LNO
                AND PREV_PODT.PO_REVNO = PODT.PO_REVNO -1
                AND PREV_PODT.STS   != 'D'
              WHERE PODT.TEN_ID = #{g.tenant}
                AND PODT.PO_NO  = #{p.po_no}
                AND PODT.STS   != 'D'
              UNION ALL
             SELECT PREV_PODT.PO_LNO         AS PO_LNO
                  , PREV_PODT.PO_REVNO +1      AS PO_REVNO
                  , PREV_PODT.ITEM_CD_CRN_TYP_CCD  AS ITEM_CD_CRN_TYP_CCD
                  , PREV_PODT.ITEM_CD        AS ITEM_CD
                  , CASE WHEN 'en_US' = #{g.locale} THEN PREV_PODT.ITEM_NM_EN ELSE PREV_PODT.ITEM_NM END AS ITEM_NM
                  , PREV_PODT.ITEM_SPEC           AS ITEM_SPEC
                  , PREV_PODT.ITEM_SPEC_DTL       AS ITEM_SPEC_DTL
                  , PREV_PODT.UOM_CCD        AS UOM_CCD
                  , NULL                     AS DF_YN
                  , NULL                     AS PO_QTY
                  , NULL                     AS PO_UPRC
                  , NULL                     AS PO_AMT
                  , NULL                     AS REQ_DLVY_DT
                  , NULL                     AS DLVY_DT
                  , NULL                     AS CONST_ST_DT
                  , NULL                     AS CONST_EXP_DT
                  , NULL                     AS DLVY_PLC
                  , NULL                     AS PURC_GRP_CD
                  , NULL                     AS PURC_GRP_NM
                  , NULL                     AS PR_REALUSR_ID
                  , NULL                     AS PR_REALUSR_NM
                  , NULL                     AS GR_PIC_ID
                  , NULL                     AS GR_PIC_NM
                  , 'DELETE'                 AS ITEM_MOD_STATE
               FROM PO_ITEM PREV_PODT
              INNER JOIN PO POHD
                 ON POHD.TEN_ID = PREV_PODT.TEN_ID
                AND POHD.PO_NO  = PREV_PODT.PO_NO
                AND POHD.PO_REVNO = PREV_PODT.PO_REVNO +1
                AND POHD.STS   != 'D'
               LEFT OUTER JOIN PO_ITEM DELETED_PODT
                 ON DELETED_PODT.TEN_ID = POHD.TEN_ID
                AND DELETED_PODT.PO_UUID  = POHD.PO_UUID
                AND DELETED_PODT.PO_LNO = PREV_PODT.PO_LNO
              WHERE PREV_PODT.TEN_ID    = #{g.tenant}
                AND PREV_PODT.PO_NO     = #{p.po_no}
                AND PREV_PODT.STS      != 'D'
                AND (DELETED_PODT.PO_ITEM_UUID IS NULL OR DELETED_PODT.PO_ITEM_UUID = '')
           ) T
      ORDER BY CAST(T.PO_LNO AS INT), T.PO_REVNO
    </select>
    <select id="findListPoByRfxItemIds" resultType="map">
    /* po-item.findListPoByRfxItemIds */
    SELECT PO_ITEM_UUID
    FROM PO_ITEM
    WHERE TEN_ID = #{g.tenant}
    AND RFX_ITEM_UUID  IN
        <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
           #{rfx_item_uuid}
       </foreach>
    </select>
    <!-- 선급금요청을 위한 발주품목 목록 조회 -->
    <select id="searchAdvancePaymentItemByPoUuid" resultType="map">
    /* po-item.searchAdvancePaymentItemByPoUuid: 선급금요청을 위한 발주품목 목록 조회 */
       SELECT A.TEN_ID           /*시스템 아이디 */
             ,A.PO_ITEM_UUID       /*발주 품목 아이디 */
             ,A.PO_NO            /*발주 번호 */
             ,A.PO_REVNO           /*발주 차수 */
             ,A.PO_LNO           /*발주 항번 */
             ,A.OORG_CD      /*운영 조직 코드 */
             ,A.PO_UUID            /*발주 아이디 */
             ,A.PR_ITEM_UUID       /*구매요청 품목 아이디 */
             ,A.PR_NO            /*구매요청 번호 */
             ,A.PR_REVNO           /*구매요청 차수 */
             ,A.PR_LNO           /*구매요청 항번 */
             ,A.PR_REALUSR_ID        /*구매요청 의뢰 아이디 */
             ,A.RFX_ITEM_UUID      /*RFX 품목 아이디 */
             ,A.RFX_NO           /*RFX 번호 */
             ,A.RFX_RND          /*RFX 차수 */
             ,A.RFX_ITEM_LNO     /*RFX 품목 항번 */
             ,A.RFX_BID_ITEM_UUID  /*RFX 견적 품목 아이디 */
             ,A.RFX_BID_NO           /*견적 번호 */
             ,A.RFX_BID_REVNO          /*견적 차수 */
             ,A.RFX_BID_LNO     /*견적 품목 항번 */
             ,A.PURC_TYP_CCD         /*구매 유형 */
             ,A.PLT_CD           /*공장 코드 */
             ,A.ITEM_OORG_CD           /*품목운영조직 */
             ,A.ITEM_CD_CRN_TYP_CCD    /*구매품목유형 */
             ,CASE WHEN A.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                        THEN NULL
                   ELSE A.ITEM_CD
              END  AS DISP_ITEM_CD
             ,A.ITEM_CD          /*품목 코드 */
             ,A.ITEM_NM          /*품목 명 */
             ,A.ITEM_NM_EN       /*품목 영문 명 */
             ,CASE WHEN #{g.locale} = 'en_US' THEN A.ITEM_NM_EN
                   ELSE A.ITEM_NM
               END DISP_ITEM_NM
             ,A.ITEM_SPEC             /*규격 */
             ,A.ITEM_SPEC_DTL         /*상세규격 */
             ,A.UOM_CCD          /*UOM 코드 */
             ,A.PO_QTY         /*품목 수량 */
             ,A.CUR_CCD              /*통화 */
             ,A.PO_UPRC       /*품목 단가 */
             ,A.PO_AMT         /*품목 금액 */
             ,A.CUST_RO        /*관세 율 */
             ,A.CUST_AMT         /*관세 금액 */
             ,A.WH_CCD            /*창고 코드 */
             ,A.DLVY_PLC         /*납품요청 장소 */
             ,A.PURC_GRP_CD      /*구매 그룹 코드 */
             ,CASE WHEN 'en_US' = #{g.locale} THEN JOB.PURC_GRP_NM_EN ELSE JOB.PURC_GRP_NM END AS DISP_PURC_GRP_NM
             ,A.GR_PIC_ID        /*입고 담당자 아이디 */
             ,A.CNTR_UUID
             ,A.CNTR_NO
             ,A.CNTR_REVNO
             ,A.PURC_CNTR_ITEM_UUID
             ,A.SG_CD            /*SG 코드 */
             ,A.REQ_DLVY_DT          /*납품요청 일 */
             ,A.DLVY_DT
             ,A.ATHG_UUID           /*첨부 번호 */
             ,A.ASN_QTY           /*납품예정 수량 */
             ,A.GR_QTY           /*입고 수량 */
             ,A.PO_CMPLD_YN       /*발주 완료 여부 */
             ,A.PO_ERY_ED_YN    /*발주 강제 종료 여부 */
             ,A.PO_ERY_ED_DTTM    /*발주 강제 종료 일시 */
             ,A.DF_YN     /*면세 여부 */
             ,A.STS              /*상태 */
             ,A.REGR_ID           /*등록자 아이디 */
             ,A.REG_DTTM           /*등록 일시 */
             ,A.MODR_ID           /*수정자 아이디 */
             ,A.MOD_DTTM           /*수정 일시 */
             ,A.PO_ITEM_STS_CCD      /*발주 진행 상태 */
             ,A.VD_CD            /*협력사 코드*/
             ,A.ERP_VD_CD        /*ERP 협력사 코드*/
         FROM PO_ITEM A
       LEFT OUTER JOIN PURC_GRP JOB
           ON JOB.TEN_ID       = A.TEN_ID
          AND JOB.PURC_GRP_TYP_CCD = 'PURC'
          AND JOB.PURC_GRP_CD  = A.PURC_GRP_CD
          AND JOB.CO_CD      = #{g.comp_cd}
          AND JOB.USE_YN       = 'Y'
        WHERE A.TEN_ID = #{g.tenant}
          AND A.PO_UUID  = #{p.po_uuid}
     ORDER BY A.PO_NO
             ,A.PO_REVNO
             ,CAST(A.PO_LNO AS INT)
    </select>
    <update id="updateInitAsnQuantityOfPoItem">
    /* po-item.updateInitAsnQuantityOfPoItem: 발주품목의 납품예정수량 초기화 */
    UPDATE PO_ITEM
       SET PO_ITEM.ASN_QTY = COALESCE( (SELECT SUM(ASN_QTY)
                                     FROM ASN_ITEM ARDT
                                     WHERE ARDT.TEN_ID = PO_ITEM.TEN_ID
                                       AND ARDT.PO_ITEM_UUID = PO_ITEM.PO_ITEM_UUID
                                       AND ARDT.ASN_STS_CCD IN ('GR_REQ', 'GR_PRGSG')
                                       AND ARDT.ASN_UUID != #{p.asn_uuid}
                                       AND ARDT.STS != 'D'
                                     GROUP BY ARDT.PO_ITEM_UUID) , 0) /* 요청상태인 수량 초기화 */
     WHERE PO_ITEM.TEN_ID = #{g.tenant}
       AND PO_ITEM.PO_ITEM_UUID IN (
                               SELECT PO_ITEM_UUID
                                 FROM ASN_ITEM
                                WHERE TEN_ID = #{g.tenant}
                                  AND ASN_UUID = #{p.asn_uuid}
                                  AND STS != 'D'
                           )
    </update>
    <!-- 검수등록 수량 검사 (발주 잔량보다 클 경우 에러) -->
    <select id="checkGrQuantity" resultType="map">
    /* po-item.checkGrQuantity : 검수수량 확인*/
    SELECT PODT.PO_NO                               AS PO_NO
         , PODT.PO_LNO                              AS PO_LNO
         , PODT.PO_ITEM_UUID                          AS PO_ITEM_UUID
         , CASE WHEN PODT.PO_QTY IS NULL
                     THEN 0
                ELSE PODT.PO_QTY
           END                                      AS PO_QTY
         , CASE WHEN PODT.GR_QTY IS NULL
                     THEN 0
                ELSE PODT.GR_QTY
           END                                      AS GR_COMP_QTY
      FROM PO_ITEM PODT
     WHERE PODT.TEN_ID = #{g.tenant}
       AND PODT.PO_ITEM_UUID IN
       <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
           #{po_item_uuid}
       </foreach>
    </select>
    <select id="findGrItemByPoItemUuid" resultType="map">
    /* po-item.findGrItemByPoItemUuid:  발주품목으로 입고품목 조회  */
    SELECT PODT.OORG_CD
         , POHD.PYMTMETH_CCD
         , PODT.PLT_CD
         , PODT.ITEM_OORG_CD
         , PODT.WH_CCD
         , PODT.VD_CD
         , PODT.PURC_TYP_CCD
         <bind name="nowDate" value="g.getFormatNow(g.now, 'yyyyMMdd')"/>
         , #{nowDate}                    AS GR_DT
         , 'CRNG'                           AS GR_STS_CCD
         , PODT.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN PODT.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE PODT.ITEM_CD
           END  AS DISP_ITEM_CD
         , PODT.ITEM_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN PODT.ITEM_NM_EN
					ELSE PODT.ITEM_NM
				END AS DISP_ITEM_NM
         , PODT.ITEM_NM
         , PODT.ITEM_NM_EN
         , PODT.ITEM_SPEC
         , PODT.ITEM_SPEC_DTL
         , PODT.UOM_CCD
         , PODT.PURC_GRP_CD
         , CASE WHEN 'en_US' = #{g.locale} THEN JOB.PURC_GRP_NM_EN ELSE JOB.PURC_GRP_NM END AS DISP_PURC_GRP_NM
         , PODT.CUR_CCD
         , PODT.PO_QTY
         , PODT.PO_UPRC
         , PODT.PO_AMT
         , PODT.GR_QTY                   AS PO_GR_QTY
         ,  GETPRECFORMAT(#{g.tenant}, 'amt', PODT.GR_QTY * PODT.PO_UPRC, PODT.CUR_CCD) AS PO_GR_AMT
         , 0                             AS GR_QTY
         , PODT.PR_NO
         , PODT.PR_LNO
         , PODT.PR_ITEM_UUID
         , PODT.PO_NO
         , PODT.PO_LNO
         , PODT.PO_ITEM_UUID
         , 0                             AS RET_QTY
         , 0                             AS CNCL_QTY
         , PODT.REQ_DLVY_DT
         , PODT.DLVY_DT
         , PODT.DLVY_PLC
      FROM PO_ITEM PODT
     INNER JOIN PO POHD
        ON POHD.TEN_ID = PODT.TEN_ID
       AND POHD.PO_UUID  = PODT.PO_UUID
      LEFT OUTER JOIN PURC_GRP JOB               /* JOB : 직무(그룹) */
        ON JOB.TEN_ID       = PODT.TEN_ID
       AND JOB.PURC_GRP_TYP_CCD = 'PURC'
       AND JOB.PURC_GRP_CD  = PODT.PURC_GRP_CD
       AND JOB.CO_CD      = #{g.comp_cd}
       AND JOB.USE_YN       = 'Y'
     WHERE PODT.TEN_ID      = #{g.tenant}
       AND PODT.PO_ITEM_UUID IN
       <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
           #{po_item_uuid}
       </foreach>
     ORDER BY PODT.PO_NO, CAST(PODT.PO_LNO AS INT)
    </select>
	<select id="findPoEvalSetInfoByPoItemUuid" resultType="map">
		SELECT  PO.GE_SUBJ_YN
		     , PO_GE_MAPG.GE_UUID AS PO_GE_UUID
		  FROM PO_ITEM
		 INNER JOIN PO
		    ON PO.TEN_ID = PO_ITEM.TEN_ID
		   AND PO.PO_UUID = PO_ITEM.PO_UUID
		 INNER JOIN PO_GE_MAPG
		    ON PO_GE_MAPG.TEN_ID = PO.TEN_ID
		   AND PO_GE_MAPG.PO_UUID = PO.PO_UUID
		 WHERE PO_ITEM.TEN_ID = #{g.tenant}
		   AND PO_ITEM.PO_ITEM_UUID IN
		   <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
		       #{po_item_uuid}
		   </foreach>
		   AND PO.GE_SUBJ_YN = 'Y'
		   AND ROWNUM = 1 </select>
    <update id="updatePoItemAsnQuantity">
        /* po-item.updatePoItemAsnQuantity: 발주품목의 ASN 수량 수정 */
        UPDATE PO_ITEM
        SET ASN_QTY = COALESCE(#{p.sum_asn_qty}, 0)  /* 요청/진행중 상태인 ASN 수량 초기화  */
          , MODR_ID = #{g.username}
          , MOD_DTTM = #{g.now}
        WHERE TEN_ID = #{g.tenant}
          AND PO_ITEM_UUID = #{p.po_item_uuid}
    </update>
    <update id="updatePoItemGrQuantity">
        /* po-item.updatePoItemGrQuantity: 발주품목의 상위 차수 입고수량 수정 */
        UPDATE PO_ITEM
        SET PO_ITEM.GR_QTY = (
        SELECT SUM(
            CASE
                WHEN GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
                    THEN COALESCE(GRDT.GR_QTY, 0)
                ELSE 0
            END
        ) AS TOTAL_GR_QTY
        FROM GR_ITEM GRDT
        INNER JOIN PO_ITEM B
            ON GRDT.PO_ITEM_UUID = B.PO_ITEM_UUID
        WHERE B.TEN_ID = #{g.tenant}
            AND GRDT.TEN_ID = #{g.tenant}
            AND B.PO_NO = PO_ITEM.PO_NO
            AND B.PO_LNO = PO_ITEM.PO_LNO
            AND B.PO_REVNO <![CDATA[<=]]> (
                SELECT C.PO_REVNO
                FROM PO_ITEM C
                WHERE C.TEN_ID = #{g.tenant}
                AND C.PO_ITEM_UUID = PO_ITEM.PO_ITEM_UUID
            )
            AND B.STS != 'D'
            AND GRDT.STS != 'D'
        GROUP BY B.PO_NO, B.PO_LNO
        )
        WHERE PO_ITEM.PO_ITEM_UUID IN (
            SELECT B.PO_ITEM_UUID
            FROM PO_ITEM B
            INNER JOIN (
                SELECT A.PO_NO, A.PO_LNO, CAST(A.PO_REVNO AS INT) AS PO_REVNO
                FROM PO_ITEM A
                WHERE A.TEN_ID = #{g.tenant}
                AND A.PO_ITEM_UUID IN
                <foreach close=")" collection="p.po_item_uuids" item="po_item_uuid" open="(" separator=",">
                    #{po_item_uuid}
                </foreach>
                AND A.STS != 'D'
            ) A
            ON B.PO_NO = A.PO_NO
                AND B.PO_LNO = A.PO_LNO
                AND CAST(B.PO_REVNO AS INT) &gt;= A.PO_REVNO
            WHERE B.TEN_ID = #{g.tenant}
            AND B.STS != 'D'
        )
        AND PO_ITEM.STS != 'D'
    </update>
    <select id="searchProgressPaymentItemByPo" resultType="map">
    /* po-item.searchProgressPaymentItemByPo: 기성 품목 정보 발주정보로 조회 */
        SELECT POITEM.TEN_ID
             , POITEM.PO_ITEM_UUID
             , POITEM.PO_NO
             , POITEM.PO_REVNO
             , POITEM.PO_LNO
             , POITEM.PO_UUID
             , POITEM.OORG_CD
             , POITEM.VD_CD
             , POITEM.PLT_CD
             , POITEM.ITEM_OORG_CD
             , POITEM.ITEM_CD_CRN_TYP_CCD
             , CASE WHEN POITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'
                    THEN NULL
                    ELSE POITEM.ITEM_CD
                END AS DISP_ITEM_CD
             , POITEM.ITEM_CD
             , POITEM.ITEM_NM
             , POITEM.ITEM_NM_EN
             , CASE WHEN 'en_US' = #{g.locale} THEN POITEM.ITEM_NM_EN
                    ELSE POITEM.ITEM_NM
                END AS DISP_ITEM_NM
             , POITEM.ITEM_SPEC
             , POITEM.ITEM_SPEC_DTL
             , POITEM.UOM_CCD
             , POITEM.PO_QTY
             , POITEM.PO_UPRC
             , POITEM.PO_AMT
             , POITEM.PR_NO
             , POITEM.PR_LNO
             , POITEM.PR_ITEM_UUID
             , POITEM.DLVY_DT
             , POITEM.CUR_CCD
             , POITEM.PURC_TYP_CCD
             , POITEM.PURC_GRP_CD
             , POITEM.CONST_EXP_DT
             , (CASE WHEN PO.DFRM_RO IS NULL THEN 0 ELSE PO.DFRM_RO END) AS DFRM_RO
             , GRITEMINFO.GR_TTL_AMT
             , POITEM.PO_AMT - GRITEMINFO.GR_TTL_AMT AS REMAIN_AMT
          FROM PO_ITEM POITEM
         INNER JOIN PO PO
            ON PO.TEN_ID = POITEM.TEN_ID
           AND PO.PO_UUID = POITEM.PO_UUID
           AND PO.STS != 'D'
          LEFT OUTER JOIN (SELECT GRDT.TEN_ID
                                , GRDT.PO_ITEM_UUID
                                , COALESCE(SUM(GRDT.GR_AMT), 0) AS GR_TTL_AMT
                             FROM GR_ITEM GRDT
                            INNER JOIN GR GRHD
                               ON GRHD.TEN_ID  = GRDT.TEN_ID
                              AND GRHD.GR_UUID  = GRDT.GR_UUID
                              AND GRHD.GR_STS_CCD = 'PP_CMPLD'
                              AND GRHD.STS != 'D'
                              AND GRDT.STS != 'D'
                            GROUP BY GRDT.TEN_ID
                                , GRDT.PO_ITEM_UUID) GRITEMINFO
            ON GRITEMINFO.TEN_ID = POITEM.TEN_ID
           AND GRITEMINFO.PO_ITEM_UUID = POITEM.PO_ITEM_UUID
         WHERE POITEM.TEN_ID = #{g.tenant}
           AND POITEM.PO_UUID  = #{p.po_uuid}
           AND POITEM.STS != 'D'
    </select>
</mapper>
