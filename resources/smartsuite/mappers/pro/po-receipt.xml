<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="po-receipt">
	<insert id="receiptReqPo">
		INSERT INTO PO_REQ_RCPT (
			TEN_ID
			, PO_REQ_RCPT_UUID
			, PO_REQ_RCPT_NO
			, OORG_CD
			, REQ_DOC_TYP_CCD
			, REQ_DT
			, RCPT_STS_CCD
			, PRGS_STS_CCD
			, REQ_TIT
			, PO_REQ_UUID
			, PO_REQ_NO
			, PO_CND_UUID
			, PURC_TYP_CCD
			, REQ_PIC_ID
			, PO_PIC_ID
			, PURC_GRP_CD
			, PO_TYP_CCD
			, PO_CHG_TYP_CCD
			, VD_CD
			, STS
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.po_req_rcpt_uuid}
			, #{p.po_req_rcpt_no}
			, #{p.oorg_cd}
			, #{p.req_doc_typ_ccd}
			, #{p.req_dt}
			, #{p.rcpt_sts_ccd}
			, #{p.prgs_sts_ccd}
			, #{p.req_tit}
			, #{p.po_req_uuid}
			, #{p.po_req_no}
			, #{p.po_cnd_uuid}
			, #{p.purc_typ_ccd}
			, #{p.req_pic_id}
			, #{p.po_pic_id}
			, #{p.purc_grp_cd}
			, #{p.po_typ_ccd}
			, #{p.po_chg_typ_ccd}
			, #{p.vd_cd}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="receiptReq">
		UPDATE PO_REQ_RCPT
		   SET RCPT_STS_CCD = 'RCPT'
		     , RCPT_DT = #{g.now}
		     , PO_PIC_ID = #{p.po_pic_id}
		     , MODR_ID   = #{g.username}
		     , MOD_DTTM  = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT.PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<select id="findListPoReceipt" resultType="map">
		SELECT PO_REQ_RCPT.PO_REQ_RCPT_UUID
		     , PO_REQ_RCPT.PO_REQ_RCPT_NO
		     , PO_REQ_RCPT.OORG_CD
		     , PO_REQ_RCPT.REQ_DOC_TYP_CCD
		     , PO_REQ_RCPT.REQ_DT
		     , PO_REQ_RCPT.REQ_RET_RSN
		     , PO_REQ_RCPT.RCPT_STS_CCD
		     , PO_REQ_RCPT.RCPT_DT
		     , PO_REQ_RCPT.PRGS_STS_CCD
		     , PO_REQ_RCPT.REQ_TIT
		     , PO_REQ_RCPT.PO_REQ_UUID
		     , PO_REQ_RCPT.PO_CND_UUID
		     , PO_REQ_RCPT.PURC_TYP_CCD
		     , PO_REQ_RCPT.REQ_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN REQ_USR.USR_NM_EN
		            ELSE REQ_USR.USR_NM
		        END AS DISP_REQ_PIC_NM
		     , PO_REQ_RCPT.PO_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN PO_USR.USR_NM_EN
		            ELSE PO_USR.USR_NM
		        END AS DISP_PO_PIC_NM
		     , PO_REQ_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS DISP_PURC_GRP_NM
		     , PO_REQ_RCPT.PO_TYP_CCD
		     , PO_REQ_RCPT.PO_CHG_TYP_CCD
		     , PO_REQ_RCPT.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		  FROM PO_REQ_RCPT
		  LEFT OUTER JOIN USR REQ_USR
		    ON REQ_USR.TEN_ID = PO_REQ_RCPT.TEN_ID
		   AND REQ_USR.USR_ID = PO_REQ_RCPT.REQ_PIC_ID
		  LEFT OUTER JOIN USR PO_USR
		    ON PO_USR.TEN_ID = PO_REQ_RCPT.TEN_ID
		   AND PO_USR.USR_ID = PO_REQ_RCPT.PO_PIC_ID
		 INNER JOIN PURC_GRP
		    ON PURC_GRP.TEN_ID = PO_REQ_RCPT.TEN_ID
		   AND PURC_GRP.CO_CD = #{g.comp_cd}
		   AND PURC_GRP.PURC_GRP_CD = PO_REQ_RCPT.PURC_GRP_CD
		 INNER JOIN VD
		    ON VD.TEN_ID = PO_REQ_RCPT.TEN_ID
		   AND VD.VD_CD = PO_REQ_RCPT.VD_CD
		 WHERE PO_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT.STS != 'D'
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND PO_REQ_RCPT.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_req_dt != null">
		       AND PO_REQ_RCPT.REQ_DT &gt;= #{p.from_req_dt}
		   </if>
		   <if test="p.to_req_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_req_dt,1)"/>
		       AND PO_REQ_RCPT.REQ_DT <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.purc_typ_ccd != null">
		       AND PO_REQ_RCPT.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <if test="p.rcpt_sts_ccds != null and p.rcpt_sts_ccds.size() != 0">
		       AND PO_REQ_RCPT.RCPT_STS_CCD IN
		       <foreach close=")" collection="p.rcpt_sts_ccds" item="rcpt_sts_ccd" open="(" separator=",">
		           #{rcpt_sts_ccd}
		       </foreach>
		   </if>
		   <if test="p.prgs_sts_ccds != null and p.prgs_sts_ccds.size() != 0">
		       AND PO_REQ_RCPT.PRGS_STS_CCD IN
		       <foreach close=")" collection="p.prgs_sts_ccds" item="prgs_sts_ccd" open="(" separator=",">
		           #{prgs_sts_ccd}
		       </foreach>
		   </if>
		   <if test="p.req_tit != null and p.req_tit != ''">
		       <bind name="titPattern" value="'%' + p.req_tit + '%'"/>
		       AND UPPER(PO_REQ_RCPT.REQ_TIT) LIKE UPPER(#{titPattern})
		   </if>
		   <if test="p.req_pic_id != null and p.req_pic_id != ''">
		       AND PO_REQ_RCPT.REQ_PIC_ID = #{p.req_pic_id}
		   </if>
		   <if test="p.req_pic_nm != null and p.req_pic_nm != ''">
		       <bind name="namePattern" value="'%' + p.req_pic_nm + '%'"/>
		       AND (REQ_USR.USR_NM LIKE #{namePattern} OR REQ_USR.USR_NM_EN LIKE #{namePattern})
		   </if>
		   <if test="p.po_pic_id != null and p.po_pic_id != ''">
		       AND (PO_REQ_RCPT.PO_PIC_ID = #{p.po_pic_id} OR PO_REQ_RCPT.PO_PIC_ID IS NULL OR PO_REQ_RCPT.PO_PIC_ID = '')
		   </if>
		   <if test="p.po_pic_nm != null and p.po_pic_nm != ''">
		       <bind name="poPicNamePattern" value="'%' + p.po_pic_nm + '%'"/>
		       AND (PO_USR.USR_NM LIKE #{poPicNamePattern} OR PO_USR.USR_NM_EN LIKE #{poPicNamePattern} OR PO_REQ_RCPT.PO_PIC_ID IS NULL OR PO_REQ_RCPT.PO_PIC_ID = '')
		   </if>
		   <if test="p.purc_grp_cds != null and p.purc_grp_cds.size() != 0">
		       AND PO_REQ_RCPT.PURC_GRP_CD IN
		       <foreach close=")" collection="p.purc_grp_cds" item="purc_grp_cd" open="(" separator=",">
		           #{purc_grp_cd}
		       </foreach>
		   </if>
		   ORDER BY PO_REQ_RCPT.PO_REQ_RCPT_NO DESC
	</select>
	<select id="findPoReceiptByUuid" resultType="map">
		SELECT PO_REQ_RCPT.PO_REQ_RCPT_UUID
		     , PO_REQ_RCPT.OORG_CD
		     , PO_REQ_RCPT.PURC_TYP_CCD
		     , PO_REQ_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS PURC_GRP_NM
		     , PO_REQ_RCPT.PO_TYP_CCD
		     , PO_REQ_RCPT.PO_CHG_TYP_CCD
		     , PO_REQ_RCPT.VD_CD
		     , VD.ERP_VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS VD_NM
		     , PO_REQ_RCPT.REQ_TIT
		     , PO_REQ_RCPT.REQ_DOC_TYP_CCD
		     , PO_REQ_RCPT.RCPT_STS_CCD
		     , PO_REQ_RCPT.PRGS_STS_CCD
		     , PO_REQ_RCPT.PO_REQ_UUID
		     , PO_REQ_RCPT.PO_REQ_NO
		     , PO_REQ_RCPT.PO_CND_UUID
		  FROM PO_REQ_RCPT
		 INNER JOIN VD
		    ON VD.TEN_ID = PO_REQ_RCPT.TEN_ID
		   AND VD.VD_CD = PO_REQ_RCPT.VD_CD
		 INNER JOIN PURC_GRP
		    ON PURC_GRP.TEN_ID = PO_REQ_RCPT.TEN_ID
		   <choose>
		       <when test="p.co_cd != null and p.co_cd != ''">
		           AND PURC_GRP.CO_CD = #{p.co_cd}
		       </when>
		       <otherwise>
		           AND PURC_GRP.CO_CD = #{g.co_cd}
		       </otherwise>
		   </choose>
		   AND PURC_GRP.PURC_GRP_CD = PO_REQ_RCPT.PURC_GRP_CD
		 WHERE PO_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT.PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</select>
	<update id="returnReq">
		UPDATE PO_REQ_RCPT
		   SET REQ_RET_RSN = #{p.req_ret_rsn}
		     , RCPT_STS_CCD = 'RET'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<update id="changePurcGrp">
		UPDATE PO_REQ_RCPT
		   SET PURC_GRP_CD = #{p.purc_grp_cd}
		     , PO_PIC_ID = NULL
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_RCPT_UUID = #{p.po_req_rcpt_uuid}
	</update>
	<insert id="insertReceiptReqPoByUprcItem">
		INSERT INTO PO_REQ_ITEM_RCPT (
			TEN_ID
			, PO_REQ_ITEM_RCPT_UUID
			, OORG_CD
			, REQ_DOC_TYP_CCD
			, REQ_DT
			, REQ_RET_RSN
			, RCPT_STS_CCD
			, RCPT_DT
			, PRGS_STS_CCD
			, REQ_TIT
			, PO_REQ_UUID
			, PURC_TYP_CCD
			, PLT_CD
			, ITEM_OORG_CD
			, ITEM_CD
			, ITEM_NM
			, ITEM_NM_EN
			, ITEM_SPEC
			, ITEM_SPEC_DTL
			, ITEM_CD_CRN_TYP_CCD
			, QTA_YN
			, TL_YN
			, UOM_CCD
			, CUR_CCD
			, REQ_QTY
			, REQ_UPRC
			, REQ_AMT
			, WH_CCD
			, REQ_DLVY_DT
			, CONST_ST_DT
			, CONST_EXP_DT
			, DLVY_PLC
			, REQ_PIC_ID
			, PO_PIC_ID
			, PURC_GRP_CD
			, GR_PIC_ID
			, PR_ITEM_UUID
			, PR_UUID
			, PR_NO
			, PR_REVNO
			, PR_LNO
			, STS
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			  #{g.tenant}
			, #{p.po_req_item_rcpt_uuid}
			, #{p.oorg_cd}
			, #{p.req_doc_typ_ccd}
			, #{p.req_dt}
			, #{p.req_ret_rsn}
			, #{p.rcpt_sts_ccd}
			, #{p.rcpt_dt}
			, #{p.prgs_sts_ccd}
			, #{p.req_tit}
			, #{p.po_req_uuid}
			, #{p.purc_typ_ccd}
			, #{p.plt_cd}
			, #{p.item_oorg_cd}
			, #{p.item_cd}
			, #{p.item_nm}
			, #{p.item_nm_en}
			, #{p.item_spec}
			, #{p.item_spec_dtl}
			, #{p.item_cd_crn_typ_ccd}
			, #{p.qta_yn}
			, #{p.tl_yn}
			, #{p.uom_ccd}
			, #{p.cur_ccd}
			, CAST(#{p.req_qty} AS FLOAT  )
			, CAST(#{p.req_uprc} AS FLOAT  )
			, CAST(#{p.req_amt} AS FLOAT  )
			, #{p.wh_ccd}
			, #{p.req_dlvy_dt}
			, #{p.const_st_dt}
			, #{p.const_exp_dt}
			, #{p.dlvy_plc}
			, #{p.req_pic_id}
			, #{p.po_pic_id}
			, #{p.purc_grp_cd}
			, #{p.gr_pic_id}
			, #{p.pr_item_uuid}
			, #{p.pr_uuid}
			, #{p.pr_no}
			, CAST(#{p.pr_revno} AS FLOAT  )
			, #{p.pr_lno}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="receiptReqUprcItem">
		UPDATE PO_REQ_ITEM_RCPT
		   SET RCPT_STS_CCD = 'RCPT'
		     , RCPT_DT = #{g.now}
		     , PO_PIC_ID = #{p.po_pic_id}
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<update id="updateUprccntrInfoByPoReqItemRcpt">
		UPDATE PO_REQ_ITEM_RCPT
		   SET CNTR_UUID           = #{p.cntr_uuid}
		     , CNTR_NO             = #{p.cntr_no}
		     , CNTR_REVNO          = CAST(#{p.cntr_revno} AS FLOAT  )
		     , PURC_CNTR_UUID      = #{p.purc_cntr_uuid}
		     , PURC_CNTR_INFO_UUID = #{p.purc_cntr_info_uuid}
		     , PURC_CNTR_ITEM_UUID = #{p.purc_cntr_item_uuid}
		     , PURC_CNTR_ITEM_LNO  = #{p.purc_cntr_item_lno}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<insert id="insertPoReqItemRcptQtaAloc">
		INSERT INTO PO_REQ_ITEM_RCPT_QTA_ALOC (
			TEN_ID
			, PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
			, PO_REQ_ITEM_RCPT_UUID
			, PRGS_STS_CCD
			, QTARATE
			, ALOC_QTY
			, CNTR_UUID
			, CNTR_NO
			, CNTR_REVNO
			, PURC_CNTR_UUID
			, PURC_CNTR_INFO_UUID
			, PURC_CNTR_ITEM_UUID
			, PURC_CNTR_ITEM_LNO
			, QTA_ITEM_UUID
			, QTA_NO
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.po_req_item_rcpt_qta_aloc_uuid}
			, #{p.po_req_item_rcpt_uuid}
			, 'WTG'
			, CAST(#{p.qtarate} AS FLOAT  )
			, CAST(#{p.aloc_qty} AS FLOAT  )
			, #{p.cntr_uuid}
			, #{p.cntr_no}
			, CAST(#{p.cntr_revno} AS INT)
			, #{p.purc_cntr_uuid}
			, #{p.purc_cntr_info_uuid}
			, #{p.purc_cntr_item_uuid}
			, #{p.purc_cntr_item_lno}
			, #{p.qta_item_uuid}
			, #{p.qta_no}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<select id="findListPoReceiptItemByUprcItem" resultType="map">
		SELECT PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		     , PO_REQ_ITEM_RCPT.OORG_CD
		     , PO_REQ_ITEM_RCPT.REQ_DOC_TYP_CCD
		     , PO_REQ_ITEM_RCPT.REQ_DT
		     , PO_REQ_ITEM_RCPT.REQ_RET_RSN
		     , PO_REQ_ITEM_RCPT.RCPT_STS_CCD
		     , PO_REQ_ITEM_RCPT.RCPT_DT
		     , PO_REQ_ITEM_RCPT.PRGS_STS_CCD
		     , PO_REQ_ITEM_RCPT.REQ_TIT
		     , PO_REQ_ITEM_RCPT.PO_REQ_UUID
		     , PO_REQ_ITEM_RCPT.PURC_TYP_CCD
		     , PO_REQ_ITEM_RCPT.PLT_CD
		     , PO_REQ_ITEM_RCPT.ITEM_OORG_CD
		     , PO_REQ_ITEM_RCPT.ITEM_CD
		     , PO_REQ_ITEM_RCPT.ITEM_NM
		     , PO_REQ_ITEM_RCPT.ITEM_NM_EN
		     , CASE WHEN #{g.locale} = 'en_US' THEN PO_REQ_ITEM_RCPT.ITEM_NM_EN
		            ELSE PO_REQ_ITEM_RCPT.ITEM_NM
		        END AS DISP_ITEM_NM
		     , PO_REQ_ITEM_RCPT.ITEM_SPEC
		     , PO_REQ_ITEM_RCPT.ITEM_SPEC_DTL
		     , PO_REQ_ITEM_RCPT.ITEM_CD_CRN_TYP_CCD
		     , PO_REQ_ITEM_RCPT.TL_YN
		     , PO_REQ_ITEM_RCPT.QTA_YN
		     , PO_REQ_ITEM_RCPT.UOM_CCD
		     , PO_REQ_ITEM_RCPT.CUR_CCD
		     , PO_REQ_ITEM_RCPT.REQ_QTY
		     , PO_REQ_ITEM_RCPT.REQ_UPRC
		     , PO_REQ_ITEM_RCPT.REQ_AMT
		     , PO_REQ_ITEM_RCPT.WH_CCD
		     , PO_REQ_ITEM_RCPT.REQ_DLVY_DT
		     , PO_REQ_ITEM_RCPT.CONST_ST_DT
		     , PO_REQ_ITEM_RCPT.CONST_EXP_DT
		     , PO_REQ_ITEM_RCPT.DLVY_PLC
		     , PO_REQ_ITEM_RCPT.REQ_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN REQ_USR.USR_NM_EN
		            ELSE REQ_USR.USR_NM
		        END AS DISP_REQ_PIC_NM
		     , PO_REQ_ITEM_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS DISP_PURC_GRP_NM
		     , PO_REQ_ITEM_RCPT.PO_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN PO_USR.USR_NM_EN
		            ELSE PO_USR.USR_NM
		        END AS DISP_PO_PIC_NM
		     , PO_REQ_ITEM_RCPT.GR_PIC_ID
		     , PO_REQ_ITEM_RCPT.PR_ITEM_UUID AS REQ_ITEM_UUID
		     , PO_REQ_ITEM_RCPT.PR_UUID AS REQ_UUID
		     , PO_REQ_ITEM_RCPT.PR_NO AS REQ_NO
		     , PO_REQ_ITEM_RCPT.PR_REVNO AS REQ_REVNO
		     , PO_REQ_ITEM_RCPT.PR_LNO AS REQ_LNO
		     , PO_REQ_ITEM_RCPT.PR_ITEM_UUID
		     , PO_REQ_ITEM_RCPT.PR_UUID
		     , PO_REQ_ITEM_RCPT.PR_NO
		     , PO_REQ_ITEM_RCPT.PR_REVNO
		     , PO_REQ_ITEM_RCPT.PR_LNO
		     , PO_REQ_ITEM_RCPT.CNTR_UUID
		     , PO_REQ_ITEM_RCPT.CNTR_NO
		     , PO_REQ_ITEM_RCPT.CNTR_REVNO
		     , PO_REQ_ITEM_RCPT.PURC_CNTR_UUID
		     , PO_REQ_ITEM_RCPT.PURC_CNTR_INFO_UUID
		     , PO_REQ_ITEM_RCPT.PURC_CNTR_ITEM_UUID
		     , PO_REQ_ITEM_RCPT.PURC_CNTR_ITEM_LNO
		     , CASE WHEN (
		                  SELECT COUNT(PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_QTA_ALOC_UUID)
		                    FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		                   WHERE PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		                     AND PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_UUID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		                 ) = 0 THEN 'N' ELSE 'Y'
		        END AS EXIST_ALOC_YN
		     , CASE WHEN PO_REQ_ITEM_RCPT.CNTR_UUID IS NOT NULL  THEN PO_REQ_ITEM_RCPT.REQ_QTY
		            WHEN PO_REQ_ITEM_RCPT.CNTR_UUID IS NULL OR PO_REQ_ITEM_RCPT.CNTR_UUID = ''
		                 THEN (
		                       SELECT SUM(ALOC_QTY)
		                         FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		                        WHERE PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		                          AND PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_UUID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		                      )
		        END AS PO_QTY
		     <!--, (
		        SELECT <if test="_databaseId == 'mssql'">TOP 1</if>
		               PO_REQ_ITEM_RCPT_QTA_ALOC.CNTR_NO
		          FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		         WHERE PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		           AND PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_UUID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		           <if test="_databaseId == 'oracle'">AND ROWNUM = 1</if>
		           <if test="_databaseId == 'postgresql'">LIMIT 1</if>
		           <if test="_databaseId == 'mysql'">LIMIT 1</if>
		       ) AS ALOC_REPRE_CNTR_NO
		     , (
		        SELECT COUNT(PO_REQ_ITEM_RCPT_QTA_ALOC.CNTR_UUID)
		          FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		         WHERE PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		           AND PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_UUID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		       ) AS ALOC_REPRE_CNTR_CNT-->
		     , VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		  FROM PO_REQ_ITEM_RCPT
		 INNER JOIN USR REQ_USR
		    ON REQ_USR.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND REQ_USR.USR_ID = PO_REQ_ITEM_RCPT.REQ_PIC_ID
		  LEFT OUTER JOIN USR PO_USR
		    ON PO_USR.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND PO_USR.USR_ID = PO_REQ_ITEM_RCPT.PO_PIC_ID
		 INNER JOIN PURC_GRP
		    ON PURC_GRP.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND PURC_GRP.CO_CD = #{g.co_cd}
		   AND PURC_GRP.PURC_GRP_CD = PO_REQ_ITEM_RCPT.PURC_GRP_CD
		  LEFT OUTER JOIN ITEM_UPRC_HISTREC
		    ON ITEM_UPRC_HISTREC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND ITEM_UPRC_HISTREC.CNTR_UUID = PO_REQ_ITEM_RCPT.CNTR_UUID
		   AND ITEM_UPRC_HISTREC.PURC_CNTR_UUID = PO_REQ_ITEM_RCPT.PURC_CNTR_UUID
		   AND ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID = PO_REQ_ITEM_RCPT.PURC_CNTR_ITEM_UUID
		  LEFT OUTER JOIN VD
		    ON VD.TEN_ID = ITEM_UPRC_HISTREC.TEN_ID
		   AND VD.VD_CD = ITEM_UPRC_HISTREC.VD_CD
		 WHERE PO_REQ_ITEM_RCPT.TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT.STS != 'D'
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND PO_REQ_ITEM_RCPT.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_req_dt != null">
		       AND PO_REQ_ITEM_RCPT.REQ_DT &gt;= #{p.from_req_dt}
		   </if>
		   <if test="p.to_req_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_req_dt,1)"/>
		       AND PO_REQ_ITEM_RCPT.REQ_DT <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.purc_typ_ccd != null">
		       AND PO_REQ_ITEM_RCPT.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <if test="p.rcpt_sts_ccds != null and p.rcpt_sts_ccds.size() != 0">
		       AND PO_REQ_ITEM_RCPT.RCPT_STS_CCD IN
		       <foreach close=")" collection="p.rcpt_sts_ccds" item="rcpt_sts_ccd" open="(" separator=",">
		           #{rcpt_sts_ccd}
		       </foreach>
		   </if>
		   <if test="p.prgs_sts_ccds != null and p.prgs_sts_ccds.size() != 0">
		       AND PO_REQ_ITEM_RCPT.PRGS_STS_CCD IN
		       <foreach close=")" collection="p.prgs_sts_ccds" item="prgs_sts_ccd" open="(" separator=",">
		           #{prgs_sts_ccd}
		       </foreach>
		   </if>
		   <if test="p.req_tit != null and p.req_tit != ''">
		       <bind name="titPattern" value="'%' + p.req_tit + '%'"/>
		       AND UPPER(PO_REQ_ITEM_RCPT.REQ_TIT) LIKE UPPER(#{titPattern})
		   </if>
		   <if test="p.req_pic_id != null and p.req_pic_id != ''">
		       AND PO_REQ_ITEM_RCPT.REQ_PIC_ID = #{p.req_pic_id}
		   </if>
		   <if test="p.req_pic_nm != null and p.req_pic_nm != ''">
		       <bind name="namePattern" value="'%' + p.req_pic_nm + '%'"/>
		       AND (USR.USR_NM LIKE #{namePattern} OR USR.USR_NM_EN LIKE #{namePattern})
		   </if>
		   <if test="p.po_pic_id != null and p.po_pic_id != ''">
		       AND (PO_REQ_ITEM_RCPT.PO_PIC_ID = #{p.po_pic_id} OR PO_REQ_ITEM_RCPT.PO_PIC_ID IS NULL OR PO_REQ_ITEM_RCPT.PO_PIC_ID = '')
		   </if>
		   <if test="p.po_pic_nm != null and p.po_pic_nm != ''">
		       <bind name="poPicNamePattern" value="'%' + p.po_pic_nm + '%'"/>
		       AND (PO_USR.USR_NM LIKE #{poPicNamePattern} OR PO_USR.USR_NM_EN LIKE #{poPicNamePattern} OR PO_REQ_ITEM_RCPT.PO_PIC_ID IS NULL OR PO_REQ_ITEM_RCPT.PO_PIC_ID = '')
		   </if>
		   <choose>
		       <when test="p.purc_grp_cds != null and p.purc_grp_cds.size() != 0">
		           AND (PO_REQ_ITEM_RCPT.PURC_GRP_CD IN
		           <foreach close=")" collection="p.purc_grp_cds" item="purc_grp_cd" open="(" separator=",">
		               #{purc_grp_cd}
		           </foreach> OR PO_REQ_ITEM_RCPT.PURC_GRP_CD IS NULL OR PO_REQ_ITEM_RCPT.PURC_GRP_CD = '')
		       </when>
		       <otherwise>
		           AND 1=2
		       </otherwise>
		   </choose>
		   <choose>
		       <when test="p.item_cds != null and p.item_cds.size() != 0">
		           AND UPPER(PO_REQ_ITEM_RCPT.ITEM_CD) IN
		           <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		               #{item_cd}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.item_cd != null and p.item_cd != ''">
		               <bind name="cdPattern" value="'%' + p.item_cd + '%'"/>
		               AND UPPER(PO_REQ_ITEM_RCPT.ITEM_CD) LIKE UPPER(#{cdPattern})
		           </if>
		       </otherwise>
		   </choose>
		 ORDER BY PO_REQ_ITEM_RCPT.REQ_DT DESC
		        , PO_REQ_ITEM_RCPT.PR_NO DESC
		        , CAST(PO_REQ_ITEM_RCPT.PR_LNO AS INT)
	</select>
	<select id="findListUnitPriceByPoReqItemRcpt" resultType="map">
		<bind name="nowDate" value="g.getFormatNow(g.now, 'yyyyMMdd')"/>
		SELECT PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		     , ITEM_UPRC_HISTREC.UOM_CCD
		     , ITEM_UPRC_HISTREC.CUR_CCD
		     , ITEM_UPRC_HISTREC.UPRCCNTR_UPRC
		     , ITEM_UPRC_HISTREC.CNTR_UUID
		     , ITEM_UPRC_HISTREC.CNTR_NO
		     , ITEM_UPRC_HISTREC.CNTR_REVNO
		     , ITEM_UPRC_HISTREC.PURC_CNTR_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_INFO_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_LNO
		     , CASE WHEN ITEM_UPRC_HISTREC.MOQ IS NULL THEN 1 ELSE ITEM_UPRC_HISTREC.MOQ END AS MOQ
		     , CASE WHEN ITEM_UPRC_HISTREC.CTQ IS NULL THEN 1 ELSE ITEM_UPRC_HISTREC.CTQ END AS CTQ
		     , ITEM_UPRC_HISTREC.DLVY_LDTM
		     , QTA_ITEM_HISTREC.QTARATE
		     , QTA_ITEM_HISTREC.QTA_ITEM_UUID
		     , QTA_ITEM_HISTREC.QTA_NO
		     , VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		  FROM TEMP_TBL
		 INNER JOIN PO_REQ_ITEM_RCPT
		    ON PO_REQ_ITEM_RCPT.TEN_ID = TEMP_TBL.TEN_ID
		   AND PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID = TEMP_TBL.TASK_ID
		   AND TEMP_TBL.USR_ID = #{g.username}
		 INNER JOIN ITEM_UPRC_HISTREC
		    ON ITEM_UPRC_HISTREC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND ITEM_UPRC_HISTREC.OORG_CD = PO_REQ_ITEM_RCPT.OORG_CD
		   AND ITEM_UPRC_HISTREC.ITEM_OORG_CD = PO_REQ_ITEM_RCPT.ITEM_OORG_CD
		   AND ITEM_UPRC_HISTREC.ITEM_CD = PO_REQ_ITEM_RCPT.ITEM_CD
		  LEFT OUTER JOIN QTA_ITEM_HISTREC
		    ON QTA_ITEM_HISTREC.TEN_ID = ITEM_UPRC_HISTREC.TEN_ID
		   AND QTA_ITEM_HISTREC.PURC_CNTR_ITEM_UUID = ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID
		   AND QTA_ITEM_HISTREC.APPL_ST_DT <![CDATA[<=]]> #{nowDate}
		   AND QTA_ITEM_HISTREC.APPL_EXP_DT <![CDATA[>=]]> #{nowDate}
		   AND QTA_ITEM_HISTREC.STS != 'D'
		 INNER JOIN VD
		    ON VD.TEN_ID = ITEM_UPRC_HISTREC.TEN_ID
		   AND VD.VD_CD = ITEM_UPRC_HISTREC.VD_CD
		 WHERE ITEM_UPRC_HISTREC.TEN_ID = #{g.tenant}
		   AND ITEM_UPRC_HISTREC.UPRC_EFCT_ST_DT  <![CDATA[<=]]> #{nowDate}
		   AND ITEM_UPRC_HISTREC.UPRC_EFCT_EXP_DT <![CDATA[>=]]> #{nowDate}
		   AND ITEM_UPRC_HISTREC.STS != 'D'
	</select>
	<resultMap id="poReqRcptUprcItemValidCheckMap" type="java.util.HashMap">
		<result column="VALID_YN" property="valid_yn"/>
		<collection javaType="java.util.ArrayList" property="itemList" resultMap="poReqRcptUprcItemDtMap"/>
	</resultMap>
	<resultMap id="poReqRcptUprcItemDtMap" type="java.util.HashMap">
		<id column="PO_REQ_ITEM_RCPT_UUID" property="po_req_item_rcpt_uuid"/>
		<result column="REQ_ITEM_UUID" property="req_item_uuid"/>
		<result column="REQ_NO" property="req_no"/>
		<result column="REQ_REVNO" property="req_revno"/>
		<result column="REQ_LNO" property="req_lno"/>
		<result column="RCPT_STS_CCD" property="rcpt_sts_ccd"/>
		<result column="RCPT_STS_CCD_NM" property="rcpt_sts_ccd_nm"/>
	</resultMap>
	<select id="compareListPoReceiptUprcItemSts" resultMap="poReqRcptUprcItemValidCheckMap">
		SELECT PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		     , PO_REQ_ITEM_RCPT.PR_ITEM_UUID AS REQ_ITEM_UUID
		     , PO_REQ_ITEM_RCPT.PR_NO AS REQ_NO
		     , PO_REQ_ITEM_RCPT.PR_REVNO AS REQ_REVNO
		     , PO_REQ_ITEM_RCPT.PR_LNO AS REQ_LNO
		     , PO_REQ_ITEM_RCPT.RCPT_STS_CCD
		     , CDDL.DTLCD_NM AS RCPT_STS_CCD_NM
		     <choose>
		         <when test="p.availableStsList != null">
		             , CASE WHEN PO_REQ_ITEM_RCPT.RCPT_STS_CCD IN
		             <foreach close=")" collection="p.availableStsList" item="sts" open="(" separator=",">
		                 #{sts}
		             </foreach>
		                         THEN 'Y'
		                    ELSE 'N'
		                END AS VALID_YN
		         </when>
		         <otherwise>
		             , CASE WHEN PO_REQ_ITEM_RCPT.RCPT_STS_CCD = #{p.rcpt_sts_ccd} THEN 'Y'
		                    ELSE 'N'
		                END AS VALID_YN
		         </otherwise>
		     </choose>
		  FROM PO_REQ_ITEM_RCPT
		 INNER JOIN TEMP_TBL
		    ON TEMP_TBL.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND TEMP_TBL.TASK_ID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		   AND TEMP_TBL.USR_ID = #{g.username}
		 INNER JOIN DTLCD CDDT
		    ON CDDT.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND CDDT.CCD = 'C086'
		   AND CDDT.DTLCD = PO_REQ_ITEM_RCPT.RCPT_STS_CCD
		   AND CDDT.USE_YN = 'Y'
		   AND CDDT.STS   != 'D'
		 INNER JOIN DTLCD_MULTLANG CDDL
		    ON CDDL.TEN_ID  = CDDT.TEN_ID
		   AND CDDL.CCD  = CDDT.CCD
		   AND CDDL.DTLCD  = CDDT.DTLCD
		   AND CDDL.LANG_CCD = #{g.locale}
		   AND CDDL.STS    != 'D'
		 WHERE PO_REQ_ITEM_RCPT.TEN_ID  = #{g.tenant}
	</select>
	<update id="returnUprcItemReq">
		UPDATE PO_REQ_ITEM_RCPT
		   SET REQ_RET_RSN = #{p.req_ret_rsn}
		     , RCPT_STS_CCD = 'RET'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<update id="changeUprcItemPurcGrp">
		UPDATE PO_REQ_ITEM_RCPT
		   SET PURC_GRP_CD = #{p.purc_grp_cd}
		     , PO_PIC_ID = NULL
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
	</update>
	<select id="findListReturnedPoReqItemRcpt" resultType="map">
		SELECT OORG_CD
		     , REQ_TIT
		     , PURC_TYP_CCD
		     , 'SPTPURC' AS REQ_PURP_CCD
		     , PLT_CD
		     , ITEM_OORG_CD
		     , ITEM_CD
		     , ITEM_NM
		     , ITEM_NM_EN
		     , ITEM_SPEC
		     , ITEM_SPEC_DTL
		     , ITEM_CD_CRN_TYP_CCD
		     , UOM_CCD
		     , CUR_CCD
		     , REQ_QTY
		     , REQ_UPRC
		     , REQ_AMT
		     , WH_CCD
		     , REQ_DLVY_DT
		     , CONST_ST_DT
		     , CONST_EXP_DT
		     , DLVY_PLC
		     , REQ_PIC_ID
		     , PURC_GRP_CD
		     , GR_PIC_ID
		     , PR_ITEM_UUID AS REQ_ITEM_UUID
		     , PR_UUID AS REQ_UUID
		     , PR_NO AS REQ_NO
		     , PR_REVNO AS REQ_REVNO
		     , PR_LNO AS REQ_LNO
		  FROM TEMP_TBL
		 INNER JOIN PO_REQ_ITEM_RCPT
		    ON PO_REQ_ITEM_RCPT.TEN_ID = TEMP_TBL.TEN_ID
		   AND PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID = TEMP_TBL.TASK_ID
		   AND TEMP_TBL.USR_ID = #{g.username}
	</select>
	<select id="findListPoReqItemRcptQta" resultType="map">
		SELECT PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_QTA_ALOC_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.PRGS_STS_CCD
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.CNTR_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.CNTR_NO
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.CNTR_REVNO
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.PURC_CNTR_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.PURC_CNTR_INFO_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.PURC_CNTR_ITEM_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.PURC_CNTR_ITEM_LNO
		     , ITEM_UPRC_HISTREC.UPRCCNTR_UPRC
		     , ITEM_UPRC_HISTREC.UPRCCNTR_QTY
		     , ITEM_UPRC_HISTREC.UOM_CCD
		     , ITEM_UPRC_HISTREC.CUR_CCD
		     , VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.QTARATE
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.ALOC_QTY
		     , CASE WHEN ITEM_UPRC_HISTREC.MOQ IS NULL THEN 1 ELSE ITEM_UPRC_HISTREC.MOQ END MOQ
		     , CASE WHEN ITEM_UPRC_HISTREC.CTQ IS NULL THEN 1 ELSE ITEM_UPRC_HISTREC.CTQ END CTQ
		     , ITEM_UPRC_HISTREC.DLVY_LDTM
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.QTA_ITEM_UUID
		     , PO_REQ_ITEM_RCPT_QTA_ALOC.QTA_NO
		  FROM PO_REQ_ITEM_RCPT
		 INNER JOIN PO_REQ_ITEM_RCPT_QTA_ALOC
		    ON PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID = PO_REQ_ITEM_RCPT.TEN_ID
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC.PO_REQ_ITEM_RCPT_UUID = PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID
		 INNER JOIN ITEM_UPRC_HISTREC
		    ON ITEM_UPRC_HISTREC.TEN_ID = PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID
		   AND ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID = PO_REQ_ITEM_RCPT_QTA_ALOC.PURC_CNTR_ITEM_UUID
		  LEFT OUTER JOIN QTA_ITEM_HISTREC
		    ON QTA_ITEM_HISTREC.TEN_ID = PO_REQ_ITEM_RCPT_QTA_ALOC.TEN_ID
		   AND QTA_ITEM_HISTREC.QTA_ITEM_UUID = PO_REQ_ITEM_RCPT_QTA_ALOC.QTA_ITEM_UUID
		 INNER JOIN VD
		    ON VD.TEN_ID = ITEM_UPRC_HISTREC.TEN_ID
		   AND VD.VD_CD = ITEM_UPRC_HISTREC.VD_CD
		 WHERE PO_REQ_ITEM_RCPT.TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT.PO_REQ_ITEM_RCPT_UUID = #{p.po_req_item_rcpt_uuid}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC.STS != 'D'
	</select>
	<select id="findListRequestReqInfoByRfxChangeReq" resultType="map">
		SELECT PR_NO
		     , PR_REVNO
		     , RCPT_STS_CCD
		     , PRGS_STS_CCD
		  FROM PO_REQ_ITEM_RCPT
		 WHERE TEN_ID = #{g.tenant}
		   AND PR_NO = #{p.req_no}
		   AND PR_REVNO = CAST(#{p.req_revno} AS INT)
	</select>
	<update id="deleteRequestReqInfoByRfxChangeReq">
		UPDATE PO_REQ_ITEM_RCPT
		   SET STS = 'D'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PR_NO = #{p.req_no}
		   AND PR_REVNO = CAST(#{p.req_revno} AS INT)
	</update>
	<update id="recoveryRequestReqInfoByRfxChangeReq">
		UPDATE PO_REQ_ITEM_RCPT
		   SET STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PR_NO = #{p.req_no}
		   AND PR_REVNO = CAST(#{p.req_revno} AS INT)
	</update>
	<delete id="deletePoReqItemRcptQtaAloc">
		DELETE
		  FROM PO_REQ_ITEM_RCPT_QTA_ALOC
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC_UUID = #{p.po_req_item_rcpt_qta_aloc_uuid}
	</delete>
	<update id="updatePoReqItemRcptQtaAloc">
		UPDATE PO_REQ_ITEM_RCPT_QTA_ALOC
		   SET ALOC_QTY = #{p.aloc_qty}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PO_REQ_ITEM_RCPT_QTA_ALOC_UUID = #{p.po_req_item_rcpt_qta_aloc_uuid}
	</update>
</mapper>
