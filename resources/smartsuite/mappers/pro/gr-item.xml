<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
GR: 입고헤더
GR_ITEM: 입고상세
 -->

<mapper namespace="gr-item">
    <insert id="insertGrItem">
    /* gr-item.insertGrItem: 검수품목 상세 등록 */
    INSERT
      INTO GR_ITEM (
           TEN_ID
         , GR_ITEM_UUID
         , GR_NO
         , GR_ORDN
         , GR_LNO
         , GR_UUID
         , OORG_CD
         , PLT_CD
         , ITEM_OORG_CD
         , WH_CCD
         , VD_CD
         , PURC_TYP_CCD
         , GR_TYP_CCD
         , GR_YR
         , GR_DT
         , GR_CRN_DT
         , ITEM_CD_CRN_TYP_CCD
         , ITEM_CD
         , ITEM_NM
         , ITEM_NM_EN
         , ITEM_SPEC
         , ITEM_SPEC_DTL
         , UOM_CCD
         , GR_QTY
         , CUR_CCD
         , PO_UPRC
         , GR_AMT
         , PR_NO
         , PR_LNO
         , PR_ITEM_UUID
         , PO_NO
         , PO_LNO
         , PO_ITEM_UUID
         , ASN_NO
         , ASN_ORDN
         , ASN_LNO
         , ASN_ITEM_UUID
         , RET_QTY
         , CNCL_QTY
         , RMK
         , STS
         , REGR_ID
         , REG_DTTM
         , MODR_ID
         , MOD_DTTM
    ) VALUES (
           #{g.tenant}
         , #{p.gr_item_uuid}
         , #{p.gr_no}
         , CAST(#{p.gr_ordn} AS INT)
         , TO_CHAR(#{p.gr_lno})  , #{p.gr_uuid}
         , #{p.oorg_cd}
         , #{p.plt_cd}
         , #{p.item_oorg_cd}
         , #{p.wh_ccd}
         , #{p.vd_cd}
         , #{p.purc_typ_ccd}
         , #{p.gr_typ_ccd}
         , #{p.gr_yr}
         , #{p.gr_dt}
         , #{p.gr_crn_dt}
         , #{p.item_cd_crn_typ_ccd}
         , #{p.item_cd}
         , #{p.item_nm}
         , #{p.item_nm_en}
         , #{p.item_spec}
         , #{p.item_spec_dtl}
         , #{p.uom_ccd}
         , CAST(#{p.gr_qty} AS FLOAT  )
         , #{p.cur_ccd}
         , CAST(#{p.po_uprc} AS FLOAT  )
         , CAST(#{p.gr_amt} AS FLOAT  )
         , #{p.pr_no}
         , TO_CHAR(#{p.pr_lno})  , #{p.pr_item_uuid}
         , #{p.po_no}
         , TO_CHAR(#{p.po_lno})  , #{p.po_item_uuid}
         , #{p.asn_no}
         , CAST(#{p.asn_ordn} AS INT)
         , TO_CHAR(#{p.asn_lno})  , #{p.asn_item_uuid}
         , CAST(#{p.ret_qty} AS FLOAT  )
         , CAST(#{p.cancel_qty} AS FLOAT  )
         , #{p.rmk}
         , 'C'
         , #{g.username}
         , #{g.now}
         , #{g.username}
         , #{g.now}
    )
    </insert>
    <update id="updateGrItem">
    /* gr-item.updateGrItem: 검수품목 상세 수정 */
    UPDATE GR_ITEM
       SET STS = 'U'
         , MOD_DTTM = #{g.now}
         , MODR_ID = #{g.username}
         , PLT_CD = #{p.plt_cd}
         , ITEM_OORG_CD = #{p.item_oorg_cd}
         , WH_CCD = #{p.wh_ccd}
         , VD_CD = #{p.vd_cd}
         , GR_TYP_CCD = #{p.gr_typ_ccd}
         , GR_YR = #{p.gr_yr}
         , GR_DT = #{p.gr_dt}
         , GR_CRN_DT = #{p.gr_crn_dt}
         , ITEM_CD = #{p.item_cd}
         , ITEM_NM = #{p.item_nm}
         , ITEM_NM_EN = #{p.item_nm_en}
         , ITEM_SPEC = #{p.item_spec}
         , ITEM_SPEC_DTL = #{p.item_spec_dtl}
         , UOM_CCD = #{p.uom_ccd}
         , GR_QTY = CAST(#{p.gr_qty} AS FLOAT  )
         , CUR_CCD = #{p.cur_ccd}
         , PO_UPRC = CAST(#{p.po_uprc} AS FLOAT  )
         , GR_AMT = CAST(#{p.gr_amt} AS FLOAT  )
         , RET_QTY = CAST(#{p.ret_qty} AS FLOAT  )
         , CNCL_QTY = CAST(#{p.cancel_qty} AS FLOAT  )
         , RMK = #{p.rmk}
     WHERE TEN_ID = #{g.tenant}
       AND GR_ITEM_UUID = #{p.gr_item_uuid}
    </update>
    <delete id="deleteGrItemByGrItem">
    /* gr-item.deleteGrItemByGrItem: 검수품목 개별 삭제 */
    DELETE FROM GR_ITEM
     WHERE TEN_ID     = #{g.tenant}
       AND GR_ITEM_UUID = #{p.gr_item_uuid}
    </delete>
    <update id="deleteGrItemByGrUuid">
    /* gr-item.deleteGrItemByGrUuid: 검수 품목 상세 삭제 */
    UPDATE GR_ITEM
       SET STS = 'D'
     WHERE TEN_ID = #{g.tenant}
       AND GR_UUID  = #{p.gr_uuid}
    </update>
    <select id="searchGrItemByGrUuid" resultType="map">
    /* gr-item.searchGrItemByGrUuid: 검수 품목 목록 */
    SELECT GD.TEN_ID
         , GD.GR_ITEM_UUID
         , GD.GR_NO
         , GD.GR_ORDN
         , GD.GR_LNO
         , GD.GR_UUID
         , GD.OORG_CD
         , GD.PLT_CD
         , GD.ITEM_OORG_CD
         , GD.WH_CCD
         , GD.VD_CD
         , GD.PURC_TYP_CCD
         , GD.GR_TYP_CCD
         , GD.GR_YR
         , GD.GR_DT
         , GD.GR_CRN_DT
         , GD.ITEM_CD_CRN_TYP_CCD
         , CASE WHEN GD.ITEM_CD_CRN_TYP_CCD = 'CDLS'  -- 구매품목유형: 미등록(무코드품목)
                     THEN NULL
                ELSE GD.ITEM_CD
           END  AS DISP_ITEM_CD
         , GD.ITEM_CD
         , GD.ITEM_NM
         , GD.ITEM_NM_EN
         , (CASE WHEN 'en_US' = #{g.locale} THEN GD.ITEM_NM_EN
                 ELSE GD.ITEM_NM
             END) AS DISP_ITEM_NM
         , GD.ITEM_SPEC
         , GD.ITEM_SPEC_DTL
         , GD.UOM_CCD
         , GD.CUR_CCD
         , GD.PO_UPRC
         , (CASE WHEN GD.GR_QTY IS NULL THEN 0 ELSE GD.GR_QTY END) AS GR_QTY
         , (CASE WHEN GD.GR_AMT IS NULL THEN 0 ELSE GD.GR_AMT END) AS GR_AMT
         , GD.PR_NO
         , GD.PR_LNO
         , GD.PR_ITEM_UUID
         , GD.PO_NO
         , GD.PO_LNO
         , GD.PO_ITEM_UUID
         , GD.ASN_NO
         , GD.ASN_LNO
         , GD.ASN_ITEM_UUID
         , (CASE WHEN GD.RET_QTY IS NULL THEN 0 ELSE GD.RET_QTY END) AS RET_QTY
         , (CASE WHEN GD.CNCL_QTY IS NULL THEN 0 ELSE GD.CNCL_QTY END) AS CNCL_QTY
         , GD.GR_ITEM_STS_CCD
         , GD.ASN_ORDN
         , GD.RMK
         , GD.STS
         , GD.REGR_ID
         , GD.REG_DTTM
         , GD.MODR_ID
         , GD.MOD_DTTM
         , (CASE WHEN PD.PO_QTY IS NULL THEN 0 ELSE PD.PO_QTY END) AS PO_QTY
         , (CASE WHEN PD.PO_AMT IS NULL THEN 0 ELSE PD.PO_AMT END) AS PO_AMT
         , (CASE WHEN PD.GR_QTY   IS NULL THEN 0 ELSE PD.GR_QTY   END) AS PO_GR_QTY
         , (CASE WHEN PD.GR_QTY IS NOT NULL AND PD.PO_UPRC IS NOT NULL
                      THEN  GETPRECFORMAT(#{g.tenant}, 'amt', PD.GR_QTY * PD.PO_UPRC, PD.CUR_CCD)
                 ELSE 0
            END) AS PO_GR_AMT
         , (CASE WHEN PD.PO_QTY IS NOT NULL AND PD.GR_QTY IS NOT NULL
                      THEN PD.PO_QTY - PD.GR_QTY
                 ELSE 0
            END) AS REMAIN_QTY
         , (CASE WHEN PD.PO_AMT IS NULL THEN 0
                 ELSE PD.PO_AMT - (CASE WHEN PD.GR_QTY IS NOT NULL AND PD.PO_UPRC IS NOT NULL
                                               THEN  GETPRECFORMAT(#{g.tenant}, 'amt', PD.GR_QTY * PD.PO_UPRC, PD.CUR_CCD)
                                          ELSE 0
                                     END)
            END) AS REMAIN_AMT
         , PD.REQ_DLVY_DT
         , (CASE WHEN AD.DLVY_DT IS NULL THEN PD.DLVY_DT ELSE AD.DLVY_DT END) AS DLVY_DT
         , PD.DLVY_PLC
         , PD.PURC_TYP_CCD
         , (CASE WHEN 'en_US' = #{g.locale} THEN JOB.PURC_GRP_NM_EN
                 ELSE JOB.PURC_GRP_NM
             END) AS DISP_PURC_GRP_NM
         , (CASE WHEN PH.DFRM_RO IS NULL THEN 0 ELSE PH.DFRM_RO END) AS DFRM_RO
         , PH.PO_UUID
         , (CASE WHEN AD.ASN_QTY IS NULL THEN 0 ELSE AD.ASN_QTY END) AS ASN_QTY
         , PD.SG_CD
      FROM GR_ITEM GD
     INNER JOIN PO_ITEM PD
        ON GD.TEN_ID = PD.TEN_ID
       AND GD.PO_NO = PD.PO_NO
       AND GD.PO_ITEM_UUID = PD.PO_ITEM_UUID
       AND PD.STS != 'D'
      LEFT OUTER JOIN PURC_GRP JOB
        ON JOB.TEN_ID       = PD.TEN_ID
       AND JOB.PURC_GRP_TYP_CCD = 'PURC'
       AND JOB.PURC_GRP_CD  = PD.PURC_GRP_CD
       AND JOB.CO_CD      = #{g.comp_cd}
       AND JOB.USE_YN       = 'Y'
     INNER JOIN PO PH
        ON PD.TEN_ID = PH.TEN_ID
       AND PD.PO_UUID = PH.PO_UUID
       AND PH.STS != 'D'
      LEFT OUTER JOIN ASN_ITEM AD
        ON GD.TEN_ID = AD.TEN_ID
       AND GD.ASN_ITEM_UUID = AD.ASN_ITEM_UUID
       AND AD.STS != 'D'
     WHERE GD.TEN_ID = #{g.tenant}
       AND GD.GR_UUID = #{p.gr_uuid}
       AND GD.STS != 'D'
     ORDER BY GD.PO_NO ASC, CAST(GD.PO_LNO AS INT) ASC
    </select>
    <select id="searchAsnItemPassReturnQuantity" resultType="map">
     /* gr-item.searchAsnItemPassReturnQuantity: AR 품목의 합격수량/반품수량 확인 */
        SELECT B.*
          FROM ASN_ITEM A INNER JOIN (
              SELECT GRDT.TEN_ID
                     , GRDT.ASN_ITEM_UUID
                     , GRDT.PO_ITEM_UUID
                     , SUM(CASE WHEN GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
                                     THEN (CASE WHEN GRDT.GR_QTY IS NULL
                                                     THEN 0
                                                ELSE GRDT.GR_QTY
                                           END)
                                ELSE 0
                           END) AS SUM_GR_QTY       /* 검수완료 누적수량 */
                     , SUM(CASE WHEN GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
                                     THEN (CASE WHEN GRDT.RET_QTY IS NULL
                                                     THEN 0
                                                ELSE GRDT.RET_QTY
                                           END)
                                ELSE 0
                           END) AS SUM_RET_QTY   /* 누적 반품수량 */
                  FROM GR_ITEM GRDT
                 WHERE GRDT.TEN_ID      = #{g.tenant}
                   <choose>
                     <when test="p.asn_item_uuid != null and p.asn_item_uuid != ''">
                   AND GRDT.ASN_ITEM_UUID = #{p.asn_item_uuid}
                     </when>
                     <otherwise>
                       <if test="p.asn_item_uuids != null and p.asn_item_uuids.size() != 0">
                   AND GRDT.ASN_ITEM_UUID IN
                         <foreach close=")" collection="p.asn_item_uuids" item="asn_item_uuid" open="(" separator=",">
                           #{asn_item_uuid}
                         </foreach>
                       </if>
                     </otherwise>
                   </choose>
                   AND GRDT.STS        != 'D'
                 GROUP BY GRDT.TEN_ID, GRDT.ASN_ITEM_UUID, GRDT.PO_ITEM_UUID
          )B ON (
                 A.TEN_ID     = B.TEN_ID
           AND A.ASN_ITEM_UUID = B.ASN_ITEM_UUID
          )
    </select>
<!--    <select id="searchPoItemAsnQuantity" resultType="map">-->
<!--    /* gr-item.searchPoItemAsnQuantity: 발주품목의 검수요청수량/입고수량 확인 */-->
<!--        SELECT B.*-->
<!--        FROM PO_ITEM A INNER JOIN (-->
<!--            SELECT PODT.TEN_ID-->
<!--                 , PODT.PO_NO-->
<!--                 , PODT.PO_LNO-->
<!--                 , PODT.PO_ITEM_UUID-->
<!--                 , SUM(CASE WHEN ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'-->
<!--                                 THEN (CASE WHEN ALL_GRDT.GR_QTY IS NULL-->
<!--                                                 THEN 0-->
<!--                                            ELSE ALL_GRDT.GR_QTY-->
<!--                                       END)-->
<!--                            ELSE 0-->
<!--                       END) AS SUM_GR_QTY /* 검수 누적수량 */-->
<!--              FROM PO_ITEM PODT-->
<!--             INNER JOIN GR_ITEM ALL_GRDT-->
<!--                 ON ALL_GRDT.TEN_ID      = PODT.TEN_ID-->
<!--                 AND ALL_GRDT.PO_NO       = PODT.PO_NO-->
<!--                 AND ALL_GRDT.PO_LNO      = PODT.PO_LNO-->
<!--                 AND ALL_GRDT.STS        != 'D'-->
<!--             WHERE PODT.TEN_ID     = #{g.tenant}-->
<!--               <choose>-->
<!--                 <when test="p.po_item_uuid != null and p.po_item_uuid != ''">-->
<!--               AND PODT.PO_ITEM_UUID = #{p.po_item_uuid}-->
<!--                 </when>-->
<!--                 <otherwise>-->
<!--                   <if test="p.po_item_uuids != null and p.po_item_uuids.size() != 0">-->
<!--               AND PODT.PO_ITEM_UUID IN-->
<!--                     <foreach collection="p.po_item_uuids" item="po_item_uuid" open="(" close=")" separator=",">-->
<!--                     #{po_item_uuid}-->
<!--                     </foreach>-->
<!--                   </if>-->
<!--                 </otherwise>-->
<!--               </choose>-->
<!--             GROUP BY PODT.TEN_ID, PODT.PO_NO, PODT.PO_LNO, PODT.PO_ITEM_UUID-->
<!--        ) B ON (-->
<!--                A.TEN_ID     = B.TEN_ID-->
<!--            AND A.PO_ITEM_UUID = B.PO_ITEM_UUID-->
<!--        )-->
<!--    </select>-->
<!--    <select id="searchHigerRevnoPoItems" resultType="map">-->
<!--        /* gr-item.searchHigerRevnoPoItems: 발주품목의 검수요청수량/입고수량 확인 */-->
<!--        WITH INPUT_PO_ITEMS AS (-->
<!--        SELECT TEN_ID, PO_NO, PO_LNO, TO_NUMBER(PO_REVNO) AS PO_REVNO, PO_ITEM_UUID-->
<!--        FROM PO_ITEM-->
<!--        WHERE PO_ITEM.TEN_ID = #{g.tenant}-->
<!--            AND PO_ITEM_UUID IN-->
<!--        <foreach collection="p.po_item_uuids" item="po_item_uuid" open="(" close=")" separator=",">-->
<!--            #{po_item_uuid}-->
<!--        </foreach>-->
<!--        )-->
<!--        SELECT B.PO_ITEM_UUID AS PO_ITEM_UUID-->
<!--        FROM PO_ITEM B-->
<!--        INNER JOIN INPUT_PO_ITEMS A-->
<!--        ON B.TEN_ID = A.TEN_ID-->
<!--        AND B.PO_NO = A.PO_NO-->
<!--        AND B.PO_LNO = A.PO_LNO-->
<!--        AND B.PO_REVNO >= A.PO_REVNO-->
<!--        AND B.STS != 'D'-->
<!--    </select>-->
    <!-- 검수취소 가능여부 체크 -->
    <select id="checkGrCancelable" resultType="map">
    /* gr-item.checkGrCancelable: 검수취소가능여부 확인 */
    SELECT T.PO_NO
         , T.PO_LNO
         , T.CHECK_RESULT
      FROM ( SELECT DT.PO_NO             AS PO_NO
                  , DT.PO_LNO            AS PO_LNO
                  , CASE WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = DT.TEN_ID
                                   AND A.PO_NO       = DT.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = DT.TEN_ID AND B.PO_NO = DT.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D'
                                   AND A.PO_CHG_TYP_CCD     = 'TRMN'    -- 발주해지
                                   AND A.PO_STS_CCD = 'TRMN'    -- 발주 진행상태(D:발주해지)
                              ) &gt; 0
                              THEN 'PO_TERMINATE'
                         WHEN ( SELECT COUNT(1)
                                  FROM PO A
                                 WHERE A.TEN_ID      = DT.TEN_ID
                                   AND A.PO_NO       = DT.PO_NO
                                   AND A.PO_REVNO      = ( SELECT MAX(B.PO_REVNO) FROM PO B WHERE B.TEN_ID = DT.TEN_ID AND B.PO_NO = DT.PO_NO AND B.STS != 'D' )
                                   AND A.STS        != 'D'
                                   AND A.PO_CHG_TYP_CCD     = 'CHG'    -- 발주변경
                                   AND A.PO_STS_CCD IN ('CRNG', 'CHG_REQ', 'PRGSG')    /* 발주 진행상태(T:임시저장, R:변경요청, P:발주진행중)*/
                              ) &gt; 0
                              THEN 'PO_CHANGE_PROGRESS'
                         WHEN IVHD.INV_STS_CCD = 'CRNG'
                              THEN 'HAS_TEMP_INVOICE_ITEM'
                         WHEN IVHD.INV_STS_CCD = 'CNFD'
                              THEN 'HAS_INVOICE_ITEM'
                         ELSE NULL
                    END                  AS CHECK_RESULT
               FROM GR HD
              INNER JOIN GR_ITEM DT
                 ON DT.TEN_ID = HD.TEN_ID
                AND DT.GR_UUID  = HD.GR_UUID
                AND DT.STS   != 'D'
               LEFT OUTER JOIN INV_ITEM IVDT
                 ON IVDT.TEN_ID     = DT.TEN_ID
                AND IVDT.GR_ITEM_UUID = DT.GR_ITEM_UUID
               LEFT OUTER JOIN INV IVHD
                 ON IVHD.TEN_ID        = IVDT.TEN_ID
                AND IVHD.INV_UUID        = IVDT.INV_UUID
                AND IVHD.INV_STS_CCD <![CDATA[<>]]> 'CNFD_CNCL'  -- 확정취소(D)
              WHERE HD.TEN_ID = #{g.tenant}
                AND HD.GR_UUID  = #{p.gr_uuid}
           ) T
     WHERE T.CHECK_RESULT IS NOT NULL  ORDER BY T.PO_NO, CAST(T.PO_LNO AS INT)
    </select>
</mapper>
