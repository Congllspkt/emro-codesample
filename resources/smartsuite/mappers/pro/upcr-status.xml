<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="upcr-status">
	<!-- 단가계약요청 임시저장 시 상태 수정 -->
	<update id="saveDraftUpcrHd">
		/* upcr-status.saveDraftUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'CRNG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="saveDraftUpcrDt">
		/* upcr-status.saveDraftUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN #{p.upcr_chg_yn} = 'N' THEN 'PR_CRNG'
		                          ELSE 'PR_CHG_CRNG'
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청 결재상신 시 상태 수정 -->
	<update id="submitApprovalUpcrHd">
		/* upcr-status.submitApprovalUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'APVL_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="submitApprovalUpcrDt">
		/* upcr-status.submitApprovalUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN #{p.upcr_chg_yn} = 'N' THEN 'PR_APVL_RPTG'
		                          ELSE 'PR_CHG_APVL_RPTG'
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청 결재승인 시 상태 수정 -->
	<update id="approveApprovalUpcrHd">
		/* upcr-status.approveApprovalUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'APVD'
		     , UPCR_REQ_DT = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="approveApprovalUpcrDt">
		/* upcr-status.approveApprovalUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT_WTG'
		     , UPCR_GRP_STS_CCD = 'WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청 결재반려 시 상태 수정 -->
	<update id="rejectApprovalUpcrHd">
		/* upcr-status.rejectApprovalUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="rejectApprovalUpcrDt">
		/* upcr-status.rejectApprovalUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN #{p.upcr_chg_yn} = 'N' THEN 'PR_APVL_RET'
		                          ELSE 'PR_CHG_APVL_RET'
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청 결재취소 시 상태 수정 -->
	<update id="cancelApprovalUpcrHd">
		/* upcr-status.cancelApprovalUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="cancelApprovalUpcrDt">
		/* upcr-status.cancelApprovalUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN #{p.upcr_chg_yn} = 'N' THEN 'PR_CRNG'
		                          ELSE 'PR_CHG_CRNG'
		                      END
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청 결재승인처리(Bypass) 시 상태 수정 -->
	<update id="bypassApprovalUpcrHd">
		/* upcr-status.bypassApprovalUpcrHd */
		UPDATE UPCR
		   SET UPCR_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<update id="bypassApprovalUpcrDt">
		/* upcr-status.bypassApprovalUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT_WTG'
		     , UPCR_GRP_STS_CCD = 'WTG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_UUID  = #{p.upcr_uuid}
	</update>
	<!-- 단가계약요청변경 시 이전 차수 상태 수정 -->
	<select id="selectPrevUpcrByModUpcrDt" resultType="map">
		/* upcr-status.selectPrevUpcrByModUpcrDt */
		SELECT B.*
		  FROM UPCR_ITEM A
		 INNER JOIN (
		             SELECT PREV_UPCRDT.TEN_ID        AS TEN_ID
		                  , PREV_UPCRDT.UPCR_ITEM_UUID    AS PREV_UPCR_ITEM_ID
		                  , CASE WHEN UPCRDT.UPCR_ITEM_UUID IS NULL OR UPCRDT.UPCR_ITEM_UUID = '' THEN 'RX' -- 단가계약요청변경승인 시 해당 품목 건이 삭제되어 종료
		                         ELSE 'PR_CHG' -- 단가계약요청변경승인되어 종료
		                     END   AS UPCR_STS_CCD
		                  , 'PRRM' AS UPCR_GRP_STS_CCD
		               FROM UPCR_ITEM PREV_UPCRDT
		               LEFT OUTER JOIN UPCR_ITEM UPCRDT
		                 ON UPCRDT.TEN_ID  = #{g.tenant}
		                AND UPCRDT.UPCR_UUID   = #{p.upcr_uuid}
		                AND UPCRDT.UPCR_NO   = PREV_UPCRDT.UPCR_NO
		                AND UPCRDT.UPCR_LNO  = PREV_UPCRDT.UPCR_LNO
		                AND UPCRDT.ITEM_CD = PREV_UPCRDT.ITEM_CD
		              WHERE PREV_UPCRDT.TEN_ID = #{g.tenant}
		                AND PREV_UPCRDT.UPCR_UUID  = #{p.prev_upcr_id}
		                AND PREV_UPCRDT.UPCR_STS_CCD IN ('PR_RCPT_WTG', 'PR_RCPT', 'PR_RET')  -- 단가계약요청접수대기, 단가계약요청접수, 구매반려 상태만 완료 처리 가능
		            ) B
		    ON A.TEN_ID     = B.TEN_ID
		   AND A.UPCR_ITEM_UUID = B.PREV_UPCR_ITEM_ID
	</select>
	<update id="closePrevUpcrByModUpcrDt">
		/* upcr-status.closePrevUpcrByModUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD     = #{p.upcr_sts_ccd}
		     , UPCR_GRP_STS_CCD = #{p.upcr_grp_sts_ccd}
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID = #{p.prev_upcr_item_id}
	</update>
	<!-- 단가계약요청 반려 시 상태 수정 -->
	<update id="returnUpcrDt">
		/* upcr-status.returnUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RET'
		     , UPCR_GRP_STS_CCD = 'RET'
		     , UPCR_RET_RSN = #{p.upcr_ret_rsn}
		 WHERE TEN_ID     = #{g.tenant}
		   <choose>
		       <when test="p.upcr_item_uuids != null">
		           AND UPCR_ITEM_UUID IN
		           <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		               #{upcr_item_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
		       </otherwise>
		   </choose>
	</update>
	<!-- 단가계약요청 접수 시 상태 수정 -->
	<update id="receiveUpcrDt">
		/* upcr-status.receiveUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID     = #{g.tenant}
		   <choose>
		       <when test="p.upcr_item_uuids != null">
		           AND UPCR_ITEM_UUID IN
		           <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		               #{upcr_item_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
		       </otherwise>
		   </choose>
	</update>
	<!-- RFI 임시저장 시 상태 수정 -->
	<update id="temporarySaveRfiUpcrDt">
		/* upcr-status.temporarySaveRfiUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFI_CRNG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFI 요청 시 상태 수정 -->
	<update id="requestRfiUpcrDt">
		/* upcr-status.requestRfiUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFI_REQ'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFI 종료 시 상태 수정 -->
	<update id="completeRfiUpcrDt">
		/* upcr-status.completeRfiUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFI_CMPLD'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID      = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFI 품목 삭제 시 UPCR 품목 존재하는 경우 단가계약요청 접수 상태로 수정 -->
	<update id="deleteRfiItemUpcrDt">
		/* upcr-status.deleteRfiItemUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 임시저장 시 상태 수정 -->
	<update id="saveDraftRfxUpcrDt">
		/* upcr-status.saveDraftRfxUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFX_CRNG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 품목 삭제 시 UPCR 품목 존재하는 경우 단가계약요청 접수 상태로 수정 -->
	<update id="deleteRfxItemUpcrDt">
		/* upcr-status.deleteRfxItemUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 진행품의 결재상신 시 상태 수정 -->
	<update id="submitApprovalRfxProgUpcrDt">
		/* upcr-status.submitApprovalRfxProgUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFX_APVL_RPTG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 진행품의 결재승인 시 상태 수정 -->
	<update id="approveApprovalRfxProgUpcrDt">
		/* upcr-status.submitApprovalRfxProgUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_BID_WTG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 진행품의 결재반려 시 상태 수정 -->
	<update id="rejectApprovalRfxProgUpcrDt">
		/* upcr-status.rejectApprovalRfxProgUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFX_APVL_RET'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 진행품의 결재취소 시 상태 수정 -->
	<update id="cancelApprovalRfxProgUpcrDt">
		/* upcr-status.cancelApprovalRfxProgUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'RFX_CRNG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 진행품의 결재승인처리 시 상태 수정 -->
	<update id="bypassApprovalRfxProgUpcrDt">
		/* upcr-status.bypassApprovalRfxProgUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_BID_WTG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 시작 시 상태 수정 -->
	<update id="startRfxUpcrDt">
		/* upcr-status.startRfxUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_BID_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 마감 시 상태 수정 -->
	<update id="closeRfxUpcrDt">
		/* upcr-status.closeRfxUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 유찰 시 상태 수정 -->
	<update id="dropRfxHdUpcrDt">
		/* upcr-status.dropRfxHdUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 취소 시 상태 수정 -->
	<!-- RFx종료되지 않은 품목에 대한 견적 품목만 단가계약요청 접수 상태로 변경 -->
	<update id="cancelRfxHdUpcrDt">
		/* upcr-status.cancelRfxHdUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 멀티라운드 생성 시 이전차수의 상태 수정 -->
	<update id="multiRoundRfxUpcrDt">
		/* upcr-status.multiRoundRfxUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정품의 상신 시 상태 수정 -->
	<update id="submitApprovalRfxResultUpcrDt">
		/* upcr-status.submitApprovalRfxResultUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VP'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정품의 승인 시 상태 수정 -->
	<update id="approveApprovalRfxResultUpcrDtBySelectedItem">
		/* upcr-status.approveApprovalRfxResultUpcrDtBySelectedItem */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN #{p.rfx_purp_ccd} = 'SPTPURC' THEN 'PO_WTG'
		                          WHEN #{p.rfx_purp_ccd} = 'UPRCCNTR_SGNG' THEN 'CNTR_WTG'
		                          ELSE 'PO_WTG'
		                      END
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.selectedUpcrItems" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<update id="approveApprovalRfxResultUpcrDtByNonSelectedItem">
		/* upcr-status.approveApprovalRfxResultUpcrDtByNonSelectedItem */
		UPDATE UPCR_ITEM /* 미선정 품목 : 단가계약요청 접수 */
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.nonSelectedUpcrItems" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정품의 반려 시 상태 수정 -->
	<update id="rejectApprovalRfxResultUpcrDt">
		/* upcr-status.rejectApprovalRfxResultUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_APVL_RET'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정품의 취소 시 상태 수정 -->
	<update id="cancelApprovalRfxResultUpcrDt">
		/* upcr-status.cancelApprovalRfxResultUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정품의 결재 Bypass(승인처리) 시 상태 수정 -->
	<update id="bypassApprovalRfxResultUpcrDtBySelectedItem">
		/* upcr-status.bypassApprovalRfxResultUpcrDtBySelectedItem */
		UPDATE UPCR_ITEM /*선정 품목*/
		   SET UPCR_STS_CCD = CASE WHEN #{p.rfx_purp_ccd} = 'SPTPURC' THEN 'PO_WTG'
		                          WHEN #{p.rfx_purp_ccd} = 'UPRCCNTR_SGNG' THEN 'CNTR_WTG'
		                          ELSE 'PO_WTG'
		                      END
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.selectedUpcrItems" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<update id="bypassApprovalRfxResultUpcrDtByNonSelectedItem">
		/* upcr-status.bypassApprovalRfxResultUpcrDtByNonSelectedItem */
		UPDATE UPCR_ITEM /* 미선정 품목 */
		   SET UPCR_STS_CCD     = 'PR_RCPT' /*단가계약요청 접수*/
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.nonSelectedUpcrItems" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정취소 시 상태 수정  -->
	<update id="cancelRfxResultUpcrDt">
		/* upcr-status.cancelRfxResultUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'VD_SLCTN_PRGSG'
		     , UPCR_GRP_STS_CCD = 'VD_SLCTN_PRGSG'
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		   <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		       #{upcr_item_uuid}
		   </foreach>
	</update>
	<!-- RFx 선정취소 시 상태 수정 -->
	<update id="closeRfxResultUpcrDt">
		/* upcr-status.closeRfxResultUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN
		  <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		      #{upcr_item_uuid}
		  </foreach>
	</update>
	<!-- PO 임시저장 시 상태 수정 -->
	<update id="saveDraftPoUpcrDt">
		/* upcr-status.saveDraftPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PO_CRNG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID = #{p.po_uuid}
		                     )
	</update>
	<!-- PO 삭제 시 상태 수정 (1차수의 PO 삭제 시 해당 단가계약요청 품목을 단가계약요청접수 상태로 되돌림) -->
	<update id="deletePoUpcrDt">
		/* upcr-status.deletePoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                         AND PO_REVNO = 1
		                     )
	</update>
	<!-- PO 삭제 시 상태 수정 (2차수 이상의 PO 삭제 시 해당 단가계약요청 품목을 단가계약요청접수 상태로 되돌림) -->
	<update id="deletePoItemUpcrDt">
		/* upcr-status.deletePoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR_RCPT'
		     , UPCR_GRP_STS_CCD = 'RCPT'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
	                          SELECT UPCR_ITEM_UUID
	                            FROM PO_ITEM
	                           WHERE TEN_ID     = #{g.tenant}
	                             AND PO_ITEM_UUID = #{p.po_item_uuid}
	                             AND PO_REVNO     &gt; 1
		                     )
	</update>
	<!-- PO 결재상신 시 상태 수정 -->
	<update id="submitApprovalPoUpcrDt">
		/* upcr-status.submitApprovalPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PP'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- PO 결재승인 시 상태 수정 -->
	<update id="approveApprovalPoUpcrDt">
		/* upcr-status.approveApprovalPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET <choose>
		           <when test="p.cntr_sgng_typ_ccd == &quot;NA&quot;">
		               UPCR_STS_CCD = 'PO_CMPLD'
		             , UPCR_GRP_STS_CCD = 'CNTR_CMPLD'
		           </when>
		           <otherwise>
		               UPCR_STS_CCD = 'ECNTR_PRGSG'
		             , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		           </otherwise>
		       </choose>
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- PO 결재반려 시 상태 수정 -->
	<update id="rejectApprovalPoUpcrDt">
		/* upcr-status.rejectApprovalPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PR'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- PO 결재취소 시 상태 수정 -->
	<update id="cancelApprovalPoUpcrDt">
		/* upcr-status.cancelApprovalPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PO_CRNG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- PO 승인처리 시 상태 수정 -->
	<update id="bypassApprovalPoUpcrDt">
		/* upcr-status.bypassApprovalPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET <choose>
		           <when test="p.cntr_sgng_typ_ccd == &quot;NA&quot;">
		               UPCR_STS_CCD = 'PO_CMPLD'
		             , UPCR_GRP_STS_CCD = 'CNTR_CMPLD'
		           </when>
		           <otherwise>
		               UPCR_STS_CCD = 'ECNTR_PRGSG'
		             , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		           </otherwise>
		       </choose>
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- 전자계약 담당자 반송 시 상태 수정 -->
	<update id="returnElecCntrPoUpcrDt">
		/* upcr-status.returnElecCntrPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PW'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- 발주 전자계약 완료 시 상태 수정 -->
	<update id="completeElecCntrPoUpcrDt">
		/* upcr-status.completeElecCntrPoUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'PO_CMPLD'
		     , UPCR_GRP_STS_CCD = 'CNTR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM PO_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND PO_UUID  = #{p.po_uuid}
		                     )
	</update>
	<!-- 단가계약 작성대기 시 상태 수정 -->
	<update id="createDraftPriceContractUpcrDt">
		/* upcr-status.createDraftPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 단가계약 임시저장 시 상태 수정 -->
	<update id="saveDraftPriceContractUpcrDt">
		/* upcr-status.saveDraftPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 단가계약 결재상신 시 상태 수정 -->
	<update id="submitApprovalPriceContractUpcrDt">
		/* upcr-status.submitApprovalPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	  <!-- 단가계약 결재승인 시 상태 수정 -->
	<update id="approveApprovalPriceContractUpcrDt">
		/* upcr-status.approveApprovalPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET
<!-- 		       <choose> -->
<!-- 		           <when test='p.cntr_use_yn == "Y"'> -->
		               UPCR_STS_CCD = 'ECNTR_PRGSG'
		             , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
<!-- 		           </when> -->
<!-- 		           <otherwise> -->
<!-- 		               UPCR_STS_CCD = 'CNTR_CMPLD' -->
<!-- 		             , UPCR_GRP_STS_CCD = 'CNTR_CMPLD' -->
<!-- 		           </otherwise> -->
<!-- 		       </choose> -->
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	  <!-- 단가계약 결재반려 시 상태 수정 -->
	<update id="rejectApprovalPriceContractUpcrDt">
		/* upcr-status.rejectApprovalPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 단가계약 결재취소 시 상태 수정 -->
	<update id="cancelApprovalPriceContractUpcrDt">
		/* upcr-status.cancelApprovalPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 단가계약 승인처리 시 상태 수정 -->
	<update id="bypassApprovalPriceContractUpcrDt">
		/* upcr-status.bypassApprovalPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET
<!-- 		       <choose> -->
<!-- 		           <when test='p.cntr_use_yn == "Y"'> -->
		               UPCR_STS_CCD = 'ECNTR_PRGSG'
		             , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
<!-- 		           </when> -->
<!-- 		           <otherwise> -->
<!-- 		               UPCR_STS_CCD = 'CNTR_CMPLD' -->
<!-- 		             , UPCR_GRP_STS_CCD = 'CNTR_CMPLD' -->
<!-- 		           </otherwise> -->
<!-- 		       </choose> -->
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 전자계약 담당자 반송 시 상태 수정 -->
	<update id="returnElecCntrPriceContractUpcrDt">
		/* upcr-status.returnElecCntrPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_WTG'
		     , UPCR_GRP_STS_CCD = 'CNTR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 단가계약 전자계약 완료 시 상태 수정 -->
	<update id="completeElecCntrPriceContractUpcrDt">
		/* upcr-status.completeElecCntrPriceContractUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'CNTR_CMPLD'
		     , UPCR_GRP_STS_CCD = 'CNTR_CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM UPRCCNTR_ITEM
		                       WHERE TEN_ID  = #{g.tenant}
		                         AND UPRCCNTR_UUID = #{p.uprccntr_uuid}
		                     )
	</update>
	<!-- 납품예정(ASN)(협력사) -->
	<update id="requestAsnUpcrDt">
		/* upcr-status.requestAsnUpcrDt  */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID = #{p.asn_uuid}
		                     )
	</update>
	<!-- 검수등록(입고,GR) 임시저장 -->
	<update id="saveDraftGrUpcrDt">
		/* upcr-status.saveDraftGrUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID  = #{p.gr_uuid}
		                     )
	</update>
	<!-- 검수승인(입고,GR) 결재승인 시 상태변경 처리 -->
	<select id="checkPoQtyWithGrQty" resultType="map">
		/* upcr-status.checkPoQtyWithGrQty */
		SELECT X.TEN_ID          AS TEN_ID
		     , X.UPCR_ITEM_UUID      AS UPCR_ITEM_UUID
		     , SUM(X.SUM_PO_QTY) AS SUM_PO_QTY
		     , SUM(X.SUM_GR_QTY) AS SUM_GR_QTY
		  FROM (
		        SELECT CRNT_GRDT.TEN_ID
		             , CRNT_GRDT.UPCR_ITEM_UUID
		             , 0                                                                      AS SUM_PO_QTY
		             , SUM(CASE WHEN ALL_GRDT.GR_QTY IS NULL THEN 0 ELSE ALL_GRDT.GR_QTY END) AS SUM_GR_QTY /* GR 누적수량*/
		          FROM GR_ITEM CRNT_GRDT
		         INNER JOIN GR_ITEM ALL_GRDT
		            ON ALL_GRDT.TEN_ID      = CRNT_GRDT.TEN_ID
		           AND ALL_GRDT.UPCR_ITEM_UUID  = CRNT_GRDT.UPCR_ITEM_UUID
		           AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		           AND ALL_GRDT.STS        != 'D'
		         WHERE CRNT_GRDT.TEN_ID      = #{g.tenant}
		           AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		           AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'  /* GC: 검수완료 */
		           AND CRNT_GRDT.STS        != 'D'
		         GROUP BY CRNT_GRDT.TEN_ID, CRNT_GRDT.UPCR_ITEM_UUID
		         UNION ALL
		        SELECT CRNT_GRDT.TEN_ID
		             , CRNT_GRDT.UPCR_ITEM_UUID
		             , SUM(CASE WHEN PODT.PO_QTY IS NULL THEN 0 ELSE PODT.PO_QTY END) AS SUM_PO_QTY /* PO 수량*/
		             , 0                                                                  AS SUM_GR_QTY
		          FROM GR_ITEM CRNT_GRDT
		         INNER JOIN PO_ITEM PODT
		            ON PODT.TEN_ID      = CRNT_GRDT.TEN_ID
		           AND PODT.UPCR_ITEM_UUID  = CRNT_GRDT.UPCR_ITEM_UUID
		           AND PODT.STS        != 'D'
		         INNER JOIN PO POHD /* UPCR품목으로 RFx업체선정 시 수량분할하여 서로 다른 업체로 발주를 생성할 수도 있으므로 모든 유효 PO 수량을 SUM한다 */
		            ON POHD.TEN_ID      = PODT.TEN_ID
		           AND POHD.PO_UUID       = PODT.PO_UUID
		           AND POHD.PO_STS_CCD = 'APVD'
		           AND POHD.EFCT_PO_YN  = 'Y' /*최종 유효 PO*/
		           AND POHD.STS        != 'D'
		         WHERE CRNT_GRDT.TEN_ID      = #{g.tenant}
		           AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		           AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'  /* GC: 검수완료 */
		           AND CRNT_GRDT.STS        != 'D'
		         GROUP BY CRNT_GRDT.TEN_ID, CRNT_GRDT.UPCR_ITEM_UUID
		       ) X
		 GROUP BY X.TEN_ID, X.UPCR_ITEM_UUID
	</select>
	<update id="approveApprovalGrUpcrDtByItem">
		/* upcr-status.approveApprovalGrUpcrDtByItem */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN CAST(#{p.sum_gr_qty} AS FLOAT  ) = CAST(#{p.sum_po_qty} AS FLOAT  )
		                               THEN 'GR_CMPLD'  /* GR_CMPLD: 검수완료 */
		                          ELSE 'GR_REQ'       /* GR_REQ: 검수진행 */
		                      END
		     , UPCR_GRP_STS_CCD = CASE WHEN CAST(#{p.sum_gr_qty} AS FLOAT  ) = CAST(#{p.sum_po_qty} AS FLOAT  )
		                                   THEN 'GR_CMPLD'  /* GR_CMPLD: 검수완료 */
		                              ELSE 'GR_PRGSG'       /* GR_PRGSG: 검수진행 */
		                          END
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
	</update>
	<!-- 검수등록(입고,GR) 승인처리 -->
	<update id="bypassApprovalGrUpcrDtByItem">
		/* upcr-status.bypassApprovalGrUpcrDtByItem */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN CAST(#{p.sum_gr_qty} AS FLOAT  ) = CAST(#{p.sum_po_qty} AS FLOAT  )
		                               THEN 'GR_CMPLD'  /* GR_CMPLD: 검수완료 */
		                          ELSE 'GR_REQ'       /* GR_REQ: 검수진행 */
		                      END
		     , UPCR_GRP_STS_CCD = CASE WHEN CAST(#{p.sum_gr_qty} AS FLOAT  ) = CAST(#{p.sum_po_qty} AS FLOAT  )
		                                   THEN 'GR_CMPLD'  /* GR_CMPLD: 검수완료 */
		                              ELSE 'GR_PRGSG'       /* GR_PRGSG: 검수진행 */
		                          END
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
	</update>
	<!-- 납품예정 반려 -->
	<update id="rejectRequestAsnUpcrDt">
		/* upcr-status.rejectRequestAsnUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- 검수승인(입고,GR) 취소 -->
	<update id="cancelGrUpcrDt">
		/* upcr-status.cancelGrUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID  = #{p.gr_uuid}
		                     )
	</update>
	<!-- 기성요청(협력사) -->
	<update id="requestServiceAsnUpcrDt">
		/* upcr-status.requestAsnUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- 기성등록(입고,GR) 임시저장 -->
	<update id="saveDraftServiceGrUpcrDt">
		/* upcr-status.saveDraftServiceUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID = #{p.gr_uuid}
		                     )
	</update>
	<!-- 기성등록(입고,GR) 결재승인 -->
	<select id="checkPoAmtWithGrAmt" resultType="map">
		/* upcr-status.checkPoAmtWithGrAmt */
		SELECT X.TEN_ID          AS TEN_ID
		     , X.UPCR_ITEM_UUID      AS UPCR_ITEM_UUID
		     , SUM(X.SUM_PO_AMT) AS SUM_PO_AMT
		     , SUM(X.SUM_GR_AMT) AS SUM_GR_AMT
		  FROM (
		        SELECT CRNT_GRDT.TEN_ID
		             , CRNT_GRDT.UPCR_ITEM_UUID
		             , 0                                                                      AS SUM_PO_AMT
		             , SUM(CASE WHEN ALL_GRDT.GR_AMT IS NULL THEN 0 ELSE ALL_GRDT.GR_AMT END) AS SUM_GR_AMT /* 기성 누적 금액*/
		          FROM GR_ITEM CRNT_GRDT
		         INNER JOIN GR_ITEM ALL_GRDT
		            ON ALL_GRDT.TEN_ID      = CRNT_GRDT.TEN_ID
		           AND ALL_GRDT.UPCR_ITEM_UUID  = CRNT_GRDT.UPCR_ITEM_UUID
		           AND ALL_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'
		           AND ALL_GRDT.STS        != 'D'
		         WHERE CRNT_GRDT.TEN_ID      = #{g.tenant}
		           AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		           AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		           AND CRNT_GRDT.STS        != 'D'
		         GROUP BY CRNT_GRDT.TEN_ID, CRNT_GRDT.UPCR_ITEM_UUID
		         UNION ALL
		        SELECT CRNT_GRDT.TEN_ID
		             , CRNT_GRDT.UPCR_ITEM_UUID
		             , SUM(CASE WHEN PODT.PO_AMT IS NULL THEN 0 ELSE PODT.PO_AMT END) AS SUM_PO_AMT /* PO 금액*/
		             , 0                                                                  AS SUM_GR_AMT
		          FROM GR_ITEM CRNT_GRDT
		         INNER JOIN PO_ITEM PODT
		            ON PODT.TEN_ID      = CRNT_GRDT.TEN_ID
		           AND PODT.UPCR_ITEM_UUID  = CRNT_GRDT.UPCR_ITEM_UUID
		           AND PODT.STS        != 'D'
		         INNER JOIN PO POHD /* UPCR품목으로 RFx업체선정 시 수량분할하여 서로 다른 업체로 발주를 생성할 수도 있으므로 모든 유효 PO 수량을 SUM한다 */
		            ON POHD.TEN_ID      = PODT.TEN_ID
		           AND POHD.PO_UUID       = PODT.PO_UUID
		           AND POHD.PO_STS_CCD = 'APVD'
		           AND POHD.EFCT_PO_YN  = 'Y' /*최종 유효 PO*/
		           AND POHD.STS        != 'D'
		         WHERE CRNT_GRDT.TEN_ID      = #{g.tenant}
		           AND CRNT_GRDT.GR_UUID       = #{p.gr_uuid}
		           AND CRNT_GRDT.GR_ITEM_STS_CCD = 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		           AND CRNT_GRDT.STS        != 'D'
		         GROUP BY CRNT_GRDT.TEN_ID, CRNT_GRDT.UPCR_ITEM_UUID
		       ) X
		 GROUP BY X.TEN_ID, X.UPCR_ITEM_UUID
	</select>
	<update id="approveApprovalServiceGrUpcrDtByItem">
		/* upcr-status.approveApprovalServiceGrUpcrDtByItem */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN CAST(#{p.sum_po_amt} AS FLOAT  ) <![CDATA[<=]]> CAST(#{p.sum_gr_amt} AS FLOAT  )
		                               THEN 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		                          ELSE 'GR_PRGSG'       /* GR_REQ: 기성진행 */
		                      END
		     , UPCR_GRP_STS_CCD = CASE WHEN CAST(#{p.sum_po_amt} AS FLOAT  ) <![CDATA[<=]]> CAST(#{p.sum_gr_amt} AS FLOAT  )
		                                   THEN 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		                              ELSE 'GR_PRGSG'       /* GR_PRGSG: 기성진행 */
		                          END
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
	</update>
	<update id="bypassApprovalServiceGrUpcrDtByItem">
		/* upcr-status.bypassApprovalServiceGrUpcrDtByItem: 기성등록(입고,GR) 결재승인 */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = CASE WHEN CAST(#{p.sum_po_amt} AS FLOAT  ) <![CDATA[<=]]> CAST(#{p.sum_gr_amt} AS FLOAT  )
		                               THEN 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		                          ELSE 'GR_PRGSG'       /* GR_REQ: 기성진행 */
		                      END
		     , UPCR_GRP_STS_CCD = CASE WHEN CAST(#{p.sum_po_amt} AS FLOAT  ) <![CDATA[<=]]> CAST(#{p.sum_gr_amt} AS FLOAT  )
		                                   THEN 'GR_CMPLD'  /* GR_CMPLD: 기성완료 */
		                              ELSE 'GR_PRGSG'       /* GR_PRGSG: 기성진행 */
		                          END
		 WHERE TEN_ID     = #{g.tenant}
		   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
	</update>
	<!-- 기성요청 반려 -->
	<update id="rejectRequestServiceAsnUpcrDt">
		/* upcr-status.rejectRequestServiceAsnUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM ASN_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND ASN_UUID  = #{p.asn_uuid}
		                     )
	</update>
	<!-- 기성승인(입고,GR) 취소 -->
	<update id="cancelServiceGrUpcrDt">
		/* upcr-status.cancelServiceGrUpcrDt */
		UPDATE UPCR_ITEM
		   SET UPCR_STS_CCD = 'GR_REQ'
		     , UPCR_GRP_STS_CCD = 'GR_PRGSG'
		 WHERE TEN_ID = #{g.tenant}
		   AND UPCR_ITEM_UUID IN (
		                      SELECT UPCR_ITEM_UUID
		                        FROM GR_ITEM
		                       WHERE TEN_ID = #{g.tenant}
		                         AND GR_UUID  = #{p.gr_uuid}
		                         AND GR_AMT &gt; 0
		                     )
	</update>
	<select id="findListReferenceDocFromUPCRByUPCR" resultType="map">
	SELECT #{p.sortkey}                                        AS SORTKEY
					  , 'UPCR'                                        AS APP_TYPE
					  , HD.UPCR_UUID                                    AS APP_ID
					  , HD.UPCR_NO                                    AS DOC_NO
					  , CAST(HD.UPCR_REVNO AS INTEGER)                  AS DOC_REV
					  , HD.UPCR_STS_CCD                              AS PROG_STS
					  , ( SELECT DTLCD_NM
							FROM DTLCD_MULTLANG
						   WHERE TEN_ID  = HD.TEN_ID
							 AND CCD  = 'P011'
							 AND DTLCD  = HD.UPCR_STS_CCD
							 AND LANG_CCD = #{g.locale} )            AS STS_NM
					  , HD.UPCR_TIT                                   AS DOC_TITLE
					  , ''                                          AS MOD_TYP
					  , ''                                          AS COMP_YN
				   FROM UPCR HD
				  WHERE HD.TEN_ID = #{g.tenant}
					AND HD.UPCR_NO  = #{p.upcr_no}
					AND HD.STS   != 'D'
	</select>
	<select id="findListReferenceDocFromUPCRByUpcrItemIds" resultType="map">
	SELECT #{p.sortkey}                                          AS SORTKEY
	              , 'UPCR'                                         AS APP_TYPE
	              , HD.UPCR_UUID                                     AS APP_ID
	              , HD.UPCR_NO                       AS DOC_NO
	              , CAST(HD.UPCR_REVNO AS INTEGER)                   AS DOC_REV
	              , HD.UPCR_STS_CCD                               AS PROG_STS
	              , ( SELECT DTLCD_NM
	                    FROM DTLCD_MULTLANG
	                   WHERE TEN_ID  = HD.TEN_ID
	                     AND CCD  = 'P011'
	                     AND DTLCD  = HD.UPCR_STS_CCD
	                     AND LANG_CCD = #{g.locale} )             AS STS_NM
	              , HD.UPCR_TIT                                    AS DOC_TITLE
	              , ''                                           AS MOD_TYP
	              , ''                                           AS COMP_YN
	           FROM UPCR HD
	          WHERE HD.TEN_ID = #{g.tenant}
	            AND HD.UPCR_UUID IN ( SELECT UPCR_UUID
	                                FROM UPCR_ITEM
	                               WHERE TEN_ID     = #{g.tenant}
	                                 AND UPCR_ITEM_UUID IN
	                                     <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
										   #{upcr_item_uuid}
									   </foreach>
	                                 AND STS        != 'D'
	                            )
	</select>
	<select id="findListReferenceIds" resultType="map">
	/* upcr-status.findListReferenceIds */
	SELECT UPCR_ITEM_UUID
	FROM UPCR_ITEM
	WHERE TEN_ID = #{g.tenant}
		AND UPCR_UUID = #{p.upcr_uuid}
	AND STS != 'D'
	</select>
	<!-- RFx 선정 후 Target-Price 호출 -->
	<select id="findPriceGateItems" resultType="map">
		/* upcr-status.findPriceGateItems */
		SELECT Z.UPCR_ITEM_UUID
		     , Z.RFX_UUID
		     , Z.RFX_ITEM_UUID
		     , Z.PURC_GRP_CD
		     , Y.SLCTN_AMT
		     , X.CUR_CCD
		  FROM RFX_ITEM Z
		 INNER JOIN RFX_BID_ITEM Y
		    ON Y.TEN_ID          = Z.TEN_ID
		   AND Y.RFX_ITEM_UUID   = Z.RFX_ITEM_UUID
		   AND Y.SLCTN_YN        = 'Y'
		   AND Y.STS            != 'D'
		 INNER JOIN RFX_BID X
		    ON X.TEN_ID          = Z.TEN_ID
		   AND X.RFX_UUID        = Z.RFX_UUID
		   AND X.STS            != 'D'
		 INNER JOIN UPCR_ITEM W
		    ON W.TEN_ID          = Z.TEN_ID
		   AND W.UPCR_ITEM_UUID  = Z.UPCR_ITEM_UUID
		   AND W.BOM_UUID        IS NOT NULL  WHERE Z.TEN_ID          = #{g.tenant}
		   AND Z.UPCR_ITEM_UUID IN
		<foreach close=")" collection="p.selectedUpcrItems" item="upcr_item_uuid" open="(" separator=",">
			#{upcr_item_uuid}
		</foreach>
	</select>
	<update id="updatePriceGateByRfx">
		/* upcr-status.updatePriceGateByRfx */
		UPDATE GATE_RFX A
		   SET A.RFX_UUID        = #{p.rfx_uuid}
		     , A.RFX_ITEM_UUID   = #{p.rfx_item_uuid}
		     , A.SLCTN_UPRC      = #{p.slctn_amt}
		     , A.PURC_GRP_CD     = #{p.purc_grp_cd}
		     , A.RFX_CMPLD_DTTM  = #{g.now}
		     , A.RFX_CUR_CCD     = #{p.cur_ccd}
		     , A.MODR_ID         = #{g.username}
		     , A.MOD_DTTM        = #{g.now}
		 WHERE TEN_ID            = #{g.tenant}
		   AND A.UPCR_ITEM_UUID  = #{p.upcr_item_uuid}
		   AND A.STS            != 'D'
	</update>
	<!-- RFx 선정 후 Target-Price 호출 END -->
</mapper>
