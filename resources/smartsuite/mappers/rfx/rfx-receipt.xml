<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rfx-receipt">
	<insert id="insertReceiptReqRfx">
		INSERT INTO RFX_REQ_RCPT (
			TEN_ID
			, RFX_REQ_RCPT_UUID
			, OORG_CD
			, REQ_DOC_TYP_CCD
			, REQ_DT
			, REQ_RET_RSN
			, RCPT_STS_CCD
			, RCPT_DT
			, PRGS_STS_CCD
			, REQ_TIT
			, PURC_TYP_CCD
			, REQ_PURP_CCD
			, PLT_CD
			, ITEM_OORG_CD
			, ITEM_CD
			, ITEM_NM
			, ITEM_NM_EN
			, ITEM_SPEC
			, ITEM_SPEC_DTL
			, ITEM_CD_CRN_TYP_CCD
			, QTA_YN
			, TL_YN
			, UOM_CCD
			, CUR_CCD
			, REQ_QTY
			, REQ_UPRC
			, REQ_AMT
			, RMNG_QTY
			, WH_CCD
			, REQ_DLVY_DT
			, CONST_ST_DT
			, CONST_EXP_DT
			, DLVY_PLC
			, REQ_PIC_ID
			, RFX_PIC_ID
			, PURC_GRP_CD
			, GR_PIC_ID
			, PR_ITEM_UUID
			, PR_UUID
			, PR_NO
			, PR_REVNO
			, PR_LNO
			, UPCR_ITEM_UUID
			, UPCR_UUID
			, UPCR_NO
			, UPCR_REVNO
			, UPCR_LNO
			, SR_ITEM_UUID
			, SR_UUID
			, SR_NO
			, SR_REVNO
			, SR_LNO
		    , CAOV_UPRC
		    , REQD_DT
			, STS
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			  #{g.tenant}
			, #{p.rfx_req_rcpt_uuid}
			, #{p.oorg_cd}
			, #{p.req_doc_typ_ccd}
			, #{p.req_dt}
			, #{p.req_ret_rsn}
			, #{p.rcpt_sts_ccd}
			, #{p.rcpt_dt}
			, #{p.prgs_sts_ccd}
			, #{p.req_tit}
			, #{p.purc_typ_ccd}
			, #{p.req_purp_ccd}
			, #{p.plt_cd}
			, #{p.item_oorg_cd}
			, #{p.item_cd}
			, #{p.item_nm}
			, #{p.item_nm_en}
			, #{p.item_spec}
			, #{p.item_spec_dtl}
			, #{p.item_cd_crn_typ_ccd}
			, #{p.qta_yn}
			, #{p.tl_yn}
			, #{p.uom_ccd}
			, #{p.cur_ccd}
			, #{p.req_qty}
			, #{p.req_uprc}
			, #{p.req_amt}
			, #{p.rmng_qty}
			, #{p.wh_ccd}
			, #{p.req_dlvy_dt}
			, #{p.const_st_dt}
			, #{p.const_exp_dt}
			, #{p.dlvy_plc}
			, #{p.req_pic_id}
			, #{p.rfx_pic_id}
			, #{p.purc_grp_cd}
			, #{p.gr_pic_id}
			, #{p.pr_item_uuid}
			, #{p.pr_uuid}
			, #{p.pr_no}
			, #{p.pr_revno}
			, #{p.pr_lno}
			, #{p.upcr_item_uuid}
			, #{p.upcr_uuid}
			, #{p.upcr_no}
			, #{p.upcr_revno}
			, #{p.upcr_lno}
			, #{p.sr_item_uuid}
			, #{p.sr_uuid}
			, #{p.sr_no}
			, #{p.sr_revno}
			, #{p.sr_lno}
			, CAST(#{p.caov_uprc} AS FLOAT  )
			, #{p.reqd_dt}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="receiptReq">
		UPDATE RFX_REQ_RCPT
		   SET RCPT_STS_CCD = 'RCPT'
		     , RCPT_DT = #{g.now}
		     , RFX_PIC_ID = #{p.rfx_pic_id}
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<update id="returnReq">
		UPDATE RFX_REQ_RCPT
		   SET REQ_RET_RSN = #{p.req_ret_rsn}
		     , RCPT_STS_CCD = 'RET'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<update id="changePurcGrp">
		UPDATE RFX_REQ_RCPT
		   SET PURC_GRP_CD = #{p.purc_grp_cd}
		     , RFX_PIC_ID = NULL
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<resultMap id="rfxReqRcptValidCheckMap" type="java.util.HashMap">
		<result column="VALID_YN" property="valid_yn"/>
		<collection javaType="java.util.ArrayList" property="itemList" resultMap="rfxReqRcptItemDtMap"/>
	</resultMap>
	<resultMap id="rfxReqRcptItemDtMap" type="java.util.HashMap">
		<id column="RFX_REQ_RCPT_UUID" property="rfx_req_rcpt_uuid"/>
		<result column="REQ_ITEM_UUID" property="req_item_uuid"/>
		<result column="REQ_NO" property="req_no"/>
		<result column="REQ_REVNO" property="req_revno"/>
		<result column="REQ_LNO" property="req_lno"/>
		<result column="RCPT_STS_CCD" property="rcpt_sts_ccd"/>
		<result column="RCPT_STS_CCD_NM" property="rcpt_sts_ccd_nm"/>
	</resultMap>
	<select id="compareListRfxReceiptSts" resultMap="rfxReqRcptValidCheckMap">
		SELECT RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_ITEM_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_ITEM_UUID
		        END AS REQ_ITEM_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_NO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_NO
		        END AS REQ_NO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_REVNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_REVNO
		        END AS REQ_REVNO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_LNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_LNO
		        END AS REQ_LNO
		     , RFX_REQ_RCPT.RCPT_STS_CCD
		     , CDDL.DTLCD_NM AS RCPT_STS_CCD_NM
		     <choose>
		         <when test="p.availableStsList != null">
		             , CASE WHEN RFX_REQ_RCPT.RCPT_STS_CCD IN
		             <foreach close=")" collection="p.availableStsList" item="sts" open="(" separator=",">
		                 #{sts}
		             </foreach>
		                         THEN 'Y'
		                    ELSE 'N'
		                END AS VALID_YN
		         </when>
		         <otherwise>
		             , CASE WHEN RFX_REQ_RCPT.RCPT_STS_CCD = #{p.rcpt_sts_ccd} THEN 'Y'
		                    ELSE 'N'
		                END AS VALID_YN
		         </otherwise>
		     </choose>
		  FROM RFX_REQ_RCPT
		 INNER JOIN TEMP_TBL
		    ON TEMP_TBL.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND TEMP_TBL.TASK_ID = RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		   AND TEMP_TBL.USR_ID = #{g.username}
		 INNER JOIN DTLCD CDDT
		    ON CDDT.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND CDDT.CCD = 'C086'
		   AND CDDT.DTLCD = RFX_REQ_RCPT.RCPT_STS_CCD
		   AND CDDT.USE_YN = 'Y'
		   AND CDDT.STS   != 'D'
		 INNER JOIN DTLCD_MULTLANG CDDL
		    ON CDDL.TEN_ID  = CDDT.TEN_ID
		   AND CDDL.CCD  = CDDT.CCD
		   AND CDDL.DTLCD  = CDDT.DTLCD
		   AND CDDL.LANG_CCD = #{g.locale}
		   AND CDDL.STS    != 'D'
		 WHERE RFX_REQ_RCPT.TEN_ID  = #{g.tenant}
	</select>
	<select id="findListRfxReceipt" resultType="map">
		SELECT RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		     , RFX_REQ_RCPT.OORG_CD
		     , RFX_REQ_RCPT.REQ_DOC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_DT
		     , RFX_REQ_RCPT.REQ_RET_RSN
		     , RFX_REQ_RCPT.RCPT_STS_CCD
		     , RFX_REQ_RCPT.RCPT_DT
		     , RFX_REQ_RCPT.PRGS_STS_CCD
		     , RFX_REQ_RCPT.REQ_TIT
		     , RFX_REQ_RCPT.PURC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_PURP_CCD
		     , RFX_REQ_RCPT.PLT_CD
		     , RFX_REQ_RCPT.ITEM_OORG_CD
		     , RFX_REQ_RCPT.ITEM_CD
		     , RFX_REQ_RCPT.ITEM_NM
		     , RFX_REQ_RCPT.ITEM_NM_EN
		     , CASE WHEN #{g.locale} = 'en_US' THEN RFX_REQ_RCPT.ITEM_NM_EN
		            ELSE RFX_REQ_RCPT.ITEM_NM
		        END AS DISP_ITEM_NM
		     , RFX_REQ_RCPT.ITEM_SPEC
		     , RFX_REQ_RCPT.ITEM_SPEC_DTL
		     , RFX_REQ_RCPT.ITEM_CD_CRN_TYP_CCD
		     , RFX_REQ_RCPT.TL_YN
		     , RFX_REQ_RCPT.QTA_YN
		     , RFX_REQ_RCPT.UOM_CCD
		     , RFX_REQ_RCPT.CUR_CCD
		     , RFX_REQ_RCPT.REQ_QTY
		     , RFX_REQ_RCPT.REQ_UPRC
		     , RFX_REQ_RCPT.REQ_AMT
		     , RFX_REQ_RCPT.RMNG_QTY
		     , RFX_REQ_RCPT.WH_CCD
		     , RFX_REQ_RCPT.REQ_DLVY_DT
		     , RFX_REQ_RCPT.CONST_ST_DT
		     , RFX_REQ_RCPT.CONST_EXP_DT
		     , RFX_REQ_RCPT.DLVY_PLC
		     , RFX_REQ_RCPT.REQ_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN REQ_USR.USR_NM_EN
		            ELSE REQ_USR.USR_NM
		        END AS DISP_REQ_PIC_NM
		     , RFX_REQ_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS DISP_PURC_GRP_NM
		     , RFX_REQ_RCPT.RFX_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN RFX_USR.USR_NM_EN
		            ELSE RFX_USR.USR_NM
		        END AS DISP_RFX_PIC_NM
		     , RFX_REQ_RCPT.GR_PIC_ID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_ITEM_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_ITEM_UUID
					WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_ITEM_UUID
		        END AS REQ_ITEM_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_UUID
		        END AS REQ_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_NO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_NO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_NO
		        END AS REQ_NO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_REVNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_REVNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_REVNO
		        END AS REQ_REVNO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_LNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_LNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_LNO
		        END AS REQ_LNO
		     , RFX_REQ_RCPT.PR_ITEM_UUID
		     , RFX_REQ_RCPT.PR_UUID
		     , RFX_REQ_RCPT.PR_NO
		     , RFX_REQ_RCPT.PR_REVNO
		     , RFX_REQ_RCPT.PR_LNO
		     , RFX_REQ_RCPT.UPCR_ITEM_UUID
		     , RFX_REQ_RCPT.UPCR_UUID
		     , RFX_REQ_RCPT.UPCR_NO
		     , RFX_REQ_RCPT.UPCR_REVNO
		     , RFX_REQ_RCPT.UPCR_LNO
		     , RFX_REQ_RCPT.SR_ITEM_UUID
		     , RFX_REQ_RCPT.SR_UUID
		     , RFX_REQ_RCPT.SR_NO
		     , RFX_REQ_RCPT.SR_REVNO
		     , RFX_REQ_RCPT.SR_LNO
		     , RFX_REQ_RCPT.RFX_NXT_PRCS_REQ_UUID
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_NO
		     , RFX_NXT_PRCS_REQ.REQ_STS_CCD
		     , RFX_REQ_RCPT.CNTR_UUID
		     , RFX_REQ_RCPT.CNTR_NO
		     , RFX_REQ_RCPT.CNTR_REVNO
		     , RFX_REQ_RCPT.PURC_CNTR_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_INFO_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_ITEM_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_ITEM_LNO
		     <!--, CASE WHEN RFX_REQ_RCPT.CNTR_NO IS NOT NULL
		                 <if test="_databaseId == 'postgresql'">AND RFX_REQ_RCPT.CNTR_NO != ''</if>
		                 <if test="_databaseId == 'mssql'">AND RFX_REQ_RCPT.CNTR_NO != ''</if>
		                 THEN 'Y'
		            WHEN (
		                  SELECT COUNT(*)
		                    FROM RFX_REQ_RCPT_QTA_ALOC
		                   WHERE RFX_REQ_RCPT_QTA_ALOC.TEN_ID = RFX_REQ_RCPT.TEN_ID
		                     AND RFX_REQ_RCPT_QTA_ALOC.RFX_REQ_RCPT_UUID = RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		                     AND RFX_REQ_RCPT_QTA_ALOC.STS != 'D'
		                 ) > 0 THEN 'Y'
		            ELSE 'N'
		        END AS CNTR_CNFD_YN-->
		  FROM RFX_REQ_RCPT
		  LEFT OUTER JOIN RFX_NXT_PRCS_REQ
		    ON RFX_NXT_PRCS_REQ.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND RFX_NXT_PRCS_REQ.RFX_NXT_PRCS_REQ_UUID = RFX_REQ_RCPT.RFX_NXT_PRCS_REQ_UUID
		 INNER JOIN USR REQ_USR
		    ON REQ_USR.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND REQ_USR.USR_ID = RFX_REQ_RCPT.REQ_PIC_ID
		  LEFT OUTER JOIN USR RFX_USR
		    ON RFX_USR.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND RFX_USR.USR_ID = RFX_REQ_RCPT.RFX_PIC_ID
		  LEFT OUTER JOIN PURC_GRP
		    ON PURC_GRP.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND PURC_GRP.CO_CD = #{g.co_cd}
		   AND PURC_GRP.PURC_GRP_CD = RFX_REQ_RCPT.PURC_GRP_CD
		 WHERE RFX_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT.STS != 'D'
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND RFX_REQ_RCPT.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_req_dt != null">
		       AND RFX_REQ_RCPT.REQ_DT &gt;= #{p.from_req_dt}
		   </if>
		   <if test="p.to_req_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_req_dt,1)"/>
		       AND RFX_REQ_RCPT.REQ_DT <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.req_purp_ccd != null">
		       AND RFX_REQ_RCPT.REQ_PURP_CCD = #{p.req_purp_ccd}
		   </if>
		   <if test="p.purc_typ_ccd != null">
		       AND RFX_REQ_RCPT.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <if test="p.rcpt_sts_ccds != null and p.rcpt_sts_ccds.size() != 0">
		       AND RFX_REQ_RCPT.RCPT_STS_CCD IN
		       <foreach close=")" collection="p.rcpt_sts_ccds" item="rcpt_sts_ccd" open="(" separator=",">
		           #{rcpt_sts_ccd}
		       </foreach>
		   </if>
		   <if test="p.prgs_sts_ccds != null and p.prgs_sts_ccds.size() != 0">
		       AND RFX_REQ_RCPT.PRGS_STS_CCD IN
		       <foreach close=")" collection="p.prgs_sts_ccds" item="prgs_sts_ccd" open="(" separator=",">
		           #{prgs_sts_ccd}
		       </foreach>
		   </if>
		   <choose>
		       <when test="p.req_nos != null and p.req_nos.size() != 0">
		           AND (UPPER(RFX_REQ_RCPT.PR_NO) IN
		           <foreach close=")" collection="p.req_nos" item="req_no" open="(" separator=",">
		               #{req_no}
		           </foreach>
		           OR UPPER(RFX_REQ_RCPT.UPCR_NO) IN
		           <foreach close=")" collection="p.req_nos" item="req_no" open="(" separator=",">
		               #{req_no}
		           </foreach>)
		       </when>
		       <otherwise>
		           <if test="p.req_no != null and p.req_no != ''">
		               <bind name="noPattern" value="'%' + p.req_no + '%'"/>
		               AND (UPPER(RFX_REQ_RCPT.PR_NO) LIKE UPPER(#{noPattern}) OR UPPER(RFX_REQ_RCPT.UPCR_NO) LIKE UPPER(#{noPattern}))
		           </if>
		       </otherwise>
		   </choose>
		   <if test="p.req_tit != null and p.req_tit != ''">
		       <bind name="titPattern" value="'%' + p.req_tit + '%'"/>
		       AND UPPER(RFX_REQ_RCPT.REQ_TIT) LIKE UPPER(#{titPattern})
		   </if>
		   <if test="p.req_pic_id != null and p.req_pic_id != ''">
		       AND RFX_REQ_RCPT.REQ_PIC_ID = #{p.req_pic_id}
		   </if>
		   <if test="p.req_pic_nm != null and p.req_pic_nm != ''">
		       <bind name="namePattern" value="'%' + p.req_pic_nm + '%'"/>
		       AND (REQ_USR.USR_NM LIKE #{namePattern} OR REQ_USR.USR_NM_EN LIKE #{namePattern})
		   </if>
		   <if test="p.rfx_pic_id != null and p.rfx_pic_id != ''">
		       AND (RFX_REQ_RCPT.RFX_PIC_ID = #{p.rfx_pic_id} OR RFX_REQ_RCPT.RFX_PIC_ID IS NULL OR RFX_REQ_RCPT.RFX_PIC_ID = '')
		   </if>
		   <if test="p.rfx_pic_nm != null and p.rfx_pic_nm != ''">
		       <bind name="rfxPicNamePattern" value="'%' + p.rfx_pic_nm + '%'"/>
		       AND (RFX_USR.USR_NM LIKE #{rfxPicNamePattern} OR RFX_USR.USR_NM_EN LIKE #{rfxPicNamePattern} OR RFX_REQ_RCPT.RFX_PIC_ID IS NULL OR RFX_REQ_RCPT.RFX_PIC_ID = '')
		   </if>
		   <choose>
		       <when test="p.purc_grp_cds != null and p.purc_grp_cds.size() != 0">
		           AND (RFX_REQ_RCPT.PURC_GRP_CD IN
		           <foreach close=")" collection="p.purc_grp_cds" item="purc_grp_cd" open="(" separator=",">
		               #{purc_grp_cd}
		           </foreach> OR RFX_REQ_RCPT.PURC_GRP_CD IS NULL)
		       </when>
		       <otherwise>
		           AND 1=2
		       </otherwise>
		   </choose>
		   <choose>
		       <when test="p.item_cds != null and p.item_cds.size() != 0">
		           AND UPPER(RFX_REQ_RCPT.ITEM_CD) IN
		           <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		               #{item_cd}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.item_cd != null and p.item_cd != ''">
		               <bind name="cdPattern" value="'%' + p.item_cd + '%'"/>
		               AND UPPER(RFX_REQ_RCPT.ITEM_CD) LIKE UPPER(#{cdPattern})
		           </if>
		       </otherwise>
		   </choose>
		 ORDER BY RFX_REQ_RCPT.REQ_DT DESC
		        , RFX_REQ_RCPT.PR_NO DESC
		        , CAST(RFX_REQ_RCPT.PR_LNO AS INT)
		        , RFX_REQ_RCPT.UPCR_NO DESC
		        , CAST(RFX_REQ_RCPT.UPCR_LNO AS INT)
		   		, RFX_REQ_RCPT.SR_NO DESC
		        , CAST(RFX_REQ_RCPT.SR_LNO AS INT)
	</select>
	<select id="findRfxDefaultDataByReqRcpts" resultType="map">
		SELECT RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		     , RFX_REQ_RCPT.OORG_CD
		     , RFX_REQ_RCPT.REQ_DOC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_TIT
		     , RFX_REQ_RCPT.PURC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_PURP_CCD AS RFX_PURP_CCD
		     , RFX_REQ_RCPT.RCPT_STS_CCD
		     , RFX_REQ_RCPT.PLT_CD
		     , RFX_REQ_RCPT.ITEM_OORG_CD
		     , RFX_REQ_RCPT.ITEM_CD
		     , CASE WHEN RFX_REQ_RCPT.ITEM_CD_CRN_TYP_CCD = 'CDLS' THEN NULL -- 구매품목유형: 미등록(무코드품목)
		            ELSE RFX_REQ_RCPT.ITEM_CD
		        END AS DISP_ITEM_CD
		     , RFX_REQ_RCPT.ITEM_NM
		     , RFX_REQ_RCPT.ITEM_NM_EN
		     , CASE WHEN #{g.locale} = 'en_US' THEN RFX_REQ_RCPT.ITEM_NM_EN
		            ELSE RFX_REQ_RCPT.ITEM_NM
		        END AS DISP_ITEM_NM
		     , RFX_REQ_RCPT.ITEM_SPEC
		     , RFX_REQ_RCPT.ITEM_SPEC_DTL
		     , RFX_REQ_RCPT.ITEM_CD_CRN_TYP_CCD
		     , RFX_REQ_RCPT.UOM_CCD
		     , RFX_REQ_RCPT.CUR_CCD
		     , RFX_REQ_RCPT.REQ_QTY
		     , RFX_REQ_RCPT.REQ_UPRC
		     , RFX_REQ_RCPT.REQ_AMT
		     , RFX_REQ_RCPT.WH_CCD
			 , CASE WHEN RFX_REQ_RCPT.REQ_PURP_CCD = 'PSR' THEN RFX_REQ_RCPT.REQD_DT ELSE RFX_REQ_RCPT.REQ_DLVY_DT END AS REQ_DLVY_DT
		     , RFX_REQ_RCPT.CONST_ST_DT
		     , RFX_REQ_RCPT.CONST_EXP_DT
		     , RFX_REQ_RCPT.DLVY_PLC
		     , RFX_REQ_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN JOB.PURC_GRP_NM_EN
		            ELSE JOB.PURC_GRP_NM
		        END AS PURC_GRP_NM
			 , RFX_REQ_RCPT.PR_UUID
		     , RFX_REQ_RCPT.PR_ITEM_UUID
		     , RFX_REQ_RCPT.PR_NO
		     , RFX_REQ_RCPT.PR_LNO
			 , RFX_REQ_RCPT.UPCR_UUID
		     , RFX_REQ_RCPT.UPCR_ITEM_UUID
		     , RFX_REQ_RCPT.UPCR_NO
		     , RFX_REQ_RCPT.UPCR_LNO
			 , RFX_REQ_RCPT.SR_ITEM_UUID
			 , RFX_REQ_RCPT.SR_UUID
			 , RFX_REQ_RCPT.SR_NO
			 , RFX_REQ_RCPT.SR_LNO
		     , CASE WHEN RFX_REQ_RCPT.CAOV_UPRC IS NOT NULL THEN RFX_REQ_RCPT.CAOV_UPRC ELSE NULL END AS RFX_TRG_UPRC
		  FROM RFX_REQ_RCPT RFX_REQ_RCPT
		  LEFT OUTER JOIN PURC_GRP JOB               /* JOB : 직무(그룹) */
		    ON JOB.TEN_ID           = RFX_REQ_RCPT.TEN_ID
		   AND JOB.PURC_GRP_TYP_CCD = 'PURC'
		   AND JOB.PURC_GRP_CD      = RFX_REQ_RCPT.PURC_GRP_CD
		   AND JOB.CO_CD            = #{g.co_cd}
		   AND JOB.USE_YN           = 'Y'
		 WHERE RFX_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID IN
		   <foreach close=")" collection="p.rfx_req_rcpt_uuids" item="rfx_req_rcpt_uuid" open="(" separator=",">
		       #{rfx_req_rcpt_uuid}
		   </foreach>
		 ORDER BY CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_NO
		               WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_NO
		     		   WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_NO
		           END
		        , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_LNO
		               WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_LNO
		               WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_LNO
		           END
	</select>
	<update id="updateProgressStatus">
		UPDATE RFX_REQ_RCPT
		   SET PRGS_STS_CCD = #{p.prgs_sts_ccd}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<update id="updateRfxNxtPrcsStats">
		UPDATE RFX_REQ_RCPT
		   SET RFX_NXT_PRCS_REQ_UUID = #{p.rfx_nxt_prcs_req_uuid}
		     , PRGS_STS_CCD = #{p.prgs_sts_ccd}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   <if test="p.rfx_req_rcpt_uuid != null and p.rfx_req_rcpt_uuid != ''">
			   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
		   </if>
		   <if test="p.pr_item_uuid != null and p.pr_item_uuid != ''">
			   AND PR_ITEM_UUID = #{p.pr_item_uuid}
		   </if>
		   <if test="p.upcr_item_uuid != null and p.upcr_item_uuid != ''">
			   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
		   </if>
	</update>
	<update id="updateNxtPrcsReq">
		UPDATE RFX_REQ_RCPT
		   SET RFX_NXT_PRCS_REQ_UUID = #{p.rfx_nxt_prcs_req_uuid}
		     , CNTR_UUID = #{p.cntr_uuid}
		     , CNTR_NO = #{p.cntr_no}
		     , CNTR_REVNO = #{p.cntr_revno}
		     , PURC_CNTR_UUID = #{p.purc_cntr_uuid}
		     , PURC_CNTR_INFO_UUID = #{p.purc_cntr_info_uuid}
		     , PURC_CNTR_ITEM_UUID = #{p.purc_cntr_item_uuid}
		     , PURC_CNTR_ITEM_LNO = #{p.purc_cntr_item_lno}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<insert id="insertQtaNxtReqPrcs">
		INSERT INTO RFX_REQ_RCPT_QTA_ALOC (
			TEN_ID
			, RFX_REQ_RCPT_QTA_ALOC_UUID
			, RFX_REQ_RCPT_UUID
			, RFX_NXT_PRCS_REQ_UUID
			, QTARATE
			, ALOC_QTY
			, CNTR_UUID
			, CNTR_NO
			, CNTR_REVNO
			, PURC_CNTR_UUID
			, PURC_CNTR_INFO_UUID
			, PURC_CNTR_ITEM_UUID
			, PURC_CNTR_ITEM_LNO
			, QTA_ITEM_UUID
			, QTA_NO
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.rfx_req_rcpt_qta_aloc_uuid}
			, #{p.rfx_req_rcpt_uuid}
			, #{p.rfx_nxt_prcs_req_uuid}
			, #{p.qtarate}
			, #{p.aloc_qty}
			, #{p.cntr_uuid}
			, #{p.cntr_no}
			, #{p.cntr_revno}
			, #{p.purc_cntr_uuid}
			, #{p.purc_cntr_info_uuid}
			, #{p.purc_cntr_item_uuid}
			, #{p.purc_cntr_item_lno}
			, #{p.qta_item_uuid}
			, #{p.qta_no}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateQtaNxtReqPrcs">
		UPDATE RFX_REQ_RCPT_QTA_ALOC
		   SET RFX_NXT_PRCS_REQ_UUID = #{p.rfx_nxt_prcs_req_uuid}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_QTA_ALOC_UUID = #{p.rfx_req_rcpt_qta_aloc_uuid}
	</update>
	<select id="findListUnitPriceByRfxReqRcpt" resultType="map">
		<bind name="nowDate" value="g.getFormatNow(g.now, 'yyyyMMdd')"/>
		SELECT RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		     , ITEM_UPRC_HISTREC.CNTR_UUID
		     , ITEM_UPRC_HISTREC.CNTR_NO
		     , ITEM_UPRC_HISTREC.CNTR_REVNO
		     , ITEM_UPRC_HISTREC.PURC_CNTR_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_INFO_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID
		     , ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_LNO
		  FROM TEMP_TBL
		 INNER JOIN RFX_REQ_RCPT
		    ON RFX_REQ_RCPT.TEN_ID = TEMP_TBL.TEN_ID
		   AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID = TEMP_TBL.TASK_ID
		   AND TEMP_TBL.USR_ID = #{g.username}
		 INNER JOIN ITEM_UPRC_HISTREC
		    ON ITEM_UPRC_HISTREC.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND ITEM_UPRC_HISTREC.OORG_CD = RFX_REQ_RCPT.OORG_CD
		   AND ITEM_UPRC_HISTREC.ITEM_OORG_CD = RFX_REQ_RCPT.ITEM_OORG_CD
		   AND ITEM_UPRC_HISTREC.ITEM_CD = RFX_REQ_RCPT.ITEM_CD
		 WHERE ITEM_UPRC_HISTREC.TEN_ID = #{g.tenant}
		   AND ITEM_UPRC_HISTREC.UPRC_EFCT_ST_DT  <![CDATA[<=]]> #{nowDate}
		   AND ITEM_UPRC_HISTREC.UPRC_EFCT_EXP_DT <![CDATA[>=]]> #{nowDate}
		   AND ITEM_UPRC_HISTREC.STS != 'D'
	</select>
	<update id="updateUnitPriceReqCompleted">
		UPDATE RFX_REQ_RCPT
		   SET REQ_PURP_CCD = 'UPRCCNTR_PURC'
		     , PRGS_STS_CCD = 'CMPLD'
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<select id="findListRfxReqRcptQta" resultType="map">
		SELECT RFX_REQ_RCPT_QTA_ALOC.CNTR_UUID
		     , RFX_REQ_RCPT_QTA_ALOC.CNTR_NO
		     , RFX_REQ_RCPT_QTA_ALOC.CNTR_REVNO
		     , RFX_REQ_RCPT_QTA_ALOC.PURC_CNTR_UUID
		     , RFX_REQ_RCPT_QTA_ALOC.PURC_CNTR_INFO_UUID
		     , RFX_REQ_RCPT_QTA_ALOC.PURC_CNTR_ITEM_UUID
		     , RFX_REQ_RCPT_QTA_ALOC.PURC_CNTR_ITEM_LNO
		     , ITEM_UPRC_HISTREC.UPRCCNTR_UPRC
		     , ITEM_UPRC_HISTREC.UPRCCNTR_QTY
		     , ITEM_UPRC_HISTREC.UOM_CCD
		     , ITEM_UPRC_HISTREC.CUR_CCD
		     , VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , RFX_REQ_RCPT_QTA_ALOC.QTARATE
		     , RFX_REQ_RCPT_QTA_ALOC.ALOC_QTY
		     , QTA_ITEM_HISTREC.MOQ
		     , QTA_ITEM_HISTREC.CTQ
		     , QTA_ITEM_HISTREC.DLVY_LDTM
		     , RFX_REQ_RCPT_QTA_ALOC.QTA_ITEM_UUID
		     , RFX_REQ_RCPT_QTA_ALOC.QTA_NO
		     , RFX_REQ_RCPT_QTA_ALOC.RFX_NXT_PRCS_REQ_UUID
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_NO
		     , RFX_NXT_PRCS_REQ.REQ_STS_CCD
		  FROM RFX_REQ_RCPT
		 INNER JOIN RFX_REQ_RCPT_QTA_ALOC
		    ON RFX_REQ_RCPT_QTA_ALOC.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND RFX_REQ_RCPT_QTA_ALOC.RFX_REQ_RCPT_UUID = RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		  LEFT OUTER JOIN RFX_NXT_PRCS_REQ
		    ON RFX_NXT_PRCS_REQ.TEN_ID = RFX_REQ_RCPT_QTA_ALOC.TEN_ID
		   AND RFX_NXT_PRCS_REQ.RFX_NXT_PRCS_REQ_UUID = RFX_REQ_RCPT_QTA_ALOC.RFX_NXT_PRCS_REQ_UUID
		 INNER JOIN ITEM_UPRC_HISTREC
		    ON ITEM_UPRC_HISTREC.TEN_ID = RFX_REQ_RCPT_QTA_ALOC.TEN_ID
		   AND ITEM_UPRC_HISTREC.PURC_CNTR_ITEM_UUID = RFX_REQ_RCPT_QTA_ALOC.PURC_CNTR_ITEM_UUID
		 INNER JOIN QTA_ITEM_HISTREC
		    ON QTA_ITEM_HISTREC.TEN_ID = RFX_REQ_RCPT_QTA_ALOC.TEN_ID
		   AND QTA_ITEM_HISTREC.QTA_ITEM_UUID = RFX_REQ_RCPT_QTA_ALOC.QTA_ITEM_UUID
		 INNER JOIN VD
		    ON VD.TEN_ID = ITEM_UPRC_HISTREC.TEN_ID
		   AND VD.VD_CD = ITEM_UPRC_HISTREC.VD_CD
		 WHERE RFX_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
		   AND RFX_REQ_RCPT_QTA_ALOC.STS != 'D'
	</select>
	<select id="findReqRcptByOtherUuid" resultType="map">
		SELECT RFX_REQ_RCPT_UUID
		     , PR_ITEM_UUID
		     , UPCR_ITEM_UUID
		     , RCPT_STS_CCD
		     , CASE WHEN REQ_DOC_TYP_CCD = 'PR' THEN PR_ITEM_UUID
		            WHEN REQ_DOC_TYP_CCD = 'UPCR' THEN UPCR_ITEM_UUID
		        END AS REQ_ITEM_UUID
		  FROM RFX_REQ_RCPT
		 WHERE TEN_ID = #{g.tenant}
		   <if test="p.pr_item_uuid != null and p.pr_item_uuid != ''">
			   AND PR_ITEM_UUID = #{p.pr_item_uuid}
		   </if>
		   <if test="p.upcr_item_uuid != null and p.upcr_item_uuid != ''">
			   AND UPCR_ITEM_UUID = #{p.upcr_item_uuid}
		   </if>
	</select>
	<select id="findListRequestReqInfoByChangeReq" resultType="map">
		SELECT PR_NO
		     , PR_REVNO
		     , PR_LNO
		     , UPCR_NO
		     , UPCR_REVNO
		     , UPCR_LNO
		     , RCPT_STS_CCD
		     , PRGS_STS_CCD
		  FROM RFX_REQ_RCPT
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="'PR' eq p.req_doc_typ_ccd">
		           AND PR_NO = #{p.req_no}
		           AND PR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		       <when test="'UPCR' eq p.req_doc_typ_ccd">
		           AND UPCR_NO = #{p.req_no}
		           AND UPCR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		   </choose>
	</select>
	<update id="deleteRequestReqInfoByChangeReq">
		UPDATE RFX_REQ_RCPT
		   SET STS = 'D'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="'PR' eq p.req_doc_typ_ccd">
		           AND PR_NO = #{p.req_no}
		           AND PR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		       <when test="'UPCR' eq p.req_doc_typ_ccd">
		           AND UPCR_NO = #{p.req_no}
		           AND UPCR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		   </choose>
	</update>
	<update id="recoveryRequestReqInfoByChangeReq">
		UPDATE RFX_REQ_RCPT
		   SET STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="'PR' eq p.req_doc_typ_ccd">
		           AND PR_NO = #{p.req_no}
		           AND PR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		       <when test="'UPCR' eq p.req_doc_typ_ccd">
		           AND UPCR_NO = #{p.req_no}
		           AND UPCR_REVNO = CAST(#{p.req_revno} AS INT)
		       </when>
		   </choose>
	</update>
	<select id="findListRfxReceiptByRfxReqRcptUuids" resultType="map">
		SELECT RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		     , RFX_REQ_RCPT.OORG_CD
		     , RFX_REQ_RCPT.REQ_DOC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_DT
		     , RFX_REQ_RCPT.REQ_RET_RSN
		     , RFX_REQ_RCPT.RCPT_STS_CCD
		     , RFX_REQ_RCPT.RCPT_DT
		     , RFX_REQ_RCPT.PRGS_STS_CCD
		     , RFX_REQ_RCPT.REQ_TIT
		     , RFX_REQ_RCPT.PURC_TYP_CCD
		     , RFX_REQ_RCPT.REQ_PURP_CCD
		     , RFX_REQ_RCPT.PLT_CD
		     , RFX_REQ_RCPT.ITEM_OORG_CD
		     , RFX_REQ_RCPT.ITEM_CD
		     , RFX_REQ_RCPT.ITEM_NM
		     , RFX_REQ_RCPT.ITEM_NM_EN
		     , CASE WHEN #{g.locale} = 'en_US' THEN RFX_REQ_RCPT.ITEM_NM_EN
		            ELSE RFX_REQ_RCPT.ITEM_NM
		        END AS DISP_ITEM_NM
		     , RFX_REQ_RCPT.ITEM_SPEC
		     , RFX_REQ_RCPT.ITEM_SPEC_DTL
		     , RFX_REQ_RCPT.ITEM_CD_CRN_TYP_CCD
		     , RFX_REQ_RCPT.TL_YN
		     , RFX_REQ_RCPT.QTA_YN
		     , RFX_REQ_RCPT.UOM_CCD
		     , RFX_REQ_RCPT.CUR_CCD
		     , RFX_REQ_RCPT.REQ_QTY
		     , RFX_REQ_RCPT.REQ_UPRC
		     , RFX_REQ_RCPT.REQ_AMT
		     , RFX_REQ_RCPT.RMNG_QTY
		     , RFX_REQ_RCPT.WH_CCD
		     , RFX_REQ_RCPT.REQ_DLVY_DT
		     , RFX_REQ_RCPT.CONST_ST_DT
		     , RFX_REQ_RCPT.CONST_EXP_DT
		     , RFX_REQ_RCPT.DLVY_PLC
		     , RFX_REQ_RCPT.REQ_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN REQ_USR.USR_NM_EN
		            ELSE REQ_USR.USR_NM
		        END AS DISP_REQ_PIC_NM
		     , RFX_REQ_RCPT.PURC_GRP_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS DISP_PURC_GRP_NM
		     , RFX_REQ_RCPT.RFX_PIC_ID
		     , CASE WHEN #{g.locale} = 'en_US' THEN RFX_USR.USR_NM_EN
		            ELSE RFX_USR.USR_NM
		        END AS DISP_RFX_PIC_NM
		     , RFX_REQ_RCPT.GR_PIC_ID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_ITEM_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_ITEM_UUID
					WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_ITEM_UUID
		        END AS REQ_ITEM_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_UUID
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_UUID
		        END AS REQ_UUID
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_NO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_NO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_NO
		        END AS REQ_NO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_REVNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_REVNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_REVNO
		        END AS REQ_REVNO
		     , CASE WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'PR' THEN RFX_REQ_RCPT.PR_LNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'UPCR' THEN RFX_REQ_RCPT.UPCR_LNO
		            WHEN RFX_REQ_RCPT.REQ_DOC_TYP_CCD = 'SR' THEN RFX_REQ_RCPT.SR_LNO
		        END AS REQ_LNO
		     , RFX_REQ_RCPT.PR_ITEM_UUID
		     , RFX_REQ_RCPT.PR_UUID
		     , RFX_REQ_RCPT.PR_NO
		     , RFX_REQ_RCPT.PR_REVNO
		     , RFX_REQ_RCPT.PR_LNO
		     , RFX_REQ_RCPT.UPCR_ITEM_UUID
		     , RFX_REQ_RCPT.UPCR_UUID
		     , RFX_REQ_RCPT.UPCR_NO
		     , RFX_REQ_RCPT.UPCR_REVNO
		     , RFX_REQ_RCPT.UPCR_LNO
		     , RFX_REQ_RCPT.SR_ITEM_UUID
		     , RFX_REQ_RCPT.SR_UUID
		     , RFX_REQ_RCPT.SR_NO
		     , RFX_REQ_RCPT.SR_REVNO
		     , RFX_REQ_RCPT.SR_LNO
		     , RFX_REQ_RCPT.RFX_NXT_PRCS_REQ_UUID
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_NO
		     , RFX_NXT_PRCS_REQ.REQ_STS_CCD
		     , RFX_REQ_RCPT.CNTR_UUID
		     , RFX_REQ_RCPT.CNTR_NO
		     , RFX_REQ_RCPT.CNTR_REVNO
		     , RFX_REQ_RCPT.PURC_CNTR_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_INFO_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_ITEM_UUID
		     , RFX_REQ_RCPT.PURC_CNTR_ITEM_LNO
		     <!--, CASE WHEN RFX_REQ_RCPT.CNTR_NO IS NOT NULL
		                 <if test="_databaseId == 'postgresql'">AND RFX_REQ_RCPT.CNTR_NO != ''</if>
		                 <if test="_databaseId == 'mssql'">AND RFX_REQ_RCPT.CNTR_NO != ''</if>
		                 THEN 'Y'
		            WHEN (
		                  SELECT COUNT(*)
		                    FROM RFX_REQ_RCPT_QTA_ALOC
		                   WHERE RFX_REQ_RCPT_QTA_ALOC.TEN_ID = RFX_REQ_RCPT.TEN_ID
		                     AND RFX_REQ_RCPT_QTA_ALOC.RFX_REQ_RCPT_UUID = RFX_REQ_RCPT.RFX_REQ_RCPT_UUID
		                     AND RFX_REQ_RCPT_QTA_ALOC.STS != 'D'
		                 ) > 0 THEN 'Y'
		            ELSE 'N'
		        END AS CNTR_CNFD_YN-->
		  FROM RFX_REQ_RCPT
		  LEFT OUTER JOIN RFX_NXT_PRCS_REQ
		    ON RFX_NXT_PRCS_REQ.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND RFX_NXT_PRCS_REQ.RFX_NXT_PRCS_REQ_UUID = RFX_REQ_RCPT.RFX_NXT_PRCS_REQ_UUID
		 INNER JOIN USR REQ_USR
		    ON REQ_USR.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND REQ_USR.USR_ID = RFX_REQ_RCPT.REQ_PIC_ID
		  LEFT OUTER JOIN USR RFX_USR
		    ON RFX_USR.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND RFX_USR.USR_ID = RFX_REQ_RCPT.RFX_PIC_ID
		  LEFT OUTER JOIN PURC_GRP
		    ON PURC_GRP.TEN_ID = RFX_REQ_RCPT.TEN_ID
		   AND PURC_GRP.CO_CD = #{g.co_cd}
		   AND PURC_GRP.PURC_GRP_CD = RFX_REQ_RCPT.PURC_GRP_CD
		 WHERE RFX_REQ_RCPT.TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT.STS != 'D'
		   <choose>
		       <when test="p.rfx_req_rcpt_uuids != null and p.rfx_req_rcpt_uuids.size() != 0">
		           AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID IN
		           <foreach close=")" collection="p.rfx_req_rcpt_uuids" item="rfx_req_rcpt_uuid" open="(" separator=",">
		               #{rfx_req_rcpt_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_req_rcpt_uuid != null and p.rfx_req_rcpt_uuid != ''">
		               AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
		           </if>
		       </otherwise>
		   </choose>
		 ORDER BY RFX_REQ_RCPT.REQ_DT DESC
		        , RFX_REQ_RCPT.PR_NO DESC
		        , CAST(RFX_REQ_RCPT.PR_LNO AS INT)
		        , RFX_REQ_RCPT.UPCR_NO DESC
		        , CAST(RFX_REQ_RCPT.UPCR_LNO AS INT)
		   		, RFX_REQ_RCPT.SR_NO DESC
		        , CAST(RFX_REQ_RCPT.SR_LNO AS INT)
	</select>
	<select id="findListRfxReceiptByOtherUuids" resultType="map">
		/* rfx-receipt.findListRfxReceiptByOtherUuids */
		SELECT RFX_REQ_RCPT_UUID
		     , PR_ITEM_UUID
		     , UPCR_ITEM_UUID
		     , RCPT_STS_CCD
		     , CASE WHEN REQ_DOC_TYP_CCD = 'PR' THEN PR_ITEM_UUID
		            WHEN REQ_DOC_TYP_CCD = 'UPCR' THEN UPCR_ITEM_UUID
		        END AS REQ_ITEM_UUID
		  FROM RFX_REQ_RCPT
		 WHERE TEN_ID = #{g.tenant}
		<choose>
		       <when test="p.upcr_item_uuids != null and p.upcr_item_uuids.size() != 0">
		           AND RFX_REQ_RCPT.UPCR_ITEM_UUID IN
		           <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		               #{upcr_item_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.upcr_item_uuid != null and p.upcr_item_uuid != ''">
		               AND RFX_REQ_RCPT.UPCR_ITEM_UUID = #{p.rfx_req_rcpt_uuid}
		           </if>
		       </otherwise>
		   </choose>
	</select>
	<select id="findListRfxRcptItemSpotPrItemByItem" resultType="map">
		/* rfx-receipt.findListRfxRcptItemSpotPrItemByItem */
		WITH temp AS (
			<foreach collection="p.purcCntrItemList" item="item" separator=" UNION ALL ">
				SELECT  #{item.item_oorg_cd} AS ITEM_OORG_CD, #{item.item_cd} AS ITEM_CD
				 FROM DUAL </foreach>
		)
		SELECT RFX_REQ_RCPT.*
		FROM RFX_REQ_RCPT
		INNER JOIN temp t
		ON RFX_REQ_RCPT.ITEM_OORG_CD = t.ITEM_OORG_CD
		AND RFX_REQ_RCPT.ITEM_CD = t.ITEM_CD
		WHERE RFX_REQ_RCPT.TEN_ID = #{g.tenant}
		AND RFX_REQ_RCPT.REQ_PURP_CCD = 'SPTPURC'
		AND RFX_REQ_RCPT.STS != 'D'
	</select>
	<update id="deleteRequestReqInfoByReqUuid">
		/* rfx-receipt.deleteRequestReqInfoByReqUuid */
		UPDATE RFX_REQ_RCPT
		SET STS = 'D'
		, MODR_ID = #{g.username}
		, MOD_DTTM = #{g.now}
		WHERE TEN_ID = #{g.tenant}
		AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</update>
	<select id="findRfxDefaultDataByRfxReqUuid" resultType="map">
		SELECT CASE WHEN REQ_DOC_TYP_CCD = 'PR' THEN PR_NO
		            WHEN REQ_DOC_TYP_CCD = 'UPCR' THEN UPCR_NO
					WHEN REQ_DOC_TYP_CCD = 'SR' THEN SR_NO
			       END AS REQ_NO
		  FROM RFX_REQ_RCPT
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID = #{p.rfx_req_rcpt_uuid}
	</select>
</mapper>
