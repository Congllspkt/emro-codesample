<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 
NEGO: 협상 헤더
NEGO_ITEM: 협상 상세
 -->

<mapper namespace="nego-item">
    <select id="findNegoDetail" resultType="map">
		/* nego-item.findNegoDetail : 협상상세 조회 */
		SELECT NEGO_UUID
		     , RFX_BID_UUID
		     , RFX_BID_ITEM_UUID
		     , NEGO_ITEM_UPRC
		     , NEGO_ITEM_AMT
		  FROM NEGO_ITEM
		 WHERE TEN_ID    = #{g.tenant}
		   AND NEGO_UUID = #{p.nego_uuid}
		   AND STS      != 'D'
	</select>
    <select id="findNegoBidDetail" resultType="map">
		/* nego-item.findNegoBidDetail: 협상대상 견적 품목정보 조회 */
		SELECT RFX_BID_ITEM.RFX_LNO
		     , RFX_BID_ITEM.ITEM_CD
		     , RFX_BID_ITEM.ITEM_NM
		     , RFX_BID_ITEM.ITEM_SPEC
		     , RFX_BID_ITEM.UOM_CCD
		     , RFX_BID_ITEM.RFX_QTY
		     , RFX_ITEM.REQ_DLVY_DT
		     , RFX_ITEM.DLVY_PLC
		     , RFX_BID_ITEM.RFX_ITEM_SUBM_UPRC
		     , RFX_BID_ITEM.RFX_ITEM_SUBM_AMT
		     , RFX_BID_ITEM.DLVY_LDTM
		     , CASE WHEN NEGO.NEGO_RES_STS_CCD = 'STLMT' AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_UPRC
                    WHEN NEGO.NEGO_RES_STS_CCD = 'BD'    AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_UPRC
                    WHEN NEGO.NEGO_RES_STS_CCD = 'STLMT' THEN NEGO_ITEM.NEGO_ITEM_UPRC
                    WHEN NEGO.NEGO_STS_CCD = 'NEGO_CLSG' AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_UPRC
                    ELSE NULL
                END AS NEGO_ITEM_UPRC
		     , CASE WHEN NEGO.NEGO_RES_STS_CCD = 'STLMT' AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_AMT
                    WHEN NEGO.NEGO_RES_STS_CCD = 'BD'    AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_AMT
                    WHEN NEGO.NEGO_RES_STS_CCD = 'STLMT' THEN NEGO_ITEM.NEGO_ITEM_AMT
                    WHEN NEGO.NEGO_STS_CCD = 'NEGO_CLSG' AND NEGO.NEGO_VD_STS_CCD = 'SUBM' THEN NEGO_ITEM.NEGO_ITEM_AMT
                    ELSE NULL
                END AS NEGO_ITEM_AMT
		     , NEGO_ITEM.NEGO_ITEM_UUID
		     , NEGO_ITEM.NEGO_UUID
		  FROM NEGO_ITEM NEGO_ITEM
		 INNER JOIN NEGO NEGO
		    ON NEGO_ITEM.TEN_ID    = NEGO.TEN_ID
		   AND NEGO_ITEM.NEGO_UUID = NEGO.NEGO_UUID
		   AND NEGO.STS      !='D'
		 INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		    ON NEGO_ITEM.TEN_ID            = RFX_BID_ITEM.TEN_ID
		   AND NEGO_ITEM.RFX_BID_ITEM_UUID = RFX_BID_ITEM.RFX_BID_ITEM_UUID
		   AND NEGO_ITEM.RFX_BID_UUID      = RFX_BID_ITEM.RFX_BID_UUID
		   AND NEGO_ITEM.STS != 'D'
		   AND RFX_BID_ITEM.STS != 'D'
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID        = RFX_BID_ITEM.TEN_ID
		   AND RFX_ITEM.RFX_ITEM_UUID = RFX_BID_ITEM.RFX_ITEM_UUID
		   AND RFX_ITEM.STS != 'D'
		 WHERE NEGO_ITEM.TEN_ID    = #{g.tenant}
		   AND NEGO_ITEM.NEGO_UUID = #{p.nego_uuid}
		 ORDER BY RFX_BID_ITEM.RFX_LNO
	</select>
    <select id="searchNegoRfxBidItemStl" resultType="map">
        /* nego-item.searchNegoRfxBidItemStl: 견적 품목별 협상금액 조회 */
        SELECT BID_ITEM.TEN_ID
             , BID_ITEM.RFX_BID_ITEM_UUID
             , RFX_ITEM.RFX_QTY        AS SLCTN_QTY
             , NG_ITEM.NEGO_ITEM_AMT   AS SLCTN_AMT
             , NG_ITEM.NEGO_ITEM_UPRC  AS SLCTN_UPRC
             , #{p.slctn_yn} AS SLCTN_YN
          FROM RFX_BID_ITEM BID_ITEM
         INNER JOIN RFX_ITEM RFX_ITEM
            ON RFX_ITEM.TEN_ID = BID_ITEM.TEN_ID
           AND RFX_ITEM.RFX_ITEM_UUID = BID_ITEM.RFX_ITEM_UUID
           AND RFX_ITEM.STS != 'D'
          LEFT OUTER JOIN NEGO NG
            ON NG.TEN_ID = BID_ITEM.TEN_ID
           AND NG.RFX_BID_UUID = BID_ITEM.RFX_BID_UUID
           AND NG.RENEGO_YN = 'N'
           AND NG.STS != 'D'
          LEFT OUTER JOIN NEGO_ITEM NG_ITEM
            ON NG_ITEM.TEN_ID = NG.TEN_ID
           AND NG_ITEM.NEGO_UUID  = NG.NEGO_UUID
           AND NG_ITEM.RFX_BID_UUID  = BID_ITEM.RFX_BID_UUID
           AND NG_ITEM.RFX_BID_ITEM_UUID  = BID_ITEM.RFX_BID_ITEM_UUID
           AND NG_ITEM.STS  != 'D'
         WHERE BID_ITEM.TEN_ID = #{g.tenant}
           AND BID_ITEM.RFX_BID_UUID = #{p.rfx_bid_uuid}
           AND BID_ITEM.STS != 'D'
    </select>
    <insert id="insertNegoDetail">
		/* nego-item.insertNegoDetail : 협상상세 저장 */
		INSERT INTO NEGO_ITEM (
			TEN_ID
			, NEGO_ITEM_UUID
			, NEGO_UUID
			, RFX_BID_UUID
			, RFX_BID_ITEM_UUID
			, REGR_ID
			, MODR_ID
		) VALUES (
			#{g.tenant}
			, #{g.uuid}
			, #{p.nego_uuid}
			, #{p.rfx_bid_uuid}
			, #{p.rfx_bid_item_uuid}
			, #{g.username}
			, #{g.username}
		)
	</insert>
    <update id="cancelNegoTargetDetail">
		/* nego-item.cancelNegoTargetDetail : 협상 상세 취소 */
		UPDATE NEGO_ITEM
		   SET STS      = 'D'
		     , MODR_ID  = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="p.nego_uuids == null and p.nego_uuid != null and p.nego_uuid != ''">
		           AND NEGO_UUID = #{p.nego_uuid}
		       </when>
		       <when test="p.nego_uuids != null and p.nego_uuids.size() gt 1">
		           AND NEGO_UUID IN
		           <foreach close=")" collection="p.nego_uuids" item="nego_uuid" open="(" separator=",">
		               #{nego_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           <foreach collection="p.nego_uuids" item="nego_uuid">
		               AND NEGO_UUID = #{nego_uuid}
		           </foreach>
		       </otherwise>
		   </choose>
		   AND STS != 'D'
	</update>
    <update id="updateNegoPrice">
		/* nego-item.updateNegoPrice : 협상상세 저장 */
		UPDATE NEGO_ITEM
		   SET NEGO_ITEM_UPRC = CAST(#{p.nego_item_uprc} AS FLOAT  )
		     , NEGO_ITEM_AMT  = CAST(#{p.nego_item_amt} AS FLOAT  )
		     , FNL_CRTR_ID    = #{g.username}
		     , STS            = 'U'
		     , MODR_ID        = #{g.username}
		     , MOD_DTTM       = #{g.now}
		 WHERE TEN_ID         = #{g.tenant}
		   AND NEGO_ITEM_UUID = #{p.nego_item_uuid}
		   AND NEGO_UUID      = #{p.nego_uuid}
		   AND STS           != 'D'
	</update>
</mapper>
