<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rfx-item">
	<select id="findListRfxItemDefaultDataByAiItemIds" resultType="map">
		SELECT ITEM.ITEM_CD
		     , CASE WHEN 'en_US' = 'en_US' THEN ITEM.ITEM_NM_EN
		            ELSE ITEM.ITEM_NM
		        END AS DISP_ITEM_NM
		     , ITEM.ITEM_NM
		     , ITEM.ITEM_NM_EN
		     , ITEM.ITEM_SPEC
		     , ITEM.UOM_CCD
		     , ITEM.SG_CD
		     , CASE WHEN 'en_US' = 'en_US' THEN SG.SG_NM_EN
		            ELSE SG.SG_NM_EN
		        END AS SG_NM
		  FROM OORG_MAPG
		 INNER JOIN ITEM_OORG
		    ON ITEM_OORG.TEN_ID = OORG_MAPG.TEN_ID
		   AND ITEM_OORG.OORG_CD = OORG_MAPG.CONNSUBJ_OORG_CD
		 INNER JOIN ITEM
		    ON ITEM.TEN_ID = ITEM_OORG.TEN_ID
		   AND ITEM.ITEM_CD = ITEM_OORG.ITEM_CD
		  LEFT OUTER JOIN SG
		    ON SG.TEN_ID = ITEM.TEN_ID
		   AND SG.SG_CD = ITEM.SG_CD
		 WHERE OORG_MAPG.TEN_ID = #{g.tenant}
		   AND OORG_MAPG.CONN_TYP_CCD = 'POIO'
		   AND OORG_MAPG.CONNSRC_OORG_CD = #{p.oorg_cd}
		   AND ITEM.ITEM_CD IN
		   <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		       #{item_cd}
		   </foreach>
		   AND ITEM_OORG.STS != 'D'
		   AND ITEM.STS != 'D'
	</select>
	<insert id="insertRfxItem">
		/* rfx-item.insertRfxItem */
		INSERT INTO RFX_ITEM (
			TEN_ID
			, RFX_ITEM_UUID
			, RFX_UUID
			, PR_ITEM_UUID
			, UPCR_ITEM_UUID
			, SR_ITEM_UUID
			, OORG_CD
			, RFX_NO
			, RFX_RND
			, RFX_LNO
			, PR_NO
			, PR_LNO
			, UPCR_NO
			, UPCR_LNO
			, SR_NO
			, SR_LNO
			, PURC_TYP_CCD
			, PLT_CD
			, ITEM_OORG_CD
			, ITEM_CD_CRN_TYP_CCD
			, ITEM_CD
			, ITEM_NM
			, ITEM_NM_EN
			, ITEM_SPEC
			, ITEM_SPEC_DTL
			, UOM_CCD
			, RFX_QTY
			, RFX_REQ_UPRC
			, RFX_TRG_UPRC
			, RFX_LMT_UPRC
			, WH_CCD
			, REQ_DLVY_DT
			, CONST_ST_DT
			, CONST_EXP_DT
			, DLVY_PLC
			, ATHG_UUID
			, SLCTN_YN
			, SLCTN_QTY
			, SG_CD
			, CUR_CCD
			, PURC_GRP_CD
			, ED_YN
			, RFX_REQ_RCPT_UUID
			, STS
			, REGR_ID
			, REG_DTTM
			, MODR_ID
			, MOD_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.rfx_item_uuid}
			, #{p.rfx_uuid}
			, #{p.pr_item_uuid}
			, #{p.upcr_item_uuid}
			, #{p.sr_item_uuid}
			, #{p.oorg_cd}
			, #{p.rfx_no}
			, CAST(#{p.rfx_rnd} AS INT)
			, TO_CHAR(#{p.rfx_lno})  , #{p.pr_no}
			, TO_CHAR(#{p.pr_lno})  , #{p.upcr_no}
			, TO_CHAR(#{p.upcr_lno})  , #{p.sr_no}
			, TO_CHAR(#{p.sr_lno})  , #{p.purc_typ_ccd}
			, #{p.plt_cd}
			, #{p.item_oorg_cd}
			, #{p.item_cd_crn_typ_ccd}
			, #{p.item_cd}
			, #{p.item_nm}
			, #{p.item_nm_en}
			, #{p.item_spec}
			, #{p.item_spec_dtl}
			, #{p.uom_ccd}
			, CAST(#{p.rfx_qty} AS FLOAT  )
			, CAST(#{p.rfx_req_uprc} AS FLOAT  )
			, CAST(#{p.rfx_trg_uprc} AS FLOAT  )
			, CAST(#{p.rfx_lmt_uprc} AS FLOAT  )
			, #{p.wh_ccd}
			, #{p.req_dlvy_dt}
			, #{p.const_st_dt}
			, #{p.const_exp_dt}
			, #{p.dlvy_plc}
			, #{p.athg_uuid}
			, #{p.slctn_yn}
			, CAST(#{p.slctn_qty} AS FLOAT  )
			, #{p.sg_cd}
			, #{p.cur_ccd}
			, #{p.purc_grp_cd}
			<choose>
			    <when test="g.isNotEmpty(p.ed_yn)">
			        , #{p.ed_yn}
			    </when>
			    <otherwise>
			        , 'N'
			    </otherwise>
			</choose>
			, #{p.rfx_req_rcpt_uuid}
			, 'C'
			, #{g.username}
			, #{g.now}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateRfxItem">
		/* rfx-item.updateRfxItem */
		UPDATE RFX_ITEM
		   SET RFX_RND             = CAST(#{p.rfx_rnd} AS INT)
		     , RFX_LNO             = TO_CHAR(#{p.rfx_lno})  , PR_NO               = #{p.pr_no}
		     , PR_LNO              = TO_CHAR(#{p.pr_lno})  , UPCR_NO             = #{p.upcr_no}
		     , UPCR_LNO            = TO_CHAR(#{p.upcr_lno})  , SR_NO        	   = #{p.sr_no}
		     , SR_LNO              = TO_CHAR(#{p.sr_lno})  , PURC_TYP_CCD        = #{p.purc_typ_ccd}
		     , PLT_CD              = #{p.plt_cd}
		     , ITEM_OORG_CD        = #{p.item_oorg_cd}
		     , ITEM_CD_CRN_TYP_CCD = #{p.item_cd_crn_typ_ccd}
		     , ITEM_CD             = #{p.item_cd}
		     , ITEM_NM             = #{p.item_nm}
		     , ITEM_NM_EN          = #{p.item_nm_en}
		     , ITEM_SPEC           = #{p.item_spec}
		     , ITEM_SPEC_DTL       = #{p.item_spec_dtl}
		     , UOM_CCD             = #{p.uom_ccd}
		     , RFX_QTY             = CAST(#{p.rfx_qty} AS FLOAT  )
		     , RFX_REQ_UPRC        = CAST(#{p.rfx_req_uprc} AS FLOAT  )
		     <choose>
		         <when test="p.rfx_trg_uprc == null">
		             , RFX_TRG_UPRC = NULL
		         </when>
		         <otherwise>
		             , RFX_TRG_UPRC = CAST(#{p.rfx_trg_uprc} AS FLOAT  )
		         </otherwise>
		     </choose>
		     <choose>
		         <when test="p.rfx_lmt_uprc == null">
		             , RFX_LMT_UPRC = NULL
		         </when>
		         <otherwise>
		             , RFX_LMT_UPRC = CAST(#{p.rfx_lmt_uprc} AS FLOAT  )
		         </otherwise>
		     </choose>
		     , WH_CCD      = #{p.wh_ccd}
		     , REQ_DLVY_DT = #{p.req_dlvy_dt}
		     , CONST_ST_DT = #{p.const_st_dt}
		     , CONST_EXP_DT = #{p.const_exp_dt}
		     <choose>
		         <when test="p.dlvy_plc == null">
		             , DLVY_PLC = NULL
		         </when>
		         <otherwise>
		             , DLVY_PLC = #{p.dlvy_plc}
		         </otherwise>
		     </choose>
		     , ATHG_UUID   = #{p.athg_uuid}
		     , SLCTN_YN    = #{p.slctn_yn}
		     , SLCTN_QTY   = CAST(#{p.slctn_qty} AS FLOAT  )
		     , SG_CD       = #{p.sg_cd}
		     , CUR_CCD     = #{p.cur_ccd}
		     , PURC_GRP_CD = #{p.purc_grp_cd}
		     , STS         = 'U'
		     , MODR_ID     = #{g.username}
		     , MOD_DTTM    = #{g.now}
		 WHERE TEN_ID        = #{g.tenant}
		   AND RFX_ITEM_UUID = #{p.rfx_item_uuid}
	</update>
	<delete id="deleteRfxItem">
		/* rfx-item.deleteRfxItem */
		DELETE
		  FROM RFX_ITEM
		 WHERE TEN_ID        = #{g.tenant}
		   AND RFX_ITEM_UUID = #{p.rfx_item_uuid}
	</delete>
	<select id="searchRfxItemByRfx" resultType="map">
		/* rfx-item.searchRfxItemByRfx */
		SELECT RFX_ITEM.RFX_ITEM_UUID
		     , RFX_ITEM.PR_ITEM_UUID
		     , RFX_ITEM.UPCR_ITEM_UUID
		     , RFX_ITEM.SR_ITEM_UUID
		     , RFX_ITEM.RFX_UUID
		     , RFX_ITEM.OORG_CD
		     , RFX_ITEM.RFX_NO
		     , RFX_ITEM.RFX_RND
		     , RFX_ITEM.RFX_LNO
		     , RFX_ITEM.PR_NO
		     , RFX_ITEM.PR_LNO
		     , RFX_ITEM.UPCR_NO
		     , RFX_ITEM.UPCR_LNO
		     , RFX_ITEM.SR_NO
		     , RFX_ITEM.SR_LNO
		     , RFX_ITEM.PURC_TYP_CCD
		     , RFX_ITEM.PLT_CD
		     , (
		        SELECT CASE WHEN 'en_US' = #{g.locale} THEN LOGIC_ORG.LOGIC_ORG_NM_EN
		                    ELSE LOGIC_ORG.LOGIC_ORG_NM
		                END AS LOGIC_ORG_NM
		          FROM LOGIC_ORG LOGIC_ORG
		         INNER JOIN OORG OORG
		            ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
		           AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
		         WHERE LOGIC_ORG.TEN_ID = RFX_ITEM.TEN_ID
		           AND LOGIC_ORG.ORG_CD = RFX_ITEM.PLT_CD
		           AND OORG.OORG_CD = RFX_ITEM.ITEM_OORG_CD
		       ) AS PLT_NM
		     , RFX_ITEM.ITEM_OORG_CD
		     , RFX_ITEM.ITEM_CD_CRN_TYP_CCD
		     , CASE WHEN RFX_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS' THEN NULL -- 구매품목유형: 미등록(무코드품목)
		            ELSE RFX_ITEM.ITEM_CD
		        END AS DISP_ITEM_CD
		     , RFX_ITEM.ITEM_CD
		     , RFX_ITEM.ITEM_NM
		     , RFX_ITEM.ITEM_NM_EN
		     , CASE WHEN 'en_US' = #{g.locale} THEN RFX_ITEM.ITEM_NM_EN
		            ELSE RFX_ITEM.ITEM_NM
		        END AS DISP_ITEM_NM
		     , RFX_ITEM.ITEM_SPEC
		     , RFX_ITEM.ITEM_SPEC_DTL
		     , RFX_ITEM.UOM_CCD
		     , RFX_ITEM.RFX_QTY
		     , RFX_ITEM.RFX_REQ_UPRC
		     ,  GETPRECFORMAT(#{g.tenant}, 'amt', RFX_ITEM.RFX_QTY * RFX_ITEM.RFX_REQ_UPRC, RFX.CUR_CCD)  AS RFQ_AMT
		     , RFX_ITEM.RFX_TRG_UPRC
		     , RFX_ITEM.RFX_LMT_UPRC
		     , RFX_ITEM.WH_CCD
		     , RFX_ITEM.REQ_DLVY_DT
		     , RFX_ITEM.CONST_ST_DT
		     , RFX_ITEM.CONST_EXP_DT
		     , RFX_ITEM.DLVY_PLC
		     , RFX_ITEM.ATHG_UUID
		     <choose>
		         <when test="p.ed_yn != null and &quot;N&quot; eq p.ed_yn">
		             /* 재견적 생성 시 close되지 않은 품목 조회 */
		             , CASE WHEN (
		                          SELECT COUNT(1)
		                            FROM RFX_BID_ITEM RFX_BID_ITEM
		                           WHERE RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		                             AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		                             AND RFX_BID_ITEM.SLCTN_YN      = 'Y'
		                         ) &gt; 0 THEN 'Y'
		                    ELSE 'N'
		                END AS SLCTN_YN
		             , (
		                SELECT SUM(RFX_BID_ITEM.SLCTN_QTY)
		                  FROM RFX_BID_ITEM RFX_BID_ITEM
		                 WHERE RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		                   AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		                   AND RFX_BID_ITEM.SLCTN_YN      = 'Y'
		               ) AS SLCTN_QTY
		         </when>
		         <otherwise>
		             , RFX_ITEM.SLCTN_YN
		             , RFX_ITEM.SLCTN_QTY
		         </otherwise>
		     </choose>
		     , RFX_ITEM.SG_CD
		     , RFX_ITEM.CUR_CCD
		     , RFX_ITEM.PURC_GRP_CD
		     , RFX_ITEM.ED_YN
		     , RFX_ITEM.STS
		     , RFX_ITEM.REGR_ID
		     , RFX_ITEM.REG_DTTM
		     , RFX_ITEM.MODR_ID
		     , RFX_ITEM.MOD_DTTM
		     , RFX.TEN_ID
		     , CASE WHEN 'en_US' = #{g.locale} THEN PURC_GRP.PURC_GRP_NM_EN
		            ELSE PURC_GRP.PURC_GRP_NM
		        END AS PURC_GRP_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN SG.SG_NM_EN
		            ELSE SG.SG_NM
		        END AS SG_NM
		     , RFX_REQ_RCPT.PR_UUID
		     , RFX_REQ_RCPT.UPCR_UUID
		     , RFX_REQ_RCPT.SR_UUID
		     , RFX_ITEM.RFX_REQ_RCPT_UUID
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		   AND RFX_ITEM.STS     != 'D'
		  LEFT OUTER JOIN PURC_GRP PURC_GRP /* 직무(그룹) */
		    ON PURC_GRP.TEN_ID           = RFX_ITEM.TEN_ID
		   AND PURC_GRP.PURC_GRP_TYP_CCD = 'PURC'
		   AND PURC_GRP.PURC_GRP_CD      = RFX_ITEM.PURC_GRP_CD
		   AND PURC_GRP.CO_CD            = #{g.comp_cd}
		   AND PURC_GRP.USE_YN           = 'Y'
		  LEFT OUTER JOIN SG SG
		    ON SG.TEN_ID = RFX_ITEM.TEN_ID
		   AND SG.SG_CD = RFX_ITEM.SG_CD
		  LEFT OUTER JOIN RFX_REQ_RCPT
		    ON RFX_REQ_RCPT.TEN_ID = RFX_ITEM.TEN_ID
		   AND RFX_REQ_RCPT.RFX_REQ_RCPT_UUID = RFX_ITEM.RFX_REQ_RCPT_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   <if test="p.ed_yn != null">
		       /* 재견적 생성 시 close되지 않은 품목 조회 */
		       AND RFX_ITEM.ED_YN = #{p.ed_yn}
		   </if>
		 ORDER BY CAST(RFX_ITEM.RFX_LNO AS INT)
	</select>
	<select id="selectRfxItemStlInfo" resultType="map">
		/* rfx-item.selectRfxItemStlInfo: RFx 선정품의 승인 시 품목별 선정 여부 및 선정수량 조회 */
		SELECT RFX_ITEM.TEN_ID
		     , RFX_ITEM.RFX_ITEM_UUID
		     , CASE WHEN (SUM(CASE WHEN RFX_BID_ITEM.SLCTN_YN = 'Y' THEN 1 ELSE 0 END)) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS SLCTN_YN
		     , SUM(CASE WHEN RFX_BID_ITEM.SLCTN_YN = 'Y' THEN (CASE WHEN RFX_BID_ITEM.SLCTN_QTY IS NULL THEN 0 ELSE RFX_BID_ITEM.SLCTN_QTY END)
		                ELSE 0
		           END) AS SLCTN_QTY
		  FROM RFX_ITEM RFX_ITEM
		 INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		    ON RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		   AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		 WHERE RFX_ITEM.TEN_ID   = #{g.tenant}
		   AND RFX_ITEM.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.STS     != 'D'
		 GROUP BY RFX_ITEM.TEN_ID, RFX_ITEM.RFX_ITEM_UUID
	</select>
	<update id="updateRfxItemStlInfo">
		/* rfx-item.updateRfxItemStlInfo: 견적품목 선정 여부 및 선정수량 변경 */
		UPDATE RFX_ITEM
		   SET SLCTN_YN  = #{p.slctn_yn}
		     , SLCTN_QTY = #{p.slctn_qty}
		 WHERE TEN_ID        = #{g.tenant}
		   AND RFX_ITEM_UUID = #{p.rfx_item_uuid}
	</update>
</mapper>
