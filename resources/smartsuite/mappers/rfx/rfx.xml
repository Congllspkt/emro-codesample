<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rfx">
	<select id="findRfx" resultType="map">
		/* rfx.findRfx */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_TIT
		     , RFX.RFX_RND
		     , RFX.OORG_CD
		     , RFX.RFX_PURP_CCD
		     , RFX.RAUC_TYP_CCD
		     , RFX.RFX_TYP_CCD
		     , RFX.PURC_GRP_CD
		     , RFX.RFX_CRN_DT
		     , RFX.RFX_ST_DTTM
		     , RFX.RFX_CLSG_DTTM
		     , RFX.RFX_CHG_CLSG_DTTM
		     , RFX.DOMOVRS_DIV_CCD AS RFX_DOMOVRS_DIV_CCD
		     , RFX.DOMOVRS_DIV_CCD
		     , RFX.DFRM_RO
		     , RFX.PYMTMETH_CCD
		     , RFX.PYMTMETH_EXPLN
		     , RFX.DLVYMETH_CCD
		     , RFX.DLVYMETH_EXPLN
             , RFX.PYMTMETH_DOM_CCD
		     , RFX.PYMTMETH_DOM_EXPLN
		     , RFX.DLVYMETH_DOM_CCD
		     , RFX.DLVYMETH_DOM_EXPLN
             , RFX.PYMTMETH_OVS_CCD
		     , RFX.PYMTMETH_OVS_EXPLN
		     , RFX.DLVYMETH_OVS_CCD
		     , RFX.DLVYMETH_OVS_EXPLN
             , RFX.PYMTMETH_DLVYMETH_CHG_POSS_YN
		     , RFX.CUR_CCD
		     , RFX.COMP_TYP_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		     , RFX.SLCTN_TYP_CCD
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.AUTO_EXT_TM
		     , RFX.AUTO_EXT_POSS_WD
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX.PURC_TYP_CCD
		     , RFX.BFG_YN
		     , RFX.SITEBRFG_INP_USE_YN
		     , RFX.PRESN_YN
		     , RFX.PRTL_BID_PERM_YN
		     , RFX.COSTSTR_USE_YN
		     , RFX.NPE_RO_VD_PUB_YN
		     , RFX.CBE_TYP_CCD
		     , RFX.NPE_RO
		     , RFX.CBE_RO
		     , RFX.COMPREVAL_PASS_SC
		     , RFX.BFG_DTTM
		     , RFX.BFG_PLC
		     , RFX.BFG_PIC_ID
		     , RFX.PRESN_ST_DT
		     , RFX.PRESN_CLSG_DT
		     , RFX.PRESN_PIC_ID
		     , RFX.RFX_BUYER_RMK
		     , RFX.RFX_VD_RMK
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.RFX_STS_CCD
		     , RFX.RFX_RES_STS_CCD
		     , RFX.RFX_APVL_USE_YN
		     , RFX.RFX_APVL_STS_CCD
		     , RFX.RFX_SLCTN_APVL_USE_YN
		     , RFX.RFX_SLCTN_APVL_STS_CCD
		     , RFX.OPEN_DTTM
		     , RFX.IMMED_ST_USE_YN
		     , RFX.IMMED_OPEN_USE_YN
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                     AND RFX_ITEM.STS     != 'D'
		                     AND RFX_ITEM.PR_ITEM_UUID IS NOT NULL  ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_PR_ITEM_YN    /* PR 품목 존재여부 */
		     , CASE WHEN (SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID    = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID  = RFX.RFX_UUID
		                     AND RFX_ITEM.STS      != 'D'
		                     AND RFX_ITEM.UPCR_ITEM_UUID IS NOT NULL  ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_UPCR_ITEM_YN /* PR UPCR 품목 존재여부 */
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                     AND RFX_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'
		                     AND RFX_ITEM.STS != 'D'
		                 ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_NO_CD_ITEM    /* 무코드 품목 존재여부 */
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.BFG_PIC_ID
		           AND USR.STS   != 'D'
		       ) AS BFG_PIC_NM   /* 현장설명회 담당자 */
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.PRESN_PIC_ID
		           AND USR.STS   != 'D'
		       ) AS PRESN_PIC_NM    /* 제안발표 담당자 */
		     , RFX.REGR_ID
		     , (
		        SELECT SUM(  GETPRECFORMAT(#{g.tenant}, 'amt', RFX_ITEM.RFX_QTY * RFX_ITEM.RFX_REQ_UPRC, RFX_ITEM.CUR_CCD))
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		       ) AS TOT_RFQ_AMT       /* 총 RFX 요청 금액 */
		     , (
		        SELECT COUNT(RFX_BID.RFX_BID_UUID)
		          FROM RFX_BID RFX_BID
		         WHERE RFX_BID.TEN_ID   = RFX.TEN_ID
		           AND RFX_BID.RFX_NO   = RFX.RFX_NO
		           AND RFX_BID.RFX_RND  = RFX.RFX_RND
		           AND RFX_BID.RFX_BID_EFCT_YN = 'Y'
		           AND RFX_BID.RFX_BID_STS_CCD = 'SUBM'
		       ) AS VD_SUBM_CNT  /* 제출업체 수 */
		     , RFX.SITEBRFG_UUID
		     , (
		        SELECT SITEBRFG.SITEBRFG_TIT
		          FROM SITEBRFG SITEBRFG
		         WHERE SITEBRFG.TEN_ID        = RFX.TEN_ID
		           AND SITEBRFG.SITEBRFG_UUID = RFX.SITEBRFG_UUID
		           AND SITEBRFG.STS != 'D'
		       ) AS SITEBRFG_TIT /* 현장설명회 제목 */
		     , (
		        SELECT SITEBRFG.SITEBRFG_NO
		          FROM SITEBRFG SITEBRFG
		         WHERE SITEBRFG.TEN_ID        = RFX.TEN_ID
		           AND SITEBRFG.SITEBRFG_UUID = RFX.SITEBRFG_UUID
		           AND SITEBRFG.STS != 'D'
		       ) AS SITEBRFG_NO  /* 현장설명회 번호 */
		     , RFX.CSTM_USE_YN                              /* 컨소시엄 여부 */
		     , RFX.CSTM_TYP_CCD                             /* 컨소시엄 유형 */
		     , RFX.RFX_TMPL_USE_YN                   /* Template 입찰 여부 */
		     , RFX.RFX_PRENTC_UUID                   /* 입찰공고 번호 */
		     , RFX.PURC_PIC_ID
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS PURC_CHR_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN DEPT.DEPT_NM_EN
		            ELSE DEPT.DEPT_NM
		        END AS PURC_CHR_DEPT_NM               /* 부서명 */
		     , USR.TEL AS PURC_CHR_PHONE_NO
		     , RFX.PRE_RFX_UUID
		     , RFX.RFX_PRESN_USE_YN
		     , RFX.RFX_PRESN_ST_DTTM
		     , RFX.RFX_PRESN_CLSG_DTTM
		     , RFX.IMMED_RFX_PRESN_ST_USE_YN
		     , RFX.NPE_REEXEC_YN
		     , RFX.LONG_TERM_PROD_EFF_USE_YN
		  FROM RFX RFX
		  LEFT OUTER JOIN USR USR /* USR : 구매 담당자 */
		    ON RFX.TEN_ID      = USR.TEN_ID
		   AND RFX.PURC_PIC_ID = USR.USR_ID
		  LEFT OUTER JOIN OORG OORG
		    ON OORG.TEN_ID = RFX.TEN_ID
		   AND OORG.OORG_CD = RFX.OORG_CD
		  LEFT OUTER JOIN LOGIC_ORG LOGIC_ORG         /* B : 조직 */
		    ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
		   AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
		   AND LOGIC_ORG.LOGIC_ORG_TYP_CCD = OORG.LOGIC_ORG_TYP_CCD
		   AND LOGIC_ORG.STS        != 'D'
		  LEFT OUTER JOIN DEPT DEPT
		    ON USR.TEN_ID  = DEPT.TEN_ID
		   AND USR.DEPT_CD = DEPT.DEPT_CD
		   AND USR.STS    != 'D'
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="findRfxMaxRevision" resultType="java.lang.Integer">
		/* rfx.findRfxMaxRevision */
		SELECT MAX(RFX_RND) AS MAX_RND
		  FROM RFX
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_NO = #{p.rfx_no}
		   AND STS   != 'D'
	</select>
	<select id="findListRfx" resultType="map">
		/* rfx.findListRfx RFx현황리스트 조회 */
		SELECT RFX.RFX_UUID
		     , TASK_RFX.TASK_UUID AS TASK_RFX_UUID
		     , CASE WHEN TASK_NEGO.TASK_UUID IS NULL OR TASK_NEGO.TASK_UUID = '' THEN TASK_RFX_VD_SLCTN.TASK_UUID
		            ELSE TASK_NEGO.TASK_UUID
		        END AS TASK_RFX_RST_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.OORG_CD
		     , RFX.RFX_TIT
		     , RFX.RFX_TYP_CCD
		     , RFX.RAUC_TYP_CCD
		     , RFX.RFX_PURP_CCD
		     , RFX.RFX_CRN_DT
		     , RFX.RFX_ST_DTTM
		     , RFX.RFX_CLSG_DTTM
		     , RFX.RFX_CHG_CLSG_DTTM
		     , RFX.DOMOVRS_DIV_CCD
		     , RFX.DFRM_RO
		     , RFX.PYMTMETH_CCD
		     , RFX.PYMTMETH_EXPLN
		     , RFX.DLVYMETH_CCD
		     , RFX.DLVYMETH_EXPLN
             , RFX.PYMTMETH_DOM_CCD
		     , RFX.PYMTMETH_DOM_EXPLN
		     , RFX.DLVYMETH_DOM_CCD
		     , RFX.DLVYMETH_DOM_EXPLN
             , RFX.PYMTMETH_OVS_CCD
		     , RFX.PYMTMETH_OVS_EXPLN
		     , RFX.DLVYMETH_OVS_CCD
		     , RFX.DLVYMETH_OVS_EXPLN
             , RFX.PYMTMETH_DLVYMETH_CHG_POSS_YN
		     , RFX.CUR_CCD
		     , RFX.COMP_TYP_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		     , RFX.SLCTN_TYP_CCD
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.AUTO_EXT_TM
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX.ARRPORT_CCD
		     , RFX.SHPGMETH_CCD
		     , RFX.PURC_TYP_CCD
		     , RFX.BFG_YN
		     , RFX.PRESN_YN
		     , RFX.PRTL_BID_PERM_YN
		     , RFX.TRGPRC_USE_YN
		     , RFX.COSTSTR_USE_YN
		     , RFX.NPE_RO_VD_PUB_YN
		     , RFX.CBE_TYP_CCD
		     , RFX.NPE_RO
		     , RFX.CBE_RO
		     , RFX.COMPREVAL_PASS_SC
		     , RFX.NPE_STS_CCD
		     , RFX.BFG_DTTM
		     , RFX.BFG_PLC
		     , RFX.BFG_PIC_ID
		     , RFX.PRESN_ST_DT
		     , RFX.PRESN_CLSG_DT
		     , RFX.PRESN_PIC_ID
		     , RFX.RFX_BUYER_RMK
		     , RFX.RFX_VD_RMK
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.RFX_STS_CCD
		     , RFX.RFX_RES_STS_CCD
		     , RFX.RFX_APVL_USE_YN
		     , RFX.RFX_APVL_STS_CCD
		     , RFX.RFX_SLCTN_APVL_USE_YN
		     , RFX.RFX_SLCTN_APVL_STS_CCD
		     , RFX.STS
		     , RFX.REGR_ID
		     , RFX.REG_DTTM
		     , RFX.MODR_ID
		     , RFX.MOD_DTTM
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.OPEN_DTTM
		     , RFX.IMMED_ST_USE_YN
		     , RFX.IMMED_OPEN_USE_YN
		     , (
		        SELECT COUNT(RFX_BID.VD_CD)
		          FROM RFX_BID RFX_BID
		         WHERE RFX_BID.TEN_ID    = RFX.TEN_ID
		           AND RFX_BID.RFX_NO    = RFX.RFX_NO
		           AND RFX_BID.RFX_RND   = RFX.RFX_RND
		           AND RFX_BID.RFX_BID_EFCT_YN  = 'Y'
		           AND RFX_BID.STS      != 'D'
		           AND RFX_BID.RFX_BID_STS_CCD = 'GUP'
		       ) AS RFX_BID_R_CNT
		     , (
		        SELECT COUNT(RFX_BID.VD_CD)
		          FROM RFX_BID RFX_BID
		         WHERE RFX_BID.TEN_ID    = RFX.TEN_ID
		           AND RFX_BID.RFX_NO    = RFX.RFX_NO
		           AND RFX_BID.RFX_RND   = RFX.RFX_RND
		           AND RFX_BID.RFX_BID_EFCT_YN  = 'Y'
		           AND RFX_BID.STS      != 'D'
		           AND RFX_BID.RFX_BID_STS_CCD NOT IN ('RCPT_WTG','CRNG','GUP')
		       ) AS RFX_BID_CNT
		     , (
		        SELECT COUNT(RFX_VD.VD_CD)
		          FROM RFX_VD RFX_VD
		         WHERE RFX_VD.TEN_ID = RFX.TEN_ID
		           AND RFX_VD.RFX_UUID = RFX.RFX_UUID
		           AND RFX_VD.MULTRND_SUBJ_XCEPT_YN = 'N'
		           AND RFX_VD.STS   != 'D'
		       ) AS TOT_RFX_VD_CNT
		     , (
		        SELECT COUNT(RFX_ITEM.RFX_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS   != 'D'
		       ) AS RFX_ITEM_CNT
		     , CASE WHEN RFX.RFX_STS_CCD IN ('CLSG','SLCTN_APVL_PRGSG','ED') AND RFX.ERY_CLSG_RSN IS NOT NULL  THEN 'Y'
		            ELSE 'N'
		        END AS CRC_ED_YN
		     , RFX.ERY_CLSG_RSN
		     , CASE WHEN RFX.RFX_STS_CCD = 'CLSG' AND RFX.RFX_RES_STS_CCD = 'FAILDBID' AND RFX.FAILDBID_RSN IS NOT NULL  THEN 'Y'
		            ELSE 'N'
		        END AS BID_FAIL_YN
		     , RFX.FAILDBID_RSN
		     , CASE WHEN RFX.CLSG_TM_ADJ_RSN IS NULL THEN 'N'
		            WHEN RFX.CLSG_TM_ADJ_RSN = '' THEN 'N'
		            ELSE 'Y'
		        END AS CLOSE_TIME_ADJ_YN
		     , RFX.CLSG_TM_ADJ_RSN
		     , RFX.CSTM_USE_YN  /* 컨소시엄 여부 */
		     , RFX.CSTM_TYP_CCD /* 컨소시엄 유형 */
		     , (
		        SELECT COUNT(1)
		          FROM NEGO NEGO
		         WHERE NEGO.TEN_ID   = RFX.TEN_ID
		           AND NEGO.RFX_UUID = RFX.RFX_UUID
		           AND NEGO.RENEGO_YN = 'N'
		           AND NEGO.NEGO_RES_STS_CCD  = 'STLMT'
		           AND NEGO.NEGO_STS_CCD      = 'NEGO_CMPLD'
		           AND NEGO.STS      != 'D'
		       ) AS NEGO_CNT
		  FROM RFX RFX
		    <choose>
		        <when test="p.item_cds != null and p.item_cds.size() != 0">
		            INNER JOIN RFX_ITEM RFX_ITEM
		               ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		              AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		              AND UPPER(RFX_ITEM.ITEM_CD) IN
		              <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		                  #{item_cd}
		              </foreach>
		        </when>
		        <otherwise>
		            <if test="p.item_cd != null and p.item_cd != ''">
		                <bind name="namePattern" value="'%' + p.item_cd + '%'"/>
		                INNER JOIN RFX_ITEM RFX_ITEM
		                   ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                  AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                  AND UPPER(RFX_ITEM.ITEM_CD) LIKE UPPER(#{namePattern})
		            </if>
		        </otherwise>
		    </choose>
		  LEFT OUTER JOIN TASK_APVL TASK_RFX
		    ON TASK_RFX.TEN_ID = RFX.TEN_ID
		   AND TASK_RFX.TASK_UUID = RFX.RFX_UUID
		   AND TASK_RFX.APVL_TYP_CCD = 'RFX'
		   AND TASK_RFX.USE_YN = 'Y'
		  LEFT OUTER JOIN TASK_APVL TASK_RFX_VD_SLCTN
		    ON TASK_RFX_VD_SLCTN.TEN_ID = RFX.TEN_ID
		   AND TASK_RFX_VD_SLCTN.TASK_UUID = RFX.RFX_UUID
		   AND TASK_RFX_VD_SLCTN.APVL_TYP_CCD = 'RFX_VD_SLCTN'
		   AND TASK_RFX_VD_SLCTN.USE_YN = 'Y'
		  LEFT OUTER JOIN TASK_APVL TASK_NEGO
		    ON TASK_NEGO.TEN_ID = RFX.TEN_ID
		   AND TASK_NEGO.TASK_UUID = RFX.RFX_UUID
		   AND TASK_NEGO.APVL_TYP_CCD = 'NEGO'
		   AND TASK_NEGO.USE_YN = 'Y'
		 WHERE RFX.TEN_ID       = #{g.tenant}
		   AND RFX.STS         != 'D'
		   AND RFX.RFX_TYP_CCD != 'RAUC'
		   <if test="p.rfx_tit != null and p.rfx_tit != ''">
		       <bind name="userNamePattern" value="'%' + p.rfx_tit + '%'"/>
		       AND UPPER(RFX.RFX_TIT) LIKE UPPER(#{userNamePattern})
		   </if>
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND RFX.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_rfx_crn_dt != null">
		       AND RFX.RFX_CRN_DT &gt;= #{p.from_rfx_crn_dt}
		   </if>
		   <if test="p.to_rfx_crn_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_rfx_crn_dt,1)"/>
		       AND RFX.RFX_CRN_DT <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.rfx_purp_ccd != null">
		       AND RFX.RFX_PURP_CCD = #{p.rfx_purp_ccd}
		   </if>
		   <if test="p.rfx_typ_ccd != null">
		       AND RFX.RFX_TYP_CCD = #{p.rfx_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.purc_grp_cds != null and p.purc_grp_cds.size() != 0">
		           AND EXISTS (
		                       SELECT 1
		                         FROM RFX_ITEM
		                        WHERE RFX_ITEM.TEN_ID = RFX.TEN_ID
		                          AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                          AND RFX_ITEM.PURC_GRP_CD IN
		                          <foreach close=")" collection="p.purc_grp_cds" item="purc_grp_cd" open="(" separator=",">
		                              #{purc_grp_cd}
		                          </foreach>
		                      )
		       </when>
		       <otherwise>
		           AND 1=2
		       </otherwise>
		   </choose>
		   <if test="p.item_slctn_typ_ccd != null">
		       AND RFX.ITEM_SLCTN_TYP_CCD = #{p.item_slctn_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.rfx_sts_ccds != null and p.rfx_sts_ccds.size() != 0">
		           AND RFX.RFX_STS_CCD IN
		           <foreach close=")" collection="p.rfx_sts_ccds" item="rfx_sts_ccd" open="(" separator=",">
		               #{rfx_sts_ccd}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_sts_ccd != null">
		               AND RFX.RFX_STS_CCD = #{p.rfx_sts_ccd}
		           </if>
		       </otherwise>
		   </choose>
		   <choose>
		       <when test="p.rfx_res_sts_ccds != null and p.rfx_res_sts_ccds.size() != 0">
		           AND RFX.RFX_RES_STS_CCD IN
		           <foreach close=")" collection="p.rfx_res_sts_ccds" item="rfx_res_sts_ccd" open="(" separator=",">
		               #{rfx_res_sts_ccd}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_res_sts_ccd != null">
		               AND RFX.RFX_RES_STS_CCD = #{p.rfx_res_sts_ccd}
		           </if>
		       </otherwise>
		   </choose>
		   <if test="p.rfx_apvl_sts_ccd != null">
		       AND RFX.RFX_APVL_STS_CCD = #{p.rfx_apvl_sts_ccd}
		   </if>
		   <if test="p.rfx_slctn_apvl_sts_ccd != null">
		       AND RFX.RFX_SLCTN_APVL_STS_CCD = #{p.rfx_slctn_apvl_sts_ccd}
		   </if>
		   <if test="p.purc_typ_ccd    != null">
		       AND RFX.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.rfx_nos != null and p.rfx_nos.size() != 0">
		           AND UPPER(RFX.RFX_NO) IN
		           <foreach close=")" collection="p.rfx_nos" item="rfx_no" open="(" separator=",">
		               #{rfx_no}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_no != null and p.rfx_no != ''">
		               <bind name="namePattern" value="'%' + p.rfx_no + '%'"/>
		               AND UPPER(RFX.RFX_NO) LIKE UPPER(#{namePattern})
		           </if>
		       </otherwise>
		   </choose>
		   <if test="(p.vd_cd != null and p.vd_cd != '') or (p.vd_nm != null and p.vd_nm != '')">
		       AND (
		               (
		                   RFX.COMP_TYP_CCD = 'OBID'
		               AND EXISTS ( SELECT 1
		                              FROM RFX_BID RFX_BID
		                             <if test="p.vd_nm != null and p.vd_nm != ''">
		                             INNER JOIN VD VD
		                                ON VD.TEN_ID = RFX_BID.TEN_ID
		                               AND VD.VD_CD  = RFX_BID.VD_CD
		                             </if>
		                             WHERE RFX_BID.TEN_ID  = RFX.TEN_ID
		                               AND RFX_BID.RFX_NO  = RFX.RFX_NO
		                               AND RFX_BID.RFX_RND = RFX.RFX_RND
		                               <if test="p.vd_cd != null and p.vd_cd != ''">
		                                   <bind name="p_vd_cd" value="'%' + p.vd_cd + '%'"/>
		                                   AND RFX_BID.VD_CD   LIKE UPPER(#{p_vd_cd})
		                               </if>
		                               <if test="p.vd_nm != null and p.vd_nm != ''">
		                                   <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
		                                   AND (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))      /* 협력사 명 검색조건*/
		                               </if>
		                          )
		               )
		            OR (
		                   RFX.COMP_TYP_CCD != 'OBID'
		               AND EXISTS ( SELECT 1
		                              FROM RFX_VD RFX_VD
		                             <if test="p.vd_nm != null and p.vd_nm != ''">
		                             INNER JOIN VD VD
		                                ON VD.TEN_ID = RFX_VD.TEN_ID
		                               AND VD.VD_CD  = RFX_VD.VD_CD
		                             </if>
		                             WHERE RFX_VD.TEN_ID = RFX.TEN_ID
		                               AND RFX_VD.RFX_UUID = RFX.RFX_UUID
		                               AND RFX_VD.MULTRND_SUBJ_XCEPT_YN = 'N'
		                               <if test="p.vd_cd != null and p.vd_cd != ''">
		                                   <bind name="p_vd_cd" value="'%' + p.vd_cd + '%'"/>
		                                   AND RFX_VD.VD_CD  LIKE UPPER(#{p_vd_cd})
		                               </if>
		                               <if test="p.vd_nm != null and p.vd_nm != ''">
		                                   <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
		                                   AND (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))      /* 협력사 명 검색조건*/
		                               </if>
		                          )
		               )
		           )
		   </if>
		 ORDER BY RFX.RFX_NO DESC, RFX.RFX_RND DESC
	</select>
	<insert id="insertRfx">
	/* rfx.insertRfx */
		INSERT INTO RFX (
			TEN_ID
			, RFX_UUID
			, RFX_NO
			, RFX_RND
			, PRE_RFX_UUID
			, OORG_CD
			, RFX_TIT
			, RFX_PURP_CCD
			, RAUC_TYP_CCD
			, RFX_TYP_CCD
			, PURC_GRP_CD
			, RFX_CRN_DT
			, IMMED_ST_USE_YN
			, RFX_ST_DTTM
			, RFX_CLSG_DTTM
			, RFX_CHG_CLSG_DTTM
			, DOMOVRS_DIV_CCD
			, DFRM_RO
			, PYMTMETH_CCD
			, PYMTMETH_EXPLN
			, DLVYMETH_CCD
			, DLVYMETH_EXPLN
            , PYMTMETH_DOM_CCD
		    , PYMTMETH_DOM_EXPLN
		    , DLVYMETH_DOM_CCD
		    , DLVYMETH_DOM_EXPLN
            , PYMTMETH_OVS_CCD
		    , PYMTMETH_OVS_EXPLN
		    , DLVYMETH_OVS_CCD
		    , DLVYMETH_OVS_EXPLN
            , PYMTMETH_DLVYMETH_CHG_POSS_YN
			, CUR_CCD
			, COMP_TYP_CCD
			, ITEM_SLCTN_TYP_CCD
			, SLCTN_TYP_CCD
			<if test="p.slctn_typ_ccd == 'COMPREVAL'">
				, NPE_RO_VD_PUB_YN
				, NPE_RO
				, CBE_RO
				, COMPREVAL_PASS_SC
			</if>
			, AUTO_EXT_USE_YN
			, AUTO_EXT_TM
			, AUTO_EXT_POSS_WD
			, CNTR_ST_DT
			, CNTR_EXP_DT
			, ARRPORT_CCD
			, SHPGMETH_CCD
			, PURC_TYP_CCD
			, BFG_YN
			, PRESN_YN
			, PRTL_BID_PERM_YN
			, TRGPRC_USE_YN
			, COSTSTR_USE_YN
			, CBE_TYP_CCD
			, NPE_STS_CCD
			, BFG_DTTM
			, BFG_PLC
			, BFG_PIC_ID
			, PRESN_ST_DT
			, PRESN_CLSG_DT
			, PRESN_PIC_ID
			, RFX_BUYER_RMK
			, RFX_VD_RMK
			, BUYER_ATHG_UUID
			, VD_ATHG_UUID
			, RFX_STS_CCD
			, RFX_RES_STS_CCD
			, RFX_APVL_USE_YN
			, RFX_APVL_STS_CCD
			, RFX_SLCTN_APVL_USE_YN
			, RFX_SLCTN_APVL_STS_CCD
			, SITEBRFG_UUID
			, SITEBRFG_INP_USE_YN
			, STS
			, REGR_ID
			, REG_DTTM
			, MODR_ID
			, MOD_DTTM
			, IMMED_OPEN_USE_YN
			, OPEN_DTTM
			, CSTM_USE_YN
			, CSTM_TYP_CCD
			, RFX_TMPL_USE_YN
			, PURC_PIC_ID
			, RFX_PRESN_USE_YN
			, IMMED_RFX_PRESN_ST_USE_YN
			, RFX_PRESN_ST_DTTM
			, RFX_PRESN_CLSG_DTTM
			, NPE_REEXEC_YN
			, LONG_TERM_PROD_EFF_USE_YN
		) VALUES (
			#{g.tenant}
			, #{p.rfx_uuid}
			, #{p.rfx_no}
			, CAST(#{p.rfx_rnd} AS INT)
			, #{p.prev_rfx_uuid}
			, #{p.oorg_cd}
			, #{p.rfx_tit}
			, #{p.rfx_purp_ccd}
			, #{p.rauc_typ_ccd}
			, #{p.rfx_typ_ccd}
			, #{p.purc_grp_cd}
			, #{p.rfx_crn_dt}
			<choose>
				<when test="p.immed_st_use_yn != null and p.immed_st_use_yn == &quot;Y&quot;">
					, #{p.immed_st_use_yn}
					, NULL
				</when>
				<otherwise>
					, 'N'
					, #{p.rfx_st_dttm}
				</otherwise>
			</choose>
			, #{p.rfx_clsg_dttm}
			, #{p.rfx_chg_clsg_dttm}
			, #{p.domovrs_div_ccd}
			, CAST(#{p.dfrm_ro} AS FLOAT  )
			, #{p.pymtmeth_ccd}
			, #{p.pymtmeth_expln}
			, #{p.dlvymeth_ccd}
			, #{p.dlvymeth_expln}
            , #{p.pymtmeth_dom_ccd}
            , #{p.pymtmeth_dom_expln}
            , #{p.dlvymeth_dom_ccd}
            , #{p.dlvymeth_dom_expln}
            , #{p.pymtmeth_ovs_ccd}
            , #{p.pymtmeth_ovs_expln}
            , #{p.dlvymeth_ovs_ccd}
            , #{p.dlvymeth_ovs_expln}
            , #{p.pymtmeth_dlvymeth_chg_poss_yn}
			, #{p.cur_ccd}
			, #{p.comp_typ_ccd}
			, #{p.item_slctn_typ_ccd}
			, #{p.slctn_typ_ccd}
			<if test="p.slctn_typ_ccd == 'COMPREVAL'">
				, #{p.npe_ro_vd_pub_yn}
				, CAST(#{p.npe_ro} AS FLOAT  )
				, CAST(#{p.cbe_ro} AS FLOAT  )
				, CAST(#{p.compreval_pass_sc} AS FLOAT  )
			</if>
			, #{p.auto_ext_use_yn}
			, CAST(#{p.auto_ext_tm} AS INT)
			, CAST(#{p.auto_ext_poss_wd} AS INT)
			, #{p.cntr_st_dt}
			, #{p.cntr_exp_dt}
			, #{p.arrport_ccd}
			, #{p.shpgmeth_ccd}
			, #{p.purc_typ_ccd}
			, #{p.bfg_yn}
			, #{p.presn_yn}
			, #{p.prtl_bid_perm_yn}
			, #{p.trgprc_use_yn}
			, #{p.coststr_use_yn}
			, #{p.cbe_typ_ccd}
			, #{p.npe_sts_ccd}
			, #{p.bfg_dttm}
			, #{p.bfg_plc}
			, #{p.bfg_pic_id}
			, #{p.presn_st_dt}
			, #{p.presn_clsg_dt}
			, #{p.presn_pic_id}
			, #{p.rfx_buyer_rmk}
			, #{p.rfx_vd_rmk}
			, #{p.buyer_athg_uuid}
			, #{p.vd_athg_uuid}
			, #{p.rfx_sts_ccd}
			, #{p.rfx_res_sts_ccd}
			, #{p.rfx_apvl_use_yn}
			, #{p.rfx_apvl_sts_ccd}
			, #{p.rfx_slctn_apvl_use_yn}
			, #{p.rfx_slctn_apvl_sts_ccd}
			, #{p.sitebrfg_uuid}
			, #{p.sitebrfg_inp_use_yn}
			, 'C'
			, #{g.username}
			, #{g.now}
			, #{g.username}
			, #{g.now}
			<choose>
				<when test="p.immed_open_use_yn != null and p.immed_open_use_yn == &quot;Y&quot;">
					, #{p.immed_open_use_yn}
					, NULL
				</when>
				<otherwise>
					, 'N'
					, #{p.open_dttm}
				</otherwise>
			</choose>
			<choose>
				<when test="p.cstm_use_yn != null and p.cstm_use_yn == &quot;Y&quot;">
					, #{p.cstm_use_yn}
					, #{p.cstm_typ_ccd}
				</when>
				<otherwise>
					, 'N'
					, NULL
				</otherwise>
			</choose>
			, #{p.rfx_tmpl_use_yn}
			, #{p.purc_pic_id}
			, #{p.rfx_presn_use_yn}
			<choose>
				<when test="p.immed_rfx_presn_st_use_yn != null and p.immed_rfx_presn_st_use_yn == &quot;Y&quot;">
					, #{p.immed_rfx_presn_st_use_yn}
					, NULL
				</when>
				<otherwise>
					, 'N'
					, #{p.rfx_presn_st_dttm}
				</otherwise>
			</choose>
			, #{p.rfx_presn_clsg_dttm}
			, #{p.npe_reexec_yn}
			, #{p.long_term_prod_eff_use_yn}
		)
	</insert>
	<update id="updateRfx">
		/* rfx.updateRfx */
		UPDATE RFX
		   SET RFX_TIT      = #{p.rfx_tit}
		     , RFX_PURP_CCD = #{p.rfx_purp_ccd}
		     , RAUC_TYP_CCD = #{p.rauc_typ_ccd}
		     , RFX_CRN_DT   = #{p.rfx_crn_dt}
		     <choose>
		         <when test="p.immed_st_use_yn != null and p.immed_st_use_yn == &quot;Y&quot;">
		             , IMMED_ST_USE_YN = #{p.immed_st_use_yn}
		             , RFX_ST_DTTM  = NULL
		         </when>
		         <otherwise>
		             , IMMED_ST_USE_YN = 'N'
		             , RFX_ST_DTTM  = #{p.rfx_st_dttm}
		         </otherwise>
		     </choose>
		     , RFX_CLSG_DTTM = #{p.rfx_clsg_dttm}
		     <choose>
		         <when test="p.immed_open_use_yn != null and p.immed_open_use_yn == &quot;Y&quot;">
		             , IMMED_OPEN_USE_YN = #{p.immed_open_use_yn}
		             , OPEN_DTTM = NULL
		         </when>
		         <otherwise>
		             , IMMED_OPEN_USE_YN = 'N'
		             , OPEN_DTTM = #{p.open_dttm}
		         </otherwise>
		     </choose>
		     , RFX_CHG_CLSG_DTTM = #{p.rfx_chg_clsg_dttm}
		     , DOMOVRS_DIV_CCD   = #{p.domovrs_div_ccd}
		     <choose>
		         <when test="p.dfrm_ro == null">
		             , DFRM_RO = NULL
		         </when>
		         <otherwise>
		             , DFRM_RO = CAST(#{p.dfrm_ro} AS FLOAT  )
		         </otherwise>
		     </choose>
		     , PYMTMETH_CCD       = #{p.pymtmeth_ccd}
		     , PYMTMETH_EXPLN     = #{p.pymtmeth_expln}
		     , DLVYMETH_CCD       = #{p.dlvymeth_ccd}
		     , DLVYMETH_EXPLN     = #{p.dlvymeth_expln}
             <choose>
                 <when test="'DOM'.equals(p.domovrs_div_ccd)">
                 , PYMTMETH_DOM_CCD = #{p.pymtmeth_dom_ccd}
                 , PYMTMETH_DOM_EXPLN = #{p.pymtmeth_dom_expln}
                 , DLVYMETH_DOM_CCD = #{p.dlvymeth_dom_ccd}
                 , DLVYMETH_DOM_EXPLN = #{p.dlvymeth_dom_expln}
                 , PYMTMETH_OVS_CCD = NULL
                 , PYMTMETH_OVS_EXPLN = NULL
                 , DLVYMETH_OVS_CCD = NULL
                 , DLVYMETH_OVS_EXPLN = NULL
                 </when>
                 <when test="'OVS'.equals(p.domovrs_div_ccd)">
                 , PYMTMETH_DOM_CCD = NULL
                 , PYMTMETH_DOM_EXPLN = NULL
                 , DLVYMETH_DOM_CCD = NULL
                 , DLVYMETH_DOM_EXPLN = NULL
                 , PYMTMETH_OVS_CCD = #{p.pymtmeth_ovs_ccd}
                 , PYMTMETH_OVS_EXPLN = #{p.pymtmeth_ovs_expln}
                 , DLVYMETH_OVS_CCD = #{p.dlvymeth_ovs_ccd}
                 , DLVYMETH_OVS_EXPLN = #{p.dlvymeth_ovs_expln}
                 </when>
                 <otherwise>
                 , PYMTMETH_DOM_CCD = #{p.pymtmeth_dom_ccd}
                 , PYMTMETH_DOM_EXPLN = #{p.pymtmeth_dom_expln}
                 , DLVYMETH_DOM_CCD = #{p.dlvymeth_dom_ccd}
                 , DLVYMETH_DOM_EXPLN = #{p.dlvymeth_dom_expln}
                 , PYMTMETH_OVS_CCD = #{p.pymtmeth_ovs_ccd}
                 , PYMTMETH_OVS_EXPLN = #{p.pymtmeth_ovs_expln}
                 , DLVYMETH_OVS_CCD = #{p.dlvymeth_ovs_ccd}
                 , DLVYMETH_OVS_EXPLN = #{p.dlvymeth_ovs_expln}
                 </otherwise>
             </choose>
             , PYMTMETH_DLVYMETH_CHG_POSS_YN = #{p.pymtmeth_dlvymeth_chg_poss_yn}
		     , CUR_CCD            = #{p.cur_ccd}
		     , COMP_TYP_CCD       = #{p.comp_typ_ccd}
		     , ITEM_SLCTN_TYP_CCD = #{p.item_slctn_typ_ccd}
		     , SLCTN_TYP_CCD      = #{p.slctn_typ_ccd}
		     <if test="p.slctn_typ_ccd == 'COMPREVAL'">
		         , NPE_RO_VD_PUB_YN = #{p.npe_ro_vd_pub_yn}
		         , NPE_RO = CAST(#{p.npe_ro} AS FLOAT  )
		         , CBE_RO = CAST(#{p.cbe_ro} AS FLOAT  )
			     , COMPREVAL_PASS_SC = CAST(#{p.compreval_pass_sc} AS FLOAT  )
		     </if>
		     <choose>
		         <when test="p.auto_ext_use_yn != null and p.auto_ext_use_yn == &quot;Y&quot;">
		             , AUTO_EXT_USE_YN = #{p.auto_ext_use_yn}
		             , AUTO_EXT_TM     = CAST(#{p.auto_ext_tm} AS INT)
		         </when>
		         <otherwise>
		             , AUTO_EXT_USE_YN = 'N'
		             , AUTO_EXT_TM     = NULL
		         </otherwise>
		     </choose>
		     , AUTO_EXT_POSS_WD = CAST(#{p.auto_ext_poss_wd} AS INT)
		     , CNTR_ST_DT       = #{p.cntr_st_dt}
		     , CNTR_EXP_DT      = #{p.cntr_exp_dt}
		     , ARRPORT_CCD      = #{p.arrport_ccd}
		     , SHPGMETH_CCD     = #{p.shpgmeth_ccd}
		     , PURC_TYP_CCD     = #{p.purc_typ_ccd}
		     , PURC_GRP_CD      = #{p.purc_grp_cd}
		     , BFG_YN           = #{p.bfg_yn}
		     <choose>
		         <when test="p.bfg_yn == &quot;Y&quot;">
		             , BFG_DTTM   = #{p.bfg_dttm}
		             , BFG_PLC    = #{p.bfg_plc}
		             , BFG_PIC_ID = #{p.bfg_pic_id}
		         </when>
		         <otherwise>
		             , BFG_DTTM   = NULL
		             , BFG_PLC    = NULL
		             , BFG_PIC_ID = NULL
		         </otherwise>
		     </choose>
		     , PRESN_YN = #{p.presn_yn}
		     <choose>
		         <when test="p.presn_yn == &quot;Y&quot;">
		             , PRESN_ST_DT   = #{p.presn_st_dt}
		             , PRESN_CLSG_DT = #{p.presn_clsg_dt}
		             , PRESN_PIC_ID  = #{p.presn_pic_id}
		         </when>
		         <otherwise>
		             , PRESN_ST_DT   = NULL
		             , PRESN_CLSG_DT = NULL
		             , PRESN_PIC_ID  = NULL
		         </otherwise>
		     </choose>
		     , PRTL_BID_PERM_YN       = #{p.prtl_bid_perm_yn}
		     , TRGPRC_USE_YN          = #{p.trgprc_use_yn}
		     , COSTSTR_USE_YN         = #{p.coststr_use_yn}
		     , CBE_TYP_CCD            = #{p.cbe_typ_ccd}
		     , NPE_STS_CCD            = #{p.npe_sts_ccd}
		     , RFX_BUYER_RMK          = #{p.rfx_buyer_rmk}
		     , RFX_VD_RMK             = #{p.rfx_vd_rmk}
		     , BUYER_ATHG_UUID        = #{p.buyer_athg_uuid}
		     , VD_ATHG_UUID           = #{p.vd_athg_uuid}
		     , RFX_STS_CCD            = #{p.rfx_sts_ccd}
		     , RFX_RES_STS_CCD        = #{p.rfx_res_sts_ccd}
		     , RFX_APVL_USE_YN        = #{p.rfx_apvl_use_yn}
		     , RFX_APVL_STS_CCD       = #{p.rfx_apvl_sts_ccd}
		     , RFX_SLCTN_APVL_USE_YN  = #{p.rfx_slctn_apvl_use_yn}
		     , RFX_SLCTN_APVL_STS_CCD = #{p.rfx_slctn_apvl_sts_ccd}
		     , SITEBRFG_UUID          = #{p.sitebrfg_uuid}
		     , SITEBRFG_INP_USE_YN    = #{p.sitebrfg_inp_use_yn}
		     <choose>
		         <when test="p.cstm_use_yn != null and p.cstm_use_yn == &quot;Y&quot;">
		             , CSTM_USE_YN  = #{p.cstm_use_yn}
		             , CSTM_TYP_CCD = #{p.cstm_typ_ccd}
		         </when>
		         <otherwise>
		             , CSTM_USE_YN  = 'N'
		             , CSTM_TYP_CCD = NULL
		         </otherwise>
		     </choose>
		     <if test="p.rfx_typ_ccd != null">
		         , RFX_TYP_CCD = #{p.rfx_typ_ccd}
		     </if>
		     , STS             = 'U'
		     , MODR_ID         = #{g.username}
		     , MOD_DTTM        = #{g.now}
		     , RFX_TMPL_USE_YN = #{p.rfx_tmpl_use_yn}
		     , PURC_PIC_ID     = #{g.username}
		     , RFX_PRESN_USE_YN = #{p.rfx_presn_use_yn}
		     <choose>
		         <when test="p.rfx_presn_use_yn == &quot;Y&quot;">
		             <choose>
		                 <when test="p.immed_rfx_presn_st_use_yn != null and p.immed_rfx_presn_st_use_yn == &quot;Y&quot;">
		                     , IMMED_RFX_PRESN_ST_USE_YN = #{p.immed_rfx_presn_st_use_yn}
		                     , RFX_PRESN_ST_DTTM = NULL
		                 </when>
		                 <otherwise>
		                     , IMMED_RFX_PRESN_ST_USE_YN = 'N'
		                     , RFX_PRESN_ST_DTTM = #{p.rfx_presn_st_dttm}
		                 </otherwise>
		             </choose>
		             , RFX_PRESN_CLSG_DTTM = #{p.rfx_presn_clsg_dttm}
		         </when>
		         <otherwise>
		             , IMMED_RFX_PRESN_ST_USE_YN = 'Y'
		             , RFX_PRESN_ST_DTTM = NULL
		             , RFX_PRESN_CLSG_DTTM = NULL
		         </otherwise>
		     </choose>
		     , NPE_REEXEC_YN = #{p.npe_reexec_yn}
		     , LONG_TERM_PROD_EFF_USE_YN = #{p.long_term_prod_eff_use_yn}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="updateStartDt">
		/* rfx.updateStartDt */
		UPDATE RFX
		   SET RFX_ST_DTTM = #{p.rfx_st_dttm}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="updateCloseDt">
		/* rfx.updateCloseDt */
		UPDATE RFX
		   SET RFX_CLSG_DTTM = #{p.rfx_clsg_dttm}
		     <if test="p.auto_ext_poss_wd != null">
		         , AUTO_EXT_POSS_WD = #{p.auto_ext_poss_wd}
		     </if>
		     <if test="p.open_dttm != null">
		         , OPEN_DTTM = #{p.open_dttm}
		     </if>
		     , CLSG_TM_ADJ_RSN = #{p.clsg_tm_adj_rsn}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="updateRfxPrcEvalTyp">
		/* rfx.updateRfxPrcEvalTyp */
		UPDATE RFX
		   SET CBE_TYP_CCD = #{p.cbe_typ_ccd}    /* 가격평가유형 */
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<delete id="deleteRfx">
		/* rfx.deleteRfx : RFx 삭제*/
		DELETE
		  FROM RFX
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</delete>
	<select id="findListRfxVdBid" resultType="map">
		/* rfx.findListRfxVdBid : 견적요청업체(수의,지명) 견적서 리스트 */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_TIT
		     , RFX.RFX_RND
		     , RFX.OORG_CD
		     , RFX.RFX_PURP_CCD
		     , RFX.RAUC_TYP_CCD
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_CRN_DT
		     , RFX.RFX_ST_DTTM
		     , RFX.RFX_CLSG_DTTM
		     , RFX.RFX_CHG_CLSG_DTTM
		     , CASE WHEN RFX_BID.DOMOVRS_DIV_CCD IS NOT NULL  THEN RFX_BID.DOMOVRS_DIV_CCD
                    ELSE RFX.DOMOVRS_DIV_CCD
                END AS DOMOVRS_DIV_CCD
		     , RFX.DFRM_RO
		     , CASE WHEN RFX_BID.PYMTMETH_CCD IS NOT NULL  THEN RFX_BID.PYMTMETH_CCD
                    ELSE RFX.PYMTMETH_CCD
                END AS PYMTMETH_CCD
		     , CASE WHEN RFX_BID.PYMTMETH_EXPLN IS NOT NULL  THEN RFX_BID.PYMTMETH_EXPLN
                    ELSE RFX.PYMTMETH_EXPLN
                END AS PYMTMETH_EXPLN
		     , CASE WHEN RFX_BID.DLVYMETH_CCD IS NOT NULL  THEN RFX_BID.DLVYMETH_CCD
                    ELSE RFX.DLVYMETH_CCD
                END AS DLVYMETH_CCD
		     , CASE WHEN RFX_BID.DLVYMETH_EXPLN IS NOT NULL  THEN RFX_BID.DLVYMETH_EXPLN
                    ELSE RFX.DLVYMETH_EXPLN
                END AS DLVYMETH_EXPLN
             , RFX.PYMTMETH_DOM_CCD
		     , RFX.PYMTMETH_DOM_EXPLN
		     , RFX.DLVYMETH_DOM_CCD
		     , RFX.DLVYMETH_DOM_EXPLN
             , RFX.PYMTMETH_OVS_CCD
		     , RFX.PYMTMETH_OVS_EXPLN
		     , RFX.DLVYMETH_OVS_CCD
		     , RFX.DLVYMETH_OVS_EXPLN
             , RFX.PYMTMETH_DLVYMETH_CHG_POSS_YN
		     , RFX.COMP_TYP_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		     , RFX.SLCTN_TYP_CCD
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.AUTO_EXT_TM
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX.PURC_TYP_CCD
		     , RFX.BFG_YN
		     , RFX.PRESN_YN
		     , RFX.PRTL_BID_PERM_YN
		     , RFX.COSTSTR_USE_YN
		     , RFX.NPE_RO_VD_PUB_YN
		     , RFX.CBE_TYP_CCD
		     , RFX.NPE_RO
		     , RFX.CBE_RO
		     , RFX.BFG_DTTM
		     , RFX.BFG_PLC
		     , RFX.BFG_PIC_ID
		     , RFX.PRESN_ST_DT
		     , RFX.PRESN_CLSG_DT
		     , RFX.PRESN_PIC_ID
		     , RFX.RFX_BUYER_RMK
		     , RFX.RFX_VD_RMK
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.RFX_STS_CCD
		     , RFX.RFX_RES_STS_CCD
		     , RFX.RFX_APVL_USE_YN
		     , RFX.RFX_APVL_STS_CCD
		     , RFX.RFX_SLCTN_APVL_USE_YN
		     , RFX.RFX_SLCTN_APVL_STS_CCD
		     , RFX.AUTO_EXT_POSS_WD
		     , RFX.OPEN_DTTM
		     , RFX.IMMED_ST_USE_YN
		     , RFX.IMMED_OPEN_USE_YN
		     , (
		        SELECT COUNT(RFX_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		       ) AS RFX_ITEM_CNT
		     , RFX_BID.RFX_BID_UUID
		     , RFX_BID.RFX_BID_NO
		     , RFX_BID.RFX_BID_REVNO
		     , RFX_BID.RFX_BID_EFCT_YN
		     , RFX_VD.VD_CD
		     , VD_OORG.OBD_TYP_CCD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS VD_NM
		     , VD.ERP_VD_CD
		     , CASE WHEN VD.ERP_VD_CD IS NULL OR VD.ERP_VD_CD = '' THEN RFX_VD.VD_CD
		            ELSE VD.ERP_VD_CD
		        END AS DISP_VD_CD
		     , RFX_VD.VD_PIC_UUID
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD_USR.USR_NM_EN
		            ELSE VD_USR.USR_NM
		        END AS VD_PIC_NM
		     , RFX_VD.VD_PIC_TEL
		     , RFX_VD.VD_PIC_EML
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.RFX_BID_EFCT_DT
		            ELSE NULL
		        END AS RFX_BID_EFCT_DT
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.CUR_CCD
		            ELSE NULL
		        END AS CUR_CCD
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.RFX_BID_AMT
		            ELSE NULL
		        END AS RFX_BID_AMT
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.ATHG_UUID
		            ELSE NULL
		        END AS ATHG_UUID
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD IS NULL OR RFX_BID.RFX_BID_STS_CCD = '' THEN 'RCPT_WTG'  -- 미제출
		            ELSE RFX_BID.RFX_BID_STS_CCD
		        END AS RFX_BID_STS_CCD  /* 업체견적진행상태 P024 */
		     , CASE WHEN RFX.RFX_STS_CCD != 'ED' THEN 'N'
		            WHEN RFX_BID.SLCTN_YN IS NULL OR RFX_BID.SLCTN_YN = '' THEN 'N'
		            ELSE RFX_BID.SLCTN_YN
		        END AS SLCTN_YN    /* 선정 여부 */
		     , RFX_BID.PFDBIDER_YN
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.RMK
		            ELSE NULL
		        END AS RMK
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.RFX_BID_DTTM
		            ELSE NULL
		        END AS RFX_BID_DTTM
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN RFX_BID.VD_SUBMR_ID
		            ELSE NULL
		        END AS VD_SUBMR_ID
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		                                                            ELSE USR.USR_NM
		                                                        END
		            ELSE NULL
		        END AS SBMT_NM
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN USR.TEL
		            ELSE NULL
		        END AS SBMT_PHONE_NO
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'SUBM' THEN USR.EML
		            ELSE NULL
		        END AS SBMT_EMAIL
		     , CASE WHEN RFX_BID.RFX_BID_STS_CCD = 'GUP' THEN RFX_BID.GUP_RSN
		            ELSE NULL
		        END AS GUP_RSN
		  FROM RFX RFX
		 INNER JOIN RFX_VD RFX_VD
		    ON RFX_VD.TEN_ID   = #{g.tenant}
		   AND RFX_VD.RFX_UUID = RFX.RFX_UUID
		   AND RFX_VD.MULTRND_SUBJ_XCEPT_YN = 'N'
		   AND RFX_VD.STS != 'D'
		 INNER JOIN VD VD
		    ON VD.VD_CD  = RFX_VD.VD_CD
		   AND VD.TEN_ID = #{g.tenant}
		   AND VD.STS   != 'D'
		 INNER JOIN VD_OORG VD_OORG
		    ON VD_OORG.TEN_ID = VD.TEN_ID
		   AND VD_OORG.VD_CD  = VD.VD_CD
		   AND VD_OORG.OORG_CD IN (
		                           SELECT OORG_MAPG.CONNSUBJ_OORG_CD
		                             FROM OORG_MAPG OORG_MAPG
		                            WHERE OORG_MAPG.TEN_ID          = RFX.TEN_ID
		                              AND OORG_MAPG.CONNSRC_OORG_CD = RFX.OORG_CD
		                              AND OORG_MAPG.CONN_TYP_CCD    = 'POEO'
		                              AND OORG_MAPG.CONN_YN         = 'Y'
		                          )
		   AND VD_OORG.STS != 'D'
		  LEFT OUTER JOIN USR VD_USR
		    ON VD_USR.TEN_ID = RFX_VD.TEN_ID
		   AND VD_USR.VD_CD  = RFX_VD.VD_CD
		   AND VD_USR.USR_ID = RFX_VD.VD_PIC_UUID
		  LEFT OUTER JOIN RFX_BID RFX_BID
		    ON RFX_BID.TEN_ID           = RFX.TEN_ID
		   AND RFX_BID.RFX_NO           = RFX.RFX_NO
		   AND RFX_BID.RFX_RND          = RFX.RFX_RND
		   AND RFX_BID.RFX_BID_EFCT_YN  = 'Y'
		   AND RFX_BID.RFX_BID_STS_CCD != 'CRNG'
		   AND RFX_BID.VD_CD            = RFX_VD.VD_CD
		   AND RFX_BID.STS             != 'D'
		  LEFT OUTER JOIN USR USR
		    ON USR.TEN_ID = RFX_BID.TEN_ID
		   AND USR.USR_ID = RFX_BID.VD_SUBMR_ID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX.STS     != 'D'
		 ORDER BY RFX_VD.VD_CD
	</select>
	<select id="compareRfxHdSts" resultType="map">
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.RFX_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P013'    /* RFx 진행상태 */
		           AND DTLCD.DTLCD  = RFX.RFX_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS RFX_STS_CCD_NM
		     , RFX.RFX_RES_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P014'    /* RFx 종료상태 */
		           AND DTLCD.DTLCD  = RFX.RFX_RES_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS RFX_RES_STS_CCD_NM
		     , RFX.NPE_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P084'    /* 비가격평가 상태 */
		           AND DTLCD.DTLCD  = RFX.NPE_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS NPE_STS_CCD_NM
		     , CASE WHEN RFX.RFX_STS_CCD = #{p.rfx_sts_ccd}
		             AND RFX.RFX_RES_STS_CCD <choose>
		                                          <when test="p.rfx_res_sts_ccd != null">
		                                              = #{p.rfx_res_sts_ccd}
		                                          </when>
		                                          <otherwise>
		                                              IS NULL OR RFX.RFX_RES_STS_CCD = ''
		                                          </otherwise>
		                                      </choose>
		             AND (
		                     RFX.RFX_TYP_CCD = 'RFQ'
		                  OR (
		                         RFX.RFX_TYP_CCD = 'RFP'
		                     AND RFX.NPE_STS_CCD <choose>
		                                              <when test="p.npe_sts_ccd != null">
		                                                  = #{p.npe_sts_ccd}
		                                              </when>
		                                              <otherwise>
		                                                  IS NULL OR RFX.NPE_STS_CCD = ''
		                                              </otherwise>
		                                          </choose>
		                     )
		                 )
		                 THEN 'Y'
		            ELSE 'N'
		        END AS VALID_YN
		  FROM RFX RFX
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="checkFieldIntroDrictCreteYn" resultType="java.lang.String">
		/* rfx.checkFieldIntroDrictCreteYn : 현장설명회 직접 생성 여부 조회 */
		SELECT CASE WHEN BFG_YN = 'Y' AND SITEBRFG_INP_USE_YN = 'Y' AND SITEBRFG_UUID IS NULL THEN 'Y'
			        WHEN BFG_YN = 'Y' AND SITEBRFG_INP_USE_YN = 'Y' AND SITEBRFG_UUID = '' THEN 'Y'
		            ELSE 'N'
		        END AS SITEBRFG_INP_USE_YN
		  FROM RFX
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="findRfxByResult" resultType="map">
		/* rfx.findRfxByResult */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_TIT
		     , RFX.RFX_RND
		     , RFX.OORG_CD
			 , RFX.PURC_GRP_CD
		     , RFX.RFX_PURP_CCD
		     , RFX.RAUC_TYP_CCD
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_CRN_DT
		     , RFX.RFX_ST_DTTM
		     , RFX.RFX_CLSG_DTTM
		     , RFX.RFX_CHG_CLSG_DTTM
		     , RFX.DOMOVRS_DIV_CCD
		     , RFX.DFRM_RO
		     , RFX.PYMTMETH_CCD
		     , RFX.PYMTMETH_EXPLN
		     , RFX.DLVYMETH_CCD
		     , RFX.DLVYMETH_EXPLN
             , RFX.PYMTMETH_DOM_CCD
		     , RFX.PYMTMETH_DOM_EXPLN
		     , RFX.DLVYMETH_DOM_CCD
		     , RFX.DLVYMETH_DOM_EXPLN
             , RFX.PYMTMETH_OVS_CCD
		     , RFX.PYMTMETH_OVS_EXPLN
		     , RFX.DLVYMETH_OVS_CCD
		     , RFX.DLVYMETH_OVS_EXPLN
             , RFX.PYMTMETH_DLVYMETH_CHG_POSS_YN
		     , RFX.CUR_CCD
		     , RFX.COMP_TYP_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		     , RFX.SLCTN_TYP_CCD
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.AUTO_EXT_TM
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX.PURC_TYP_CCD
		     , RFX.BFG_YN
		     , RFX.PRESN_YN
		     , RFX.PRTL_BID_PERM_YN
		     , RFX.COSTSTR_USE_YN
		     , RFX.NPE_RO_VD_PUB_YN
		     , RFX.CBE_TYP_CCD
		     , RFX.NPE_RO
		     , RFX.CBE_RO
		     , RFX.COMPREVAL_PASS_SC
		     , RFX.BFG_DTTM
		     , RFX.BFG_PLC
		     , RFX.BFG_PIC_ID
		     , RFX.RFX_PRESN_USE_YN
		     , RFX.PRESN_ST_DT
		     , RFX.PRESN_CLSG_DT
		     , RFX.PRESN_PIC_ID
		     , RFX.RFX_BUYER_RMK
		     , RFX.RFX_VD_RMK
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.RFX_STS_CCD
		     , RFX.RFX_RES_STS_CCD
		     , RFX.RFX_APVL_USE_YN
		     , RFX.RFX_APVL_STS_CCD
		     , RFX.RFX_SLCTN_APVL_USE_YN
		     , RFX.RFX_SLCTN_APVL_STS_CCD
		     , RFX.NPE_STS_CCD
		     , RFX.AUTO_EXT_POSS_WD
		     , RFX.OPEN_DTTM
		     , RFX.IMMED_ST_USE_YN
		     , RFX.IMMED_OPEN_USE_YN
		     , (
		        SELECT MAX(RFX_ITEM.PR_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		           AND RFX_ITEM.PR_ITEM_UUID IS NOT NULL  ) AS PR_ITEM_UUID
		     , (
		        SELECT MAX(RFX_ITEM.UPCR_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		           AND RFX_ITEM.UPCR_ITEM_UUID IS NOT NULL  ) AS UPCR_ITEM_UUID
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                     AND RFX_ITEM.STS     != 'D'
		                     AND RFX_ITEM.PR_ITEM_UUID IS NOT NULL  ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_PR_ITEM_YN    /* PR 품목 존재여부 */
		     , CASE WHEN (SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID    = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID  = RFX.RFX_UUID
		                     AND RFX_ITEM.STS      != 'D'
		                     AND RFX_ITEM.UPCR_ITEM_UUID IS NOT NULL  ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_UPCR_ITEM_YN /* PR UPCR 품목 존재여부 */
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID   = RFX.RFX_UUID
		                     AND RFX_ITEM.ED_YN = 'Y'
		                     AND RFX_ITEM.STS     != 'D'
		                 ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_CLOSED_ITEM_YN      /* 종료된 품목 존재여부 */
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                     AND RFX_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'
		                     AND RFX_ITEM.STS != 'D'
		                 ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_NO_CD_ITEM          /* 무코드 품목 존재여부 */
		     , CASE WHEN RFX.IMMED_OPEN_USE_YN = 'Y' THEN 'Y'
		            WHEN RFX.OPEN_DTTM <![CDATA[<=]]> #{g.now} THEN 'Y'
		            ELSE 'N'
		        END AS CHECK_RFX_OPEN_TIME_YN
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.BFG_PIC_ID
		           AND USR.STS   != 'D'
		       ) AS BFG_PIC_NM         /* 현장설명회 담당자 */
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.PRESN_PIC_ID
		           AND USR.STS   != 'D'
		       ) AS PRESN_PIC_NM          /* 제안발표 담당자 */
		     , (
		        SELECT SUM(  GETPRECFORMAT(#{g.tenant}, 'amt', RFX_ITEM.RFX_QTY * RFX_ITEM.RFX_REQ_UPRC, RFX_ITEM.CUR_CCD))
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		       ) AS TOT_RFQ_AMT             /* 총 RFX 요청 금액 */
		     , (
		        SELECT COUNT(RFX_BID.VD_CD)
		          FROM RFX_BID RFX_BID
		         WHERE RFX_BID.TEN_ID    = RFX.TEN_ID
		           AND RFX_BID.RFX_NO    = RFX.RFX_NO
		           AND RFX_BID.RFX_RND   = RFX.RFX_RND
		           AND RFX_BID.RFX_BID_EFCT_YN  = 'Y'
		           AND RFX_BID.STS      != 'D'
		           AND RFX_BID.RFX_BID_STS_CCD NOT IN ('RCPT_WTG','CRNG','GUP')
		       ) AS RFX_BID_CNT             /* 제출업체 수 */
		     , (
		        SELECT COUNT(RFX_ITEM.RFX_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		           AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		           AND RFX_ITEM.STS     != 'D'
		       ) AS RFX_ITEM_CNT -- RFX 품목 수
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.MODR_ID
		           AND USR.STS   != 'D'
		       ) AS USR_NM -- 작성자 명
		     , (
		        SELECT COUNT(1)
		          FROM NEGO NEGO
		         WHERE NEGO.TEN_ID           = RFX.TEN_ID
		           AND NEGO.RFX_UUID         = RFX.RFX_UUID
		           AND NEGO.RENEGO_YN        = 'N'
		           AND NEGO.NEGO_RES_STS_CCD = 'STLMT'
		           AND NEGO.NEGO_STS_CCD     = 'NEGO_CMPLD'
		           AND NEGO.STS             != 'D'
		       ) AS NEGO_CNT
		     , RFX.SLCTN_RSN
		  FROM RFX RFX
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="checkRfxResultApproval" resultType="java.lang.Integer">
		/* rfx.checkRfxResultApproval: RFx 선정품의 결재 작성건 체크 */
		SELECT COUNT(1)
		  FROM TASK_APVL TASK_APVL
		 INNER JOIN APVL APVL
		    ON APVL.TEN_ID       = TASK_APVL.TEN_ID
		   AND APVL.APVL_UUID    = TASK_APVL.APVL_UUID
		 WHERE TASK_APVL.TEN_ID        = #{g.tenant}
		   AND TASK_APVL.TASK_UUID     = #{p.rfx_uuid}
		   AND TASK_APVL.APVL_TYP_CCD  = 'RFX_VD_SLCTN'
		   AND TASK_APVL.USE_YN        = 'Y'
		   AND APVL.APVL_STS_CCD = 'CRNG'
		   AND APVL.STS         != 'D'
	</select>
	<select id="findRfxResultApprovalId" resultType="java.lang.String">
		/* rfx.findRfxResultApprovalId: RFx 선정품의 결재 작성건 id 조회 */
		SELECT APVL.APVL_UUID
		  FROM TASK_APVL TASK_APVL
		 INNER JOIN APVL APVL
		    ON APVL.TEN_ID       = TASK_APVL.TEN_ID
		   AND APVL.APVL_UUID    = TASK_APVL.APVL_UUID
		 WHERE TASK_APVL.TEN_ID        = #{g.tenant}
		   AND TASK_APVL.TASK_UUID     = #{p.rfx_uuid}
		   AND TASK_APVL.APVL_TYP_CCD  = 'RFX_VD_SLCTN'
		   AND TASK_APVL.USE_YN        = 'Y'
		   AND APVL.APVL_STS_CCD = 'CRNG'
		   AND APVL.STS         != 'D'
	</select>
	<select id="findListCsByRfx" resultType="map">
		/* rfx.findListCsByRfx */
		SELECT RFX_CSTM_VD.RFX_UUID
		     , RFX_CSTM_VD.VD_CD
		     , VD.ERP_VD_CD
		     , CASE WHEN VD.ERP_VD_CD IS NULL OR VD.ERP_VD_CD = '' THEN VD.VD_CD
		            ELSE VD.ERP_VD_CD
		        END AS DISP_VD_CD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS VD_NM
		     , RFX_CSTM_VD.REP_VD_CD
		     , RFX_CSTM_VD.REP_VD_YN
		     , (
		        SELECT COUNT(RFX_CSTM_VD.VD_CD)
		          FROM RFX_CSTM_VD A
		         WHERE A.TEN_ID    = RFX_CSTM_VD.TEN_ID
		           AND A.RFX_UUID  = RFX_CSTM_VD.RFX_UUID
		           AND A.REP_VD_CD = RFX_CSTM_VD.REP_VD_CD
		       ) AS CNT_CS_VD
		     , RFX_CSTM_VD.CSTM_PTCP_CONFM_DTTM
		  FROM RFX_CSTM_VD RFX_CSTM_VD
		 INNER JOIN VD VD
		    ON VD.TEN_ID = RFX_CSTM_VD.TEN_ID
		   AND VD.VD_CD  = RFX_CSTM_VD.VD_CD
		 WHERE RFX_CSTM_VD.TEN_ID    = #{g.tenant}
		   AND RFX_CSTM_VD.RFX_UUID  = #{p.rfx_uuid}
		   AND RFX_CSTM_VD.REP_VD_YN = 'Y'  /* 대표업체 */
		   AND RFX_CSTM_VD.CSTM_PTCP_CONFM_YN = 'Y'  /* 제출(승인) */
		 ORDER BY RFX_CSTM_VD.VD_CD
	</select>
	<select id="findRfxCs" resultType="map">
		/* rfx.findRfxCs */
		SELECT RFX_CSTM_VD.RFX_UUID
		     , RFX_CSTM_VD.VD_CD
		     , RFX_CSTM_VD.REP_VD_CD
		     , RFX_CSTM_VD.REP_VD_YN
		     , RFX_CSTM_VD.CSTM_TYP_CCD
		     , RFX_CSTM_VD.CSTM_PTCP_CONFM_YN
		     , RFX_CSTM_VD.CSTM_PTCP_CONFM_DTTM
		     , RFX_CSTM_VD.CSTM_PTCP_REQ_SND_YN
		  FROM RFX_CSTM_VD RFX_CSTM_VD
		 WHERE RFX_CSTM_VD.TEN_ID    = #{g.tenant}
		   AND RFX_CSTM_VD.RFX_UUID  = #{p.rfx_uuid}
		   AND RFX_CSTM_VD.VD_CD     = #{p.rep_vd_cd}
		   AND RFX_CSTM_VD.REP_VD_CD = #{p.rep_vd_cd}
	</select>
	<select id="findListRfxCsVd" resultType="map">
		/* rfx.findListRfxCsVd */
		SELECT T.RFX_UUID
		     , T.RFX_NO
		     , T.RFX_RND
		     , T.VD_CD
		     , T.VD_NM
		     , T.BIZREGNO
		     , T.REP_VD_CD
		     , T.INVT_RO
		     , T.INVT_ALOT_CONT
		     , T.REP_VD_YN
		     , T.CSTM_PTCP_CONFM_YN
		     , T.CSTM_PTCP_CONFM_DTTM
		     , T.CSTM_PTCP_REQ_SND_YN
		     , T.SORT_ORD
		  FROM ( SELECT RFX_CSTM_VD.RFX_UUID
		              , RFX_CSTM_VD.RFX_NO
		              , RFX_CSTM_VD.RFX_RND
		              , RFX_CSTM_VD.VD_CD
		              , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		                     ELSE VD.VD_NM
		                 END AS VD_NM
		              , VD.BIZREGNO
		              , RFX_CSTM_VD.REP_VD_CD
		              , RFX_CSTM_VD.INVT_RO
		              , RFX_CSTM_VD.INVT_ALOT_CONT
		              , RFX_CSTM_VD.REP_VD_YN
		              , RFX_CSTM_VD.CSTM_PTCP_CONFM_YN
		              , RFX_CSTM_VD.CSTM_PTCP_CONFM_DTTM
		              , RFX_CSTM_VD.CSTM_PTCP_REQ_SND_YN
		              , CASE WHEN RFX_CSTM_VD.REP_VD_YN = 'Y' THEN 1
		                     ELSE 2
		                 END AS SORT_ORD
		           FROM RFX_CSTM_VD RFX_CSTM_VD
		          INNER JOIN VD VD
		             ON VD.TEN_ID = RFX_CSTM_VD.TEN_ID
		            AND VD.VD_CD  = RFX_CSTM_VD.VD_CD
		          WHERE RFX_CSTM_VD.TEN_ID    = #{g.tenant}
		            AND RFX_CSTM_VD.RFX_UUID  = #{p.rfx_uuid}
		            AND RFX_CSTM_VD.REP_VD_CD = #{p.rep_vd_cd}
		       ) T
		 ORDER BY T.SORT_ORD, T.VD_CD
	</select>
	<select id="findListRfxSlctnVd" resultType="map">
		SELECT RFX_SLCTN_VD.RFX_SLCTN_VD_UUID
		     , RFX_SLCTN_VD.RFX_UUID
		     , RFX_SLCTN_VD.RFX_NXT_PRCS_REQ_UUID
		     , RFX_BID.DOMOVRS_DIV_CCD
		     , RFX_SLCTN_VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_NO
		     , RFX_NXT_PRCS_REQ.CNFD_YN
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_CCD
		     , RFX_NXT_PRCS_REQ.REQ_STS_CCD
		     , RFX.OORG_CD
		     , RFX.RFX_PURP_CCD
		     , RFX.PURC_TYP_CCD
		     , RFX.PURC_GRP_CD
		     , RFX.DFRM_RO
		     , RFX_BID.PYMTMETH_CCD
		     , RFX_BID.PYMTMETH_EXPLN
		     , RFX_BID.DLVYMETH_CCD
		     , RFX_BID.DLVYMETH_EXPLN
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX_BID.CUR_CCD
		  FROM RFX_SLCTN_VD
		  LEFT OUTER JOIN RFX_NXT_PRCS_REQ
		    ON RFX_NXT_PRCS_REQ.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND RFX_NXT_PRCS_REQ.RFX_NXT_PRCS_REQ_UUID = RFX_SLCTN_VD.RFX_NXT_PRCS_REQ_UUID
		 INNER JOIN VD
		    ON VD.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND VD.VD_CD = RFX_SLCTN_VD.VD_CD
		 INNER JOIN RFX
		    ON RFX.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND RFX.RFX_UUID = RFX_SLCTN_VD.RFX_UUID
		 INNER JOIN RFX_BID
		    ON RFX_BID.TEN_ID = RFX.TEN_ID
		   AND RFX_BID.RFX_UUID = RFX.RFX_UUID
		   AND RFX_BID.VD_CD = RFX_SLCTN_VD.VD_CD
		   AND RFX_BID.SLCTN_YN = 'Y'
		 WHERE RFX_SLCTN_VD.TEN_ID = #{g.tenant}
		   AND RFX_SLCTN_VD.RFX_UUID = #{p.rfx_uuid}
	</select>
	<update id="updateRfxSlctnNxtPrc">
		UPDATE RFX_SLCTN_VD
		   SET RFX_NXT_PRCS_REQ_UUID = #{p.rfx_nxt_prcs_req_uuid}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_SLCTN_VD_UUID = #{p.rfx_slctn_vd_uuid}
	</update>
	<insert id="insertRfxSlctnVd">
		INSERT INTO RFX_SLCTN_VD (
			TEN_ID
			, RFX_SLCTN_VD_UUID
			, RFX_UUID
			, RFX_NXT_PRCS_REQ_UUID
			, VD_CD
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.rfx_slctn_vd_uuid}
			, #{p.rfx_uuid}
			, null
			, #{p.vd_cd}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<select id="findListRfxSlctnVdDetail" resultType="map">
		SELECT RFX_BID.RFX_BID_UUID
		     , RFX_BID_ITEM.RFX_BID_ITEM_UUID
		     , RFX_BID_ITEM.RFX_ITEM_UUID
		     , RFX_ITEM.RFX_REQ_RCPT_UUID
		     , RFX_ITEM.PR_ITEM_UUID
		     , RFX_ITEM.UPCR_ITEM_UUID
		  FROM RFX_SLCTN_VD
		 INNER JOIN RFX
		    ON RFX.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND RFX.RFX_UUID = RFX_SLCTN_VD.RFX_UUID
		 INNER JOIN RFX_BID
		    ON RFX_BID.TEN_ID = RFX.TEN_ID
		   AND RFX_BID.RFX_UUID = RFX.RFX_UUID
		   AND RFX_BID.VD_CD = RFX_SLCTN_VD.VD_CD
		 INNER JOIN RFX_BID_ITEM
		    ON RFX_BID_ITEM.TEN_ID = RFX_BID.TEN_ID
		   AND RFX_BID.RFX_BID_UUID = RFX_BID_ITEM.RFX_BID_UUID
		 INNER JOIN RFX_ITEM
		    ON RFX_ITEM.TEN_ID = RFX_BID_ITEM.TEN_ID
		   AND RFX_ITEM.RFX_ITEM_UUID = RFX_BID_ITEM.RFX_ITEM_UUID
		 WHERE RFX_SLCTN_VD.TEN_ID = #{g.tenant}
		   AND RFX_SLCTN_VD.RFX_SLCTN_VD_UUID = #{p.rfx_slctn_vd_uuid}
		   AND RFX_BID.SLCTN_YN = 'Y'
		   AND RFX_BID_ITEM.SLCTN_YN = 'Y'
	</select>
	<delete id="deleteRfxSlctnVd">
		DELETE
		  FROM RFX_SLCTN_VD
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_SLCTN_VD_UUID = #{p.rfx_slctn_vd_uuid}
	</delete>
	<select id="findListRfxResult" resultType="map">
		SELECT RFX.OORG_CD
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_TIT
		     , RFX_SLCTN_VD.RFX_SLCTN_VD_UUID
		     , RFX_SLCTN_VD.RFX_UUID
		     , RFX_SLCTN_VD.RFX_NXT_PRCS_REQ_UUID
		     , RFX_BID.DOMOVRS_DIV_CCD
		     , RFX_SLCTN_VD.VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_NO
		     , RFX_NXT_PRCS_REQ.CNFD_YN
		     , RFX_NXT_PRCS_REQ.NXT_PRCS_CCD
		     , RFX_NXT_PRCS_REQ.REQ_STS_CCD
		     , RFX.RFX_PURP_CCD
		     , RFX.PURC_TYP_CCD
		     , RFX.PURC_GRP_CD
		     , RFX.DFRM_RO
		     , RFX_BID.PYMTMETH_CCD
		     , RFX_BID.PYMTMETH_EXPLN
		     , RFX_BID.DLVYMETH_CCD
		     , RFX_BID.DLVYMETH_EXPLN
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX_BID.CUR_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		  FROM RFX_SLCTN_VD
		 INNER JOIN VD
		    ON VD.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND VD.VD_CD = RFX_SLCTN_VD.VD_CD
		  LEFT OUTER JOIN RFX_NXT_PRCS_REQ
		    ON RFX_NXT_PRCS_REQ.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND RFX_NXT_PRCS_REQ.RFX_NXT_PRCS_REQ_UUID = RFX_SLCTN_VD.RFX_NXT_PRCS_REQ_UUID
		 INNER JOIN RFX
		    ON RFX.TEN_ID = RFX_SLCTN_VD.TEN_ID
		   AND RFX.RFX_UUID = RFX_SLCTN_VD.RFX_UUID
		 INNER JOIN RFX_BID
		    ON RFX_BID.TEN_ID = RFX.TEN_ID
		   AND RFX_BID.RFX_UUID = RFX.RFX_UUID
		   AND RFX_BID.VD_CD = RFX_SLCTN_VD.VD_CD
		 WHERE RFX_SLCTN_VD.TEN_ID = #{g.tenant}
		   AND RFX_BID.SLCTN_YN = 'Y'
		   <if test="p.rfx_tit != null and p.rfx_tit != ''">
		       <bind name="userNamePattern" value="'%' + p.rfx_tit + '%'"/>
		       AND UPPER(RFX.RFX_TIT) LIKE UPPER(#{userNamePattern})
		   </if>
		   <if test="p.oorg_cds != null and p.oorg_cds.size() != 0">
		       AND RFX.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cds" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_rfx_crn_dt != null">
		       AND RFX.RFX_CRN_DT &gt;= #{p.from_rfx_crn_dt}
		   </if>
		   <if test="p.to_rfx_crn_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_rfx_crn_dt,1)"/>
		       AND RFX.RFX_CRN_DT <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.rfx_purp_ccd != null">
		       AND RFX.RFX_PURP_CCD = #{p.rfx_purp_ccd}
		   </if>
		   <if test="p.rfx_typ_ccd != null">
		       AND RFX.RFX_TYP_CCD = #{p.rfx_typ_ccd}
		   </if>
		   <if test="p.item_slctn_typ_ccd != null">
		       AND RFX.ITEM_SLCTN_TYP_CCD = #{p.item_slctn_typ_ccd}
		   </if>
		   <if test="p.purc_typ_ccd    != null">
		       AND RFX.PURC_TYP_CCD = #{p.purc_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.purc_grp_cds != null and p.purc_grp_cds.size() != 0">
		           AND EXISTS (
		                       SELECT 1
		                         FROM RFX_ITEM
		                        WHERE RFX_ITEM.TEN_ID = RFX.TEN_ID
		                          AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                          AND RFX_ITEM.PURC_GRP_CD IN
		                          <foreach close=")" collection="p.purc_grp_cds" item="purc_grp_cd" open="(" separator=",">
		                              #{purc_grp_cd}
		                          </foreach>
		                      )
		       </when>
		       <otherwise>
		           AND 1=2
		       </otherwise>
		   </choose>
		   <choose>
		       <when test="p.rfx_nos != null and p.rfx_nos.size() != 0">
		           AND UPPER(RFX.RFX_NO) IN
		           <foreach close=")" collection="p.rfx_nos" item="rfx_no" open="(" separator=",">
		               #{rfx_no}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_no != null and p.rfx_no != ''">
		               <bind name="namePattern" value="'%' + p.rfx_no + '%'"/>
		               AND UPPER(RFX.RFX_NO) LIKE UPPER(#{namePattern})
		           </if>
		       </otherwise>
		   </choose>
		   <if test="(p.vd_cd != null and p.vd_cd != '') or (p.vd_nm != null and p.vd_nm != '')">
		       <if test="p.vd_cd != null and p.vd_cd != ''">
		           <bind name="p_vd_cd" value="'%' + p.vd_cd + '%'"/>
		           AND RFX_SLCTN_VD.VD_CD   LIKE UPPER(#{p_vd_cd})
		       </if>
		       <if test="p.vd_nm != null and p.vd_nm != ''">
		           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
		           AND (UPPER(VD.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))      /* 협력사 명 검색조건*/
		       </if>
		   </if>
		   <if test="p.req_sts_ccds != null and p.req_sts_ccds.size() &gt; 0">
		       AND (RFX_NXT_PRCS_REQ.REQ_STS_CCD IN
		       <foreach close=")" collection="p.req_sts_ccds" item="req_sts_ccd" open="(" separator=",">
		           #{req_sts_ccd}
		       </foreach> OR RFX_NXT_PRCS_REQ.REQ_STS_CCD IS NULL OR RFX_NXT_PRCS_REQ.REQ_STS_CCD = '')
		   </if>
		   <if test="(p.item_cds != null and p.item_cds.size() &gt; 0) or (p.item_cd != null and p.item_cd != '')">
		       AND EXISTS (
		                   SELECT 1
		                     FROM RFX_ITEM
		                    WHERE RFX_ITEM.TEN_ID = RFX.TEN_ID
		                      AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                      <choose>
		                          <when test="p.item_cds != null and p.item_cds.size() &gt; 0">
		                              AND UPPER(RFX_ITEM.ITEM_CD) IN
		                              <foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
		                                 #{item_cd}
		                              </foreach>
		                          </when>
		                          <when test="p.item_cd != null and p.item_cd != ''">
		                              <bind name="namePattern" value="'%' + p.item_cd + '%'"/>
		                              AND UPPER(RFX_ITEM.ITEM_CD) LIKE UPPER(#{namePattern})
		                          </when>
		                      </choose>
		       )
		   </if>
		 ORDER BY CONCAT(SUBSTR(RFX.RFX_NO, 3, 999), SUBSTR(RFX.RFX_NO, 1, 2))  DESC
		        , RFX_SLCTN_VD.VD_CD
	</select>
	<select id="findListOrderOperOrg" resultType="map">
		WITH  T(TEN_ID, OORG_CD, LOGIC_ORG_TYP_CCD, LOGIC_ORG_CD, PARNODE_LOGIC_ORG_CD) AS (
			SELECT LOGIC_ORG.TEN_ID
			     , OORG.OORG_CD
			     , LOGIC_ORG.LOGIC_ORG_TYP_CCD
			     , LOGIC_ORG.LOGIC_ORG_CD
			     , LOGIC_ORG.PARNODE_LOGIC_ORG_CD
			  FROM OORG
			 INNER JOIN LOGIC_ORG
			    ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
			   AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
			 WHERE OORG.TEN_ID = #{g.tenant}
			   AND OORG.OORG_CD IN
			   <foreach close=")" collection="p.oorgCds" item="oorg_cd" open="(" separator=",">
				   #{oorg_cd}
			   </foreach>
			 UNION ALL
			SELECT LOGIC_ORG.TEN_ID
			     , T.OORG_CD
			     , LOGIC_ORG.LOGIC_ORG_TYP_CCD
			     , LOGIC_ORG.LOGIC_ORG_CD
			     , LOGIC_ORG.PARNODE_LOGIC_ORG_CD
			  FROM LOGIC_ORG
			 INNER JOIN T
			    ON T.TEN_ID = LOGIC_ORG.TEN_ID
			   AND T.PARNODE_LOGIC_ORG_CD = LOGIC_ORG.LOGIC_ORG_CD
		)
		SELECT T.*
		  FROM T
		 WHERE LOGIC_ORG_TYP_CCD = 'COMPANY'
		 ORDER BY CASE WHEN LOGIC_ORG_CD = #{g.co_cd} THEN 1 ELSE 999 END
	</select>
</mapper>
