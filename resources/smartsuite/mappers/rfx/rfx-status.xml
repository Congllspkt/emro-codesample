<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="rfx-status">
	<select id="findListRfxReqRcptUuidByRfx" resultType="string">
		SELECT RFX_ITEM.RFX_REQ_RCPT_UUID
		  FROM RFX
		 INNER JOIN RFX_ITEM
		    ON RFX_ITEM.TEN_ID = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.RFX_REQ_RCPT_UUID IS NOT NULL </select>
	<select id="selectPrItemIdByRfi" resultType="string">
		/* rfx-status.selectPrItemIdByRfi */
		SELECT RFI_ITEM.PR_ITEM_UUID
		  FROM RFI RFI
		 INNER JOIN RFI_ITEM RFI_ITEM
		    ON RFI_ITEM.TEN_ID   = RFI.TEN_ID
		   AND RFI_ITEM.RFI_UUID = RFI.RFI_UUID
		 WHERE RFI.TEN_ID   = #{g.tenant}
		   AND RFI.RFI_UUID = #{p.rfi_uuid}
		   <if test="p.rfi_item_uuid != null and p.rfi_item_uuid != ''">
		       AND RFI_ITEM.RFI_ITEM_UUID = #{p.rfi_item_uuid}
		   </if>
		   AND RFI_ITEM.PR_ITEM_UUID IS NOT NULL </select>
	<select id="selectUpcrItemIdByRfi" resultType="string">
		/* rfx-status.selectUpcrItemIdByRfi */
		SELECT RFI_ITEM.UPCR_ITEM_UUID
		  FROM RFI RFI
		 INNER JOIN RFI_ITEM RFI_ITEM
		    ON RFI_ITEM.TEN_ID   = RFI.TEN_ID
		   AND RFI_ITEM.RFI_UUID = RFI.RFI_UUID
		 WHERE RFI.TEN_ID   = #{g.tenant}
		   AND RFI.RFI_UUID = #{p.rfi_uuid}
		   <if test="p.rfi_item_uuid != null and p.rfi_item_uuid != ''">
		       AND RFI_ITEM.RFI_ITEM_UUID = #{p.rfi_item_uuid}
		   </if>
		   AND RFI_ITEM.UPCR_ITEM_UUID IS NOT NULL </select>
	<!-- temporarySaveRfi -->
	<update id="temporarySaveRfi">
		/* rfx-status.temporarySaveRfi : RFI 저장 시 상태 수정 */
		UPDATE RFI
		   SET RFI_STS_CCD  = 'CRNG'
		     , RFI_REQ_DTTM = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFI_UUID = #{p.rfi_uuid}
	</update>
	<!-- requestRfi -->
	<update id="requestRfi">
		/* rfx-status.requestRfi : RFI 요청 시 상태 수정 */
		UPDATE RFI
		   SET RFI_STS_CCD  = 'PRGSG'
		     , RFI_REQ_DTTM = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFI_UUID = #{p.rfi_uuid}
	</update>
	<!-- closeRfi -->
	<update id="closeRfi">
		/* rfx-status.closeRfi : RFI 마감 시 상태 수정 */
		UPDATE RFI
		   SET RFI_STS_CCD = 'CLSG'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFI_UUID = #{p.rfi_uuid}
	</update>
	<!-- completeRfi -->
	<update id="completeRfi">
		/* rfx-status.completeRfi : RFI 종료 시 상태 수정 */
		UPDATE RFI
		   SET RFI_STS_CCD    = 'ED'
		     , RFI_CMPLD_DTTM = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFI_UUID = #{p.rfi_uuid}
	</update>
	<select id="selectPrItemIdByRfx" resultType="string">
		/* rfx-status.selectPrItemIdByRfx */
		SELECT RFX_ITEM.PR_ITEM_UUID
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.PR_ITEM_UUID IS NOT NULL  AND CASE WHEN RFX_ITEM.ED_YN IS NULL OR RFX_ITEM.ED_YN = '' THEN 'N'
		            ELSE RFX_ITEM.ED_YN
		        END = 'N'
	</select>
	<select id="selectUpcrItemIdByRfx" resultType="string">
		/* rfx-status.selectUpcrItemIdByRfx */
		SELECT RFX_ITEM.UPCR_ITEM_UUID
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.UPCR_ITEM_UUID IS NOT NULL  AND CASE WHEN RFX_ITEM.ED_YN IS NULL OR RFX_ITEM.ED_YN = '' THEN 'N'
		            ELSE RFX_ITEM.ED_YN
		        END = 'N'
	</select>
	<select id="selectSrItemIdByRfx" resultType="map">
		/* rfx-status.selectSrItemIdByRfx */
		SELECT
			RFX_ITEM.SR_ITEM_UUID
			, RFX_ITEM.RFX_ITEM_UUID
			, RFX_ITEM.RFX_UUID
			, RFX_ITEM.OORG_CD
			, RFX_ITEM.RFX_NO
			, RFX_ITEM.RFX_RND
			, RFX_ITEM.RFX_LNO
			, RFX_ITEM.RFX_REQ_RCPT_UUID
			, RFX_ITEM.CUR_CCD
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.SR_ITEM_UUID IS NOT NULL  AND CASE WHEN RFX_ITEM.ED_YN IS NULL OR RFX_ITEM.ED_YN = '' THEN 'N'
		            ELSE RFX_ITEM.ED_YN
		        END = 'N'
	</select>
	<select id="selectRfxHeaderForSr" resultType="map">
		/* rfx-status.selectRfxHeaderForSr */
		SELECT
			RFX.RFX_UUID
		    , RFX.OORG_CD
			, RFX.RFX_NO
		    , RFX.RFX_RND
			, RFX.RFX_STS_CCD
			, RFX.CUR_CCD
		FROM RFX RFX
		WHERE RFX.TEN_ID = #{g.tenant}
		AND RFX.RFX_UUID = #{p.rfx_uuid}
		AND RFX.STS != 'D'
	</select>
	<!-- RFx 저장 시 상태값 변경 -->
	<update id="saveDraftRfx">
		/* rfx-status.saveDraftRfx */
		UPDATE RFX
		   SET RFX_STS_CCD      = 'CRNG'
		     , RFX_APVL_STS_CCD = 'CRNG'
		     , RFX_CRN_DT       = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- MultiRound 삭제 시 이전차수 상태 복원 -->
	<update id="updatePreRfxByDeleteCurrentRfx">
		/* rfx-status.updatePreRfxByDeleteCurrentRfx */
		UPDATE RFX
		   SET RFX_STS_CCD     = 'CLSG'
		     , RFX_RES_STS_CCD = PRE_RFX_RES_STS_CCD /*유찰 or 업체선정취소*/
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.pre_rfx_uuid}
	</update>
	<!-- submitApprovalRfxProg -->
	<update id="submitApprovalRfxProg">
	    /* rfx-status.submitApprovalRfxProg: RFx 진행품의 결재상신 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD      = 'APVL_PRGSG'
	         , RFX_APVL_STS_CCD = 'APVL_PRGSG'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- approveApprovalRfxProg -->
	<update id="approveApprovalRfxProg">
	    /* rfx-status.approveApprovalRfxProg: RFx 진행품의 결재승인 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD      = 'NTC_PRGSG'
	         , RFX_APVL_STS_CCD = 'APVD'
	         , RFX_CRN_DT       = #{g.now}
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- approveApprovalRfxProg -->
	<update id="rejectApprovalRfxProg">
	    /* rfx-status.rejectApprovalRfxProg: RFx 진행품의 결재반려 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD      = 'CRNG'
	         , RFX_APVL_STS_CCD = 'APVL_RET'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- cancelApprovalRfxProg -->
	<update id="cancelApprovalRfxProg">
		/* rfx-status.cancelApprovalRfxProg: RFx 진행품의 결재취소 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD      = 'CRNG'
		     , RFX_APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- RFx 진행품의 결재승인처리 시 상태 수정 -->
	<update id="bypassApprovalRfxProg">
		/* rfx-status.bypassApprovalRfxProg */
		UPDATE RFX
		   SET RFX_STS_CCD      = 'NTC_PRGSG'
		     , RFX_APVL_STS_CCD = 'APVD'
		     , RFX_CRN_DT       = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- startRfx -->
	<update id="startRfx">
	    /* rfx-status.startRfx: RFx 시작 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD = 'PRGSG'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- closeRfx -->
	<update id="closeRfx">
		/* rfx-status.closeRfx: RFx 마감 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD = 'CLSG'
	         , RFX_RES_STS_CCD = CASE WHEN RFX_TYP_CCD = 'RAUC' THEN 'VD_SLCTN_WTG' /* 역경매인 경우 : 업체선정중(개찰프로세스가 따로 없으므로) */
	                                  ELSE 'OPEN_WTG' /* RFP, RFQ인 경우 : 개찰전 */
	                              END
	         , ERY_CLSG_RSN = #{p.ery_clsg_rsn} /* 조기 마감 사유 */
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- openRfx -->
	<update id="openRfx">
		/* rfx-status.openRfx: RFx 개찰 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD     = 'CLSG'
		     , RFX_RES_STS_CCD = 'VD_SLCTN_WTG'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="reExecuteNpeEval">
		UPDATE RFX
		   SET NPE_STS_CCD = 'EVAL_PRGSG'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- dropRfx -->
	<update id="dropRfxHd">
		/* rfx-status.dropRfxHd: RFx 유찰 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD     = 'CLSG'
		     , RFX_RES_STS_CCD = 'FAILDBID',
		       FAILDBID_RSN    = #{p.faildbid_rsn}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="dropRfxQtaHd">
		/* rfx-status.dropRfxQtaHd: RFx 유찰 시 상태 수정 */
		UPDATE RFX_BID
		   SET SLCTN_YN = 'N'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_NO          = #{p.rfx_no}
		   AND RFX_RND         = CAST(#{p.rfx_rnd} AS INT)
		   AND RFX_BID_EFCT_YN = 'Y'
	</update>
	<update id="dropRfxQtaDt">
		/* rfx-status.dropRfxQtaDt: RFx 유찰 시 상태 수정 */
		UPDATE RFX_BID_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = NULL
		     , SLCTN_AMT = NULL
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_NO   = #{p.rfx_no}
		   AND RFX_RND  = CAST(#{p.rfx_rnd} AS INT)
	</update>
	<!-- cancelRfx -->
	<update id="cancelRfxHd">
		/* rfx-status.cancelRfxHd: RFx 취소 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD = 'ED'
		     , RFX_RES_STS_CCD  = CASE WHEN (
		                                     SELECT COUNT(1)
		                                       FROM RFX_ITEM
		                                      WHERE TEN_ID   = #{g.tenant}
		                                        AND RFX_UUID = #{p.rfx_uuid}
		                                        AND STS     != 'D'
		                                        AND ED_YN    = 'Y'
		                                        AND SLCTN_YN = 'Y'
		                                    ) &gt; 0 THEN 'VD_SLCTN' /*업체 선정으로 RFx종료된 품목 존재 시 업체선정*/
		                               ELSE 'CNCL' /*아니면 RFx취소*/
		                           END
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="cancelRfxQtaHd">
		/* rfx-status.cancelRfxQtaHd: RFx 취소 시 상태 수정
		      품목별 인 경우 일부 선정취소 시 견적헤더 단위로 움직이므로
		   RFx취소를 하더라도 업체견적서의 품목에서는 선정된 건이 존재할 수 없다.
		 */
		UPDATE RFX_BID
		   SET SLCTN_YN = 'N'
		 WHERE TEN_ID   = #{g.tenant}
		   AND SLCTN_YN = 'Y'
		   AND RFX_BID_UUID IN (
		                        SELECT RFX_BID_ITEM.RFX_BID_UUID
		                          FROM RFX_ITEM RFX_ITEM
		                         INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		                            ON RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		                           AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		                         INNER JOIN RFX_BID RFX_BID
		                            ON RFX_BID.TEN_ID          = RFX_BID_ITEM.TEN_ID
		                           AND RFX_BID.RFX_BID_UUID    = RFX_BID_ITEM.RFX_BID_UUID
		                           AND RFX_BID.RFX_BID_EFCT_YN = 'Y'
		                         WHERE RFX_ITEM.TEN_ID   = #{g.tenant}
		                           AND RFX_ITEM.RFX_UUID = #{p.rfx_uuid}
		                           AND RFX_ITEM.ED_YN    = 'N'
		                       )
	</update>
	<update id="cancelRfxQtaDt">
		/* rfx-status.cancelRfxQtaDt: RFx 취소 시 상태 수정
		   RFx종료되지 않은 품목에 대한 견적 품목만 초기화
		 */
		UPDATE RFX_BID_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = NULL
		     , SLCTN_AMT = NULL
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_ITEM_UUID IN (
		                         SELECT RFX_ITEM_UUID
		                           FROM RFX_ITEM
		                          WHERE TEN_ID   = #{g.tenant}
		                            AND RFX_UUID = #{p.rfx_uuid}
		                            AND ED_YN    = 'N'
		                        )
	</update>
	<update id="cancelRfxItems">
		/* rfx-status.cancelRfxItems */
		UPDATE RFX_ITEM
		   SET ED_YN    = 'Y'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
		   AND ED_YN    = 'N'
</update>
	<!-- RFx 멀티라운드 생성 시 이전차수의 상태 수정 -->
	<update id="multiRoundRfxHd">
		/* rfx-status.multiRoundRfxHd */
		UPDATE RFX
		   SET RFX_STS_CCD     = 'ED'
		     , RFX_RES_STS_CCD = 'REQTA'
		     , PRE_RFX_RES_STS_CCD = RFX_RES_STS_CCD
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- RFx 멀티라운드 생성 시 이전차수의 상태 수정
	     업체선정취소 상태에서는 선정품의 작성을 하다가 재견적을 할 수도 있으므로
	     종료되지 않은 품목에 대해서 선정여부를 초기화 해주어야 함 -->
	<update id="multiRoundRfxQtaHd">
		/* rfx-status.multiRoundRfxQtaHd */
		UPDATE RFX_BID
		   SET SLCTN_YN = 'N'
		 WHERE TEN_ID   = #{g.tenant}
		   AND SLCTN_YN = 'Y'
		   AND RFX_BID_UUID IN (
		                        SELECT RFX_BID_ITEM.RFX_BID_UUID
		                          FROM RFX_ITEM RFX_ITEM
		                         INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		                            ON RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		                           AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		                         INNER JOIN RFX_BID RFX_BID
		                            ON RFX_BID.TEN_ID          = RFX_BID_ITEM.TEN_ID
		                           AND RFX_BID.RFX_BID_UUID    = RFX_BID_ITEM.RFX_BID_UUID
		                           AND RFX_BID.RFX_BID_EFCT_YN = 'Y'
		                         WHERE RFX_ITEM.TEN_ID   = #{g.tenant}
		                           AND RFX_ITEM.RFX_UUID = #{p.rfx_uuid}
		                           AND RFX_ITEM.ED_YN    = 'N'
		                       )
	</update>
	<!-- RFx 멀티라운드 생성 시 이전차수의 상태 수정
	     업체선정취소 상태에서는 선정품의 작성을 하다가 재견적을 할 수도 있으므로
	     종료되지 않은 품목에 대해서 선정여부를 초기화 해주어야 함 -->
	<update id="multiRoundRfxQtaDt">
		/* rfx-status.multiRoundRfxQtaDt */
		UPDATE RFX_BID_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = null
		     , SLCTN_AMT = null
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_ITEM_UUID IN (
		                         SELECT RFX_ITEM_UUID
		                           FROM RFX_ITEM
		                          WHERE TEN_ID   = #{g.tenant}
		                            AND RFX_UUID = #{p.rfx_uuid}
		                            AND ED_YN    = 'N'
		                        )
	</update>
	<!-- temporarySaveApprovalRfxResult -->
	<update id="temporarySaveApprovalRfxResult">
	    /* rfx-status.temporarySaveApprovalRfxResult: RFx 선정품의 결재 저장 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_SLCTN_APVL_STS_CCD = 'CRNG'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- submitApprovalRfxResult -->
	<update id="submitApprovalRfxResult">
	    /* rfx-status.submitApprovalRfxResult: RFx 선정품의 상신 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD            = 'SLCTN_APVL_PRGSG'
	         , RFX_RES_STS_CCD        = 'VD_SLCTN_WTG'
	         , PRE_RFX_RES_STS_CCD    = RFX_RES_STS_CCD
	         , RFX_SLCTN_APVL_STS_CCD = 'APVL_PRGSG'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<select id="selectStlPrItemIdByRfx" resultType="map">
		/* rfx-status.selectPrItemIdByRfx */
		SELECT RFX_ITEM.PR_ITEM_UUID
		     , RFX_ITEM.SLCTN_YN
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.PR_ITEM_UUID IS NOT NULL  AND RFX_ITEM.ED_YN = 'N'
	</select>
	<select id="selectStlUpcrItemIdByRfx" resultType="map">
		/* rfx-status.selectStlUpcrItemIdByRfx */
		SELECT RFX_ITEM.UPCR_ITEM_UUID
		     , RFX_ITEM.SLCTN_YN
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.UPCR_ITEM_UUID IS NOT NULL  AND RFX_ITEM.ED_YN = 'N'
	</select>
	<select id="selectStlSrItemIdByRfx" resultType="map">
		/* rfx-status.selectStlSrItemIdByRfx */
		SELECT
		    RFX_ITEM.SR_ITEM_UUID
			, RFX_ITEM.SLCTN_YN
			, RFX_ITEM.RFX_ITEM_UUID
			, RFX_ITEM.RFX_UUID
			, RFX_ITEM.OORG_CD
			, RFX_ITEM.RFX_NO
			, RFX_ITEM.RFX_RND
			, RFX_ITEM.RFX_LNO
			, RFX_ITEM.RFX_REQ_RCPT_UUID
			, RFX_ITEM.SR_ITEM_UUID
			, RFX_ITEM.CUR_CCD
			, BID.SLCTN_UPRC
		FROM RFX RFX
		INNER JOIN RFX_ITEM RFX_ITEM
		ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		AND RFX_ITEM.STS != 'D'
		INNER JOIN RFX_BID_ITEM BID
		ON BID.TEN_ID = RFX.TEN_ID
		AND BID.RFX_UUID = RFX.RFX_UUID
		AND BID.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		AND BID.SLCTN_YN = 'Y'
		AND BID.STS != 'D'
		WHERE RFX.TEN_ID = #{g.tenant}
		AND RFX.RFX_UUID = #{p.rfx_uuid}
		AND RFX_ITEM.SR_ITEM_UUID IS NOT NULL  AND RFX_ITEM.ED_YN = 'N'
	</select>
	<update id="approveApprovalRfxResult">
	    /* rfx-status.approveApprovalRfxResult: RFx 선정품의 승인 시 상태 수정 */
	    UPDATE RFX
	       SET RFX_STS_CCD            = 'ED'
	         , RFX_RES_STS_CCD        = 'VD_SLCTN'
	         , RFX_SLCTN_APVL_STS_CCD = 'APVD'
	     WHERE TEN_ID   = #{g.tenant}
	       AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- rejectApprovalRfxResult -->
	<update id="rejectApprovalRfxResult">
		/* rfx-status.rejectApprovalRfxResult: RFx 선정품의 반려 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD            = 'CLSG'
		     , RFX_RES_STS_CCD        = PRE_RFX_RES_STS_CCD
		     , RFX_SLCTN_APVL_STS_CCD = 'APVL_RET'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- cancelApprovalRfxResult -->
	<update id="cancelApprovalRfxResult">
		/* rfx-status.cancelApprovalRfxResult: RFx 선정품의 취소 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD            = 'CLSG'
		     , RFX_RES_STS_CCD        = PRE_RFX_RES_STS_CCD
		     , RFX_SLCTN_APVL_STS_CCD = 'APVL_CNCL'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- bypassApprovalRfxResult -->
	<update id="bypassApprovalRfxResult">
		/* rfx-status.bypassApprovalRfxResult: RFx 선정품의 결재 Bypass(승인처리) 시 상태 수정 */
		UPDATE RFX
		   SET RFX_STS_CCD            = 'ED'
		     , RFX_RES_STS_CCD        = 'VD_SLCTN'
		     , RFX_SLCTN_APVL_STS_CCD = 'APVD'
		     , SLCTN_RSN  = #{p.slctn_rsn}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<!-- cancelRfxResult  -->
	<update id="cancelRfxQtaResultDt">
		/* rfx-status.cancelRfxQtaResultDt: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_BID_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = null
		     , SLCTN_AMT = null
             , SLCTN_UPRC = null
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_BID_ITEM_UUID IN
		   <foreach close=")" collection="p.rfx_bid_item_uuids" item="rfx_bid_item_uuid" open="(" separator=",">
		       #{rfx_bid_item_uuid}
		   </foreach>
	</update>
	<update id="cancelRfxQtaResultHd">
		/* rfx-status.cancelRfxQtaResultHd: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_BID
		   SET SLCTN_YN       = 'N'
		     , SLCTN_CNCL_RSN = #{p.slctn_cncl_rsn}
             , SLCTN_AMT      = NULL
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_BID_UUID IN
		   <foreach close=")" collection="p.rfx_bid_uuids" item="rfx_bid_uuid" open="(" separator=",">
		       #{rfx_bid_uuid}
		   </foreach>
	</update>
	<update id="cancelRfxResultDt">
		/* rfx-status.cancelRfxResultDt: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = null
		     , ED_YN     = 'N'
		 WHERE TEN_ID= #{g.tenant}
		   AND RFX_ITEM_UUID IN
		   <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
		       #{rfx_item_uuid}
		   </foreach>
	</update>
	<update id="cancelRfxResultHd">
		/* rfx-status.cancelRfxResultHdDoc: RFx 헤더 선정취소 */
		UPDATE RFX
		   SET RFX_STS_CCD            = #{p.rfx_sts_ccd}
		     , RFX_RES_STS_CCD        = 'VD_SLCTN_CNCL'
		     , RFX_SLCTN_APVL_STS_CCD = ''
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<select id="findCountItemEndFlagByRfx" resultType="int">
		/* rfx-status.findCountItemEndFlagByRfx */
		SELECT SUM(CASE WHEN ED_YN = 'Y' THEN 1 ELSE 0 END) AS CNT_ED
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="findCountItemSlctnByRfx" resultType="int">
		/* rfx-status.findCountItemSlctnByRfx */
		SELECT SUM(CASE WHEN SLCTN_YN = 'Y' THEN 1 ELSE 0 END) AS CNT_SLCTN
		  FROM RFX RFX
		 INNER JOIN RFX_ITEM RFX_ITEM
		    ON RFX_ITEM.TEN_ID   = RFX.TEN_ID
		   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="findListVdSlctnByCancelRfxItem" resultType="map">
		SELECT T.RFX_ITEM_UUID
		     , T.RFX_REQ_RCPT_UUID
		     , T.PR_ITEM_UUID
		     , T.UPCR_ITEM_UUID
		  FROM (
				SELECT RFX_ITEM.RFX_ITEM_UUID
				     , RFX_ITEM.RFX_REQ_RCPT_UUID
				     , RFX_ITEM.PR_ITEM_UUID
				     , RFX_ITEM.UPCR_ITEM_UUID
				     , MAX(RFX_BID_ITEM.SLCTN_YN) AS VD_SLCTN_YN
				  FROM RFX RFX
				 INNER JOIN RFX_ITEM
				    ON RFX_ITEM.TEN_ID = RFX.TEN_ID
				   AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
				 INNER JOIN RFX_BID_ITEM
				    ON RFX_BID_ITEM.TEN_ID = RFX_ITEM.TEN_ID
				   AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
				 WHERE RFX.TEN_ID   = #{g.tenant}
				   AND RFX.RFX_UUID = #{p.rfx_uuid}
				   AND RFX_ITEM.SLCTN_YN = 'N'
				 GROUP BY RFX_ITEM.RFX_ITEM_UUID
				        , RFX_ITEM.RFX_REQ_RCPT_UUID
					    , RFX_ITEM.PR_ITEM_UUID
					    , RFX_ITEM.UPCR_ITEM_UUID
				        , RFX_ITEM.SLCTN_YN
		       ) T
		 WHERE T.VD_SLCTN_YN = 'Y'
	</select>
	<update id="updateRfxItemEnd">
		/* rfx-status.updateRfxItemEnd: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_ITEM
		   SET ED_YN    = 'Y'
		     , MODR_ID  = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_ITEM_UUID IN
		   <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
		       #{rfx_item_uuid}
		   </foreach>
	</update>
	<update id="updateRfxReqRcptByCancelRfxItem">
		UPDATE RFX_REQ_RCPT
		   SET PRGS_STS_CCD = 'WTG'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_REQ_RCPT_UUID IN
		   <foreach close=")" collection="p.rfx_req_rcpt_uuids" item="rfx_req_rcpt_uuid" open="(" separator=",">
		       #{rfx_req_rcpt_uuid}
		   </foreach>
	</update>
	<update id="cancelRfxResultAprv">
		/* rfx-status.cancelRfxResultAprv: RFx 선정취소 시 결재 연결 수정 */
		UPDATE TASK_APVL
		   SET USE_YN       = 'N'
		 WHERE TEN_ID       = #{g.tenant}
		   AND TASK_UUID    = #{p.rfx_uuid}
           AND APVL_TYP_CCD = #{p.apvl_typ_ccd}
		   AND USE_YN       = 'Y'
	</update>
	<!-- closeRfxItemResult -->
	<update id="closeRfxQtaResultDt">
		/* prostatus.closeRfxQtaResultDt: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_BID_ITEM
		   SET SLCTN_YN  = 'N'
		     , SLCTN_QTY = null
		     , SLCTN_AMT = null
             , SLCTN_UPRC = null
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_BID_ITEM_UUID IN
		   <foreach close=")" collection="p.rfx_bid_item_uuids" item="rfx_bid_item_uuid" open="(" separator=",">
		       #{rfx_bid_item_uuid}
		   </foreach>
	</update>
	<select id="selectRfxQtaResultHd" resultType="map">
		/* rfx-status.selectRfxQtaResultHd */
		SELECT RFX_BID.TEN_ID
		     , RFX_BID.RFX_BID_UUID
		     , SUM(CASE WHEN RFX_BID_ITEM.SLCTN_YN = 'Y' THEN 1 ELSE 0 END) AS CNT_SLCTN
             , SUM(RFX_BID_ITEM.SLCTN_AMT) AS SLCTN_AMT
		  FROM RFX_BID RFX_BID
		 INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		    ON RFX_BID_ITEM.TEN_ID       = RFX_BID.TEN_ID
		   AND RFX_BID_ITEM.RFX_BID_UUID = RFX_BID.RFX_BID_UUID
		 WHERE RFX_BID.TEN_ID = #{g.tenant}
		   AND RFX_BID.RFX_BID_UUID IN
		   <foreach close=")" collection="p.rfx_bid_uuids" item="rfx_bid_uuid" open="(" separator=",">
		       #{rfx_bid_uuid}
		   </foreach>
		 GROUP BY RFX_BID.TEN_ID, RFX_BID.RFX_BID_UUID
	</select>
	<update id="closeRfxQtaResultHd">
		/* rfx-status.closeRfxQtaResultHd: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_BID
		   SET SLCTN_YN = CASE WHEN #{p.cnt_slctn} &gt; 0 THEN 'Y'
		                       ELSE 'N'
		                   END
		     , SLCTN_CNCL_RSN = CASE WHEN #{p.cnt_slctn} &gt; 0 THEN NULL
		                             ELSE #{p.slctn_cncl_rsn}
		                         END
             , SLCTN_AMT = CASE WHEN #{p.cnt_slctn} &gt; 0 THEN #{p.slctn_amt} ELSE NULL END
		 WHERE TEN_ID       = #{g.tenant}
		   AND RFX_BID_UUID = #{p.rfx_bid_uuid}
	</update>
	<select id="selectRfxResultDt" resultType="map">
		/* rfx-status.selectRfxResultDt */
		SELECT RFX_ITEM.TEN_ID
		     , RFX_ITEM.RFX_ITEM_UUID
		     , SUM(CASE WHEN RFX_BID_ITEM.SLCTN_YN = 'Y' THEN 1 ELSE 0 END)  AS CNT_SLCTN
		     , SUM(RFX_BID_ITEM.SLCTN_QTY)                                   AS SLCTN_QTY
		  FROM RFX_ITEM RFX_ITEM
		 INNER JOIN RFX_BID_ITEM RFX_BID_ITEM
		    ON RFX_BID_ITEM.TEN_ID        = RFX_ITEM.TEN_ID
		   AND RFX_BID_ITEM.RFX_ITEM_UUID = RFX_ITEM.RFX_ITEM_UUID
		 WHERE RFX_ITEM.TEN_ID = #{g.tenant}
		   AND RFX_ITEM.RFX_ITEM_UUID IN
		   <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
		       #{rfx_item_uuid}
		   </foreach>
		 GROUP BY RFX_ITEM.TEN_ID, RFX_ITEM.RFX_ITEM_UUID
	</select>
	<update id="closeRfxResultDt">
		/* rfx-status.closeRfxResultDt: RFx 선정취소 시 상태 수정 */
		UPDATE RFX_ITEM
		   SET SLCTN_YN  = CASE WHEN #{p.cnt_slctn} &gt; 0 THEN 'Y' ELSE 'N' END
		     , SLCTN_QTY = #{p.slctn_qty}
		 WHERE TEN_ID        = #{g.tenant}
		   AND RFX_ITEM_UUID = #{p.rfx_item_uuid}
	</update>
	<select id="selectRfxResultPrDt" resultType="string">
		SELECT T.PR_ITEM_UUID
		  FROM (
		        SELECT TEN_ID
		             , PR_ITEM_UUID
		             , SUM(CASE WHEN SLCTN_YN = 'Y' THEN 1 ELSE 0 END) AS CNT_SLCTN
		          FROM RFX_ITEM
		         WHERE TEN_ID = #{g.tenant}
		           AND PR_ITEM_UUID IN
		           <foreach close=")" collection="p.pr_item_uuids" item="pr_item_uuid" open="(" separator=",">
		               #{pr_item_uuid}
		           </foreach>
		         GROUP BY TEN_ID, PR_ITEM_UUID
		       ) T
		 WHERE T.CNT_SLCTN = 0
	</select>
	<select id="selectRfxResultUpcrDt" resultType="string">
		SELECT T.UPCR_ITEM_UUID
		  FROM (
		        SELECT TEN_ID
		             , UPCR_ITEM_UUID
		             , SUM(CASE WHEN SLCTN_YN = 'Y' THEN 1 ELSE 0 END) AS CNT_SLCTN
		          FROM RFX_ITEM
		         WHERE TEN_ID = #{g.tenant}
		           AND UPCR_ITEM_UUID IN
		           <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		               #{upcr_item_uuid}
		           </foreach>
		         GROUP BY TEN_ID, UPCR_ITEM_UUID
		       ) T
		 WHERE T.CNT_SLCTN = 0
	</select>
	<update id="saveNego">
		/* rfx-status.saveNego : 협상 생성 시 rfx 진행상태 변경 */
		UPDATE RFX
		   SET RFX_STS_CCD = 'NEGO_PRGSG'
		      ,MODR_ID     = #{g.username}
		      ,MOD_DTTM    = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
		   AND STS     != 'D'
	</update>
	<update id="cancelNego">
		/* rfx-status.cancelNego : 협상 취소 시 rfx 진행상태 변경 */
		UPDATE RFX
		   SET RFX_STS_CCD = 'CLSG'
		      ,MODR_ID     = #{g.username}
		      ,MOD_DTTM    = #{g.now}
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
		   AND STS     != 'D'
	</update>
	<update id="negoSuccess">
		/* rfx-status.negoSuccess: 협상타결 */
		UPDATE NEGO
		   SET NEGO_STS_CCD     = 'NEGO_CMPLD'
		      ,NEGO_RES_STS_CCD = 'STLMT'
		      ,STS              = 'U'
		      ,MODR_ID          = #{g.username}
		      ,MOD_DTTM         = #{g.now}
		 WHERE TEN_ID    = #{g.tenant}
		   AND NEGO_UUID = #{p.nego_uuid}
		   AND STS      !='D'
	</update>
	<update id="negoFailure">
		/* rfx-status.negoFailure: 협상결렬 */
		UPDATE NEGO
		   SET NEGO_STS_CCD     = 'NEGO_CMPLD'
		      ,NEGO_RES_STS_CCD = 'BD'
		      ,STS              = 'U'
		      ,MODR_ID          = #{g.username}
		      ,MOD_DTTM         = #{g.now}
		 WHERE TEN_ID    = #{g.tenant}
		   AND NEGO_UUID = #{p.nego_uuid}
		   AND STS      !='D'
	</update>
	<update id="updateRfxProgStsByNegoSts">
		/* nego.updateRfxProgStsByNegoSts : 선정품의시 결재상태 값 업데이트 */
		UPDATE RFX
		   SET RFX_STS_CCD = (CASE WHEN (
		                                 SELECT COUNT(0)
		                                   FROM NEGO
		                                  WHERE TEN_ID = #{g.tenant}
		                                    AND RFX_UUID = #{p.rfx_uuid}
		                                    AND SLCTN_YN = 'Y'
		                                    AND STS != 'D'
		                                ) &gt; 0 THEN 'NEGO_PRGSG'
		                           ELSE RFX_STS_CCD
		                       END)
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
	</update>
	<update id="updateCloseNego">
		/* nego.updateCloseNego: 협상 종료 시 상태 업데이트 */
		UPDATE NEGO
		   SET NEGO_STS_CCD = 'NEGO_CLSG'
		     , STS          = 'U'
		     , MODR_ID      = #{g.username}
		     , MOD_DTTM     = #{g.now}
		 WHERE TEN_ID    = #{g.tenant}
		   AND NEGO_UUID = #{p.nego_uuid}
		   AND STS      !='D'
	</update>
	<update id="closeRfxResultPriceRptAprv">
		/* prostatus.closeRfxResultPriceRptAprv: RFx 선정취소 시 결재 연결 수정 */
		UPDATE TASK_APVL
		   SET USE_YN = 'N'
		 WHERE TEN_ID = #{g.tenant}
		   <choose>
		       <when test="p.task_uuids != null and p.task_uuids.size() &gt; 0">
		           AND TASK_UUID IN
		           <foreach close=")" collection="p.task_uuids" item="task_uuid" open="(" separator=",">
		               #{task_uuid}
		           </foreach>
		       </when>
		       <otherwise>
		           AND TASK_UUID = #{p.task_uuid}
		       </otherwise>
		   </choose>
		   AND APVL_TYP_CCD = 'UPRC'
		   AND USE_YN       = 'Y'
	</update>
	<update id="startRfxEval">
		/* rfx-status.startRfxEval : RFX 평가 시작 시 진행상태 update */
		UPDATE RFX
		   SET NPE_STS_CCD = 'EVAL_PRGSG'
		 WHERE TEN_ID      = #{g.tenant}
		   AND RFX_UUID    = #{p.rfx_uuid}
	</update>
	<update id="completeRfxEval">
		/* rfx-status.completeRfxEval : RFX 평가 완료 시 진행상태 update */
		UPDATE RFX
		   SET NPE_STS_CCD = 'EVAL_ED'
		 WHERE TEN_ID      = #{g.tenant}
		   AND RFX_UUID    = #{p.rfx_uuid}
	</update>
	<update id="closeRfxItems">
		/* rfx-status.closeRfxItems */
		UPDATE RFX_ITEM
		   SET ED_YN    = 'Y'
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
		   AND ED_YN    = 'N'
	</update>
	<update id="saveDraftBidNoti">
		/* rfx-status.saveDraftBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'CRNG'
		     , APVL_STS_CCD       = 'CRNG'
		     , MODR_ID            = #{g.username}
		     , MOD_DTTM           = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="submitApprovalBidNoti">
		/* rfx-status.submitApprovalBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'APVL_PRGSG'
		     , APVL_STS_CCD       = 'APVL_PRGSG'
		     , MODR_ID            = #{g.username}
		     , MOD_DTTM           = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="rejectApprovalBidNoti">
		/* rfx-status.rejectApprovalBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'APVL_RET'
		     , APVL_STS_CCD       = 'APVL_RET'
		     , MODR_ID            = #{g.username}
		     , MOD_DTTM           = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="cancelApprovalBidNoti">
		/* rfx-status.cancelApprovalBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'CRNG'
		     , APVL_STS_CCD       = 'CRNG'
		     , MODR_ID            = #{g.username}
		     , MOD_DTTM           = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="approvalBidNotiProg">
		/* rfx-status.approvalBidNoti */
		UPDATE RFX_PRENTC
		   SET APVL_STS_CCD = 'APVD'
		     , MODR_ID      = #{g.username}
		     , MOD_DTTM     = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="closeBidNoti">
		/* rfx-status.closeBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'CLSG'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="waitBidNoti">
		/* rfx-status.waitBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'PRENTC_WTG'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="processBidNoti">
		/* rfx-status.processBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'PRENTC_PRGSG'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="startBidNotiProg">
		/* rfx-status.startBidNotiProg */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'PRENTC_PRGSG'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="closeBidNotiProg">
		/* rfx-status.closeBidNotiProg */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD = 'CLSG'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="cancelBidNoti">
		/* rfx-status.cancelBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_CRN_TYP_CCD = 'PRENTC_CNCL'
		     , RFX_PRENTC_STS_CCD     = 'PRENTC_ED'
		     , RFX_PRENTC_RES_STS_CCD = 'PRENTC_CNCL'
		 WHERE TEN_ID          = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="saveDraftBidNotiTimeChange">
		/* rfx-status.saveDraftBidNotiTmeChange */
		UPDATE RFX_PRENTC_DTTM_HISTREC
		   SET APVL_STS_CCD = 'CRNG'
		     , MODR_ID      = #{g.tenant}
		     , MOD_DTTM     = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_PRENTC_DTTM_CHG_UUID = #{p.rfx_prentc_dttm_chg_uuid}
	</update>
	<update id="passBidNotiTimeChange">
		/* rfx-status.passBidNotiTimeChange */
		UPDATE RFX_PRENTC_DTTM_HISTREC
		   SET APVL_STS_CCD = 'APVD'
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_PRENTC_DTTM_CHG_UUID = #{p.rfx_prentc_dttm_chg_uuid}
	</update>
	<update id="correctPrevBidNoti">
		/* rfx-status.correctPrevBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD     = 'PRENTC_CORR'
		     , RFX_PRENTC_RES_STS_CCD = 'PRENTC_CNCL'
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.pre_rfx_prentc_uuid}
	</update>
	<update id="progressReBidNoti">
		/* rfx-status.progressReBidNoti */
		UPDATE RFX_PRENTC
		   SET RFX_PRENTC_STS_CCD     = 'RENTC'
		     , RFX_PRENTC_RES_STS_CCD = 'PRENTC_CNCL'
		     , RFX_PRENTC_EVAL_RES_CCD    = 'DQ'
		     , PTCP_QUALEVAL_CMPLD_YN = 'Y'
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_PRENTC_UUID = #{p.rfx_prentc_uuid}
	</update>
	<update id="saveSiteBriefingProgSts">
		/* rfx-status.saveSiteBriefingProgSts */
		UPDATE SITEBRFG
		   SET SITEBRFG_STS_CCD = 'CRNG'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SITEBRFG_UUID = #{p.sitebrfg_uuid}
	</update>
	<update id="notifySiteBriefingProgSts">
		/* rfx-status.notifySiteBriefingProgSts */
		UPDATE SITEBRFG
		   SET SITEBRFG_STS_CCD = 'NOFN'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SITEBRFG_UUID = #{p.sitebrfg_uuid}
	</update>
	<update id="cancelSiteBriefingProgSts">
		/* rfx-status.cancelSiteBriefingProgSts */
		UPDATE SITEBRFG
		   SET SITEBRFG_STS_CCD = 'NOFN_CNCL'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SITEBRFG_UUID = #{p.sitebrfg_uuid}
	</update>
	<update id="closeSiteBriefingProgSts">
		/* rfx-status.closeSiteBriefingProgSts */
		UPDATE SITEBRFG
		   SET SITEBRFG_STS_CCD = 'SITEBRFG_ED'
		     , STS = 'U'
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SITEBRFG_UUID = #{p.sitebrfg_uuid}
	</update>
	<select id="findListReferenceIds" resultType="map">
		/* rfx-status.findListReferenceIds */
		SELECT PR_ITEM_UUID
		     , RFX_ITEM_UUID
		, UPCR_ITEM_UUID
		  FROM RFX_ITEM
		 WHERE TEN_ID   = #{g.tenant}
		   AND RFX_UUID = #{p.rfx_uuid}
		   AND STS     != 'D'
	</select>
	<select id="findListReferenceDocFromRFXByPR" resultType="map">
		/* rfx-status.findListReferenceDocFromRFXByPR */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'RFX'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID     = #{g.tenant}
		                          AND PR_ITEM_UUID IN
		                          <foreach close=")" collection="p.pr_item_uuids" item="pr_item_uuid" open="(" separator=",">
		                              #{pr_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RFQ', 'RFP')
	</select>
	<select id="findListReferenceDocFromRFXByUPCR" resultType="map">
		/* rfx-status.findListReferenceDocFromRFXByUPCR */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'RFX'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID     = #{g.tenant}
		                          AND UPCR_ITEM_UUID IN
		                          <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		                              #{upcr_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RFQ', 'RFP')
	</select>
	<select id="findListReferenceDocFromRFX" resultType="map">
		/* rfx-status.findListReferenceDocFromRFX */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'RFX'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_NO = #{p.rfx_no}
		   AND STS      != 'D'
	</select>
	<select id="findListReferenceDocFromRFXByRfxItemUuids" resultType="map">
		/* rfx-status.findListReferenceDocFromRFXByRfxItemUuids */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'RFX'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID  = HD.TEN_ID
		           AND CCD  = 'P013'
		           AND DTLCD  = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID = #{g.tenant}
		                          AND RFX_ITEM_UUID IN
		                          <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
		                              #{rfx_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RFQ', 'RFP')
	</select>
	<select id="findListReferenceDocFromAUCTIONByPR" resultType="map">
		/* rfx-status.findListReferenceDocFromAUCTIONByPR */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'AUCTION'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID     = #{g.tenant}
		                          AND PR_ITEM_UUID IN
		                          <foreach close=")" collection="p.pr_item_uuids" item="pr_item_uuid" open="(" separator=",">
		                              #{pr_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RAUC')
	</select>
	<select id="findListReferenceDocFromAUCTIONByUPCR" resultType="map">
		/* rfx-status.findListReferenceDocFromAUCTIONByUPCR */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'AUCTION'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID     = #{g.tenant}
		                          AND UPCR_ITEM_UUID IN
		                          <foreach close=")" collection="p.upcr_item_uuids" item="upcr_item_uuid" open="(" separator=",">
		                              #{upcr_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RAUC')
	</select>
	<select id="findListReferenceDocFromAUCTION" resultType="map">
		/* rfx-status.findListReferenceDocFromAUCTION */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'AUCTION'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID   = HD.TEN_ID
		           AND CCD      = 'P013'
		           AND DTLCD    = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_NO = #{p.rfx_no}
		   AND STS      != 'D'
	</select>
	<select id="findListReferenceDocFromAUCTIONByRfxItemUuids" resultType="map">
		/* rfx-status.findListReferenceDocFromAUCTIONByRfxItemUuids */
		SELECT #{p.sortkey}   AS SORTKEY
		     , 'AUCTION'          AS APP_TYPE
		     , HD.RFX_UUID    AS APP_ID
		     , HD.RFX_NO      AS DOC_NO
		     , HD.RFX_RND     AS DOC_REV
		     , HD.RFX_STS_CCD AS PROG_STS
		     , (
		        SELECT DTLCD_NM
		          FROM DTLCD_MULTLANG
		         WHERE TEN_ID  = HD.TEN_ID
		           AND CCD  = 'P013'
		           AND DTLCD  = HD.RFX_STS_CCD
		           AND LANG_CCD = #{g.locale}
		       ) AS STS_NM
		     , HD.RFX_TIT AS DOC_TITLE
		     , ''         AS MOD_TYP
		     , ''         AS COMP_YN
		  FROM RFX HD
		 WHERE HD.TEN_ID = #{g.tenant}
		   AND HD.RFX_UUID IN (
		                       SELECT RFX_UUID
		                         FROM RFX_ITEM
		                        WHERE TEN_ID = #{g.tenant}
		                          AND RFX_ITEM_UUID IN
		                          <foreach close=")" collection="p.rfx_item_uuids" item="rfx_item_uuid" open="(" separator=",">
		                              #{rfx_item_uuid}
		                          </foreach>
		                          AND STS != 'D'
		                      )
		   AND HD.RFX_TYP_CCD IN ('RAUC')
	</select>
    <select id="isNegoRfx" resultType="Boolean">
    /* rfx-status.isNegoRfx: 협상데이터  확인*/
    SELECT CASE WHEN COUNT(1) &gt; 0 THEN 1
                ELSE 0
            END
      FROM NEGO
     WHERE TEN_ID = #{g.tenant}
       AND RFX_UUID = #{p.rfx_uuid}
       AND STS != 'D'
    </select>
    <update id="initNegoStlYN">
    /* rfx-status.initNegoStlYN : 협상 선정여부 초기화 */
     UPDATE NEGO
        SET SLCTN_YN = NULL
      WHERE TEN_ID =#{g.tenant}
        AND RFX_UUID = #{p.rfx_uuid}
        AND STS != 'D'
        AND RENEGO_YN = 'N'
    </update>
</mapper>
