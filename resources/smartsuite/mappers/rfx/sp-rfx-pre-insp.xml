<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sp-rfx-pre-insp">
	<select id="findListRfxPreInsp" resultType="map">
		/* sp-rfx-pre-insp.findListRfxPreInsp */
		SELECT RFX_PRESN.RFX_PRESN_UUID
		     , RFX.RFX_UUID
		     , RFX.RFX_PRESN_USE_YN
		     , RFX.OORG_CD
		     , CASE WHEN RFX.RFX_PRESN_CLSG_DTTM <![CDATA[<]]> #{g.now} THEN 'CLSG'
		            ELSE 'CLSG_WTG'
		        END AS CLOSE_STS
		     , CASE WHEN RFX_PRESN.RFX_PRESN_CMPLD_YN IS NOT NULL  THEN RFX_PRESN_AFP.PRESN_RES_CCD
		            ELSE CASE WHEN RFX_PRESN_AFP.SUBM_STS_CCD = 'SUBM' THEN 'SN_WTG'
		                      ELSE ''
		                  END
		        END AS PRESN_RES_CCD
		     , CASE WHEN RFX_PRESN_AFP.SUBM_STS_CCD IS NULL OR RFX_PRESN_AFP.SUBM_STS_CCD = '' THEN 'SUBM_WTG'
		            ELSE RFX_PRESN_AFP.SUBM_STS_CCD
		        END AS SUBM_STS_CCD
		     , RFX_PRESN_AFP.DQ_RSN
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.RFX_TIT
		     , RFX.COMP_TYP_CCD
		     , RFX.RFX_PRESN_ST_DTTM
		     , RFX.RFX_PRESN_CLSG_DTTM
		     , RFX_PRESN_AFP.RFX_PRESN_AFP_UUID
		  FROM RFX_PRESN RFX_PRESN
		 INNER JOIN RFX RFX
		    ON RFX_PRESN.TEN_ID   = RFX.TEN_ID
		   AND RFX_PRESN.RFX_UUID = RFX.RFX_UUID
		   AND RFX.STS         != 'D'
		   AND RFX.RFX_TYP_CCD != 'RAUC'
		  LEFT OUTER JOIN RFX_VD RFX_VD
		    ON RFX_VD.TEN_ID   = #{g.tenant}
		   AND RFX_VD.RFX_UUID = RFX.RFX_UUID
		   AND RFX_VD.VD_CD    = #{g.vd_cd}
		   AND RFX_VD.MULTRND_SUBJ_XCEPT_YN = 'N'
		  LEFT OUTER JOIN RFX_PRESN_AFP RFX_PRESN_AFP
		    ON RFX_PRESN_AFP.TEN_ID = RFX_PRESN.TEN_ID
		   AND RFX_PRESN_AFP.RFX_PRESN_UUID = RFX_PRESN.RFX_PRESN_UUID
		   AND RFX_PRESN_AFP.STS != 'D'
		   AND RFX_PRESN_AFP.VD_CD = #{g.vd_cd}
		 WHERE RFX_PRESN.TEN_ID = #{g.tenant}
		   <choose>
		       <when test="p.comp_typ_ccd != null and p.comp_typ_ccd != ''">
		           AND RFX.COMP_TYP_CCD = #{p.comp_typ_ccd}
		       </when>
		       <otherwise>
		           AND (
		                (RFX.COMP_TYP_CCD != 'OBID' /*공개가 아닌경우(지명,수의) */
		                 AND RFX_VD.VD_CD = #{g.vd_cd}) OR
		                (RFX.COMP_TYP_CCD = 'OBID' /*공개*/)
		               )
		       </otherwise>
		   </choose>
		   <if test="p.oorg_cd != null and p.oorg_cd.size() != 0">
		       AND RFX.OORG_CD IN
		       <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
		           #{oorg_cd}
		       </foreach>
		   </if>
		   <if test="p.from_rfx_pre_insp_dt != null">
		       AND RFX.RFX_PRESN_ST_DTTM &gt;= #{p.from_rfx_pre_insp_dt}
		   </if>
		   <if test="p.to_rfx_pre_insp_dt != null">
		       <bind name="toDatePattern" value="g.getPlusDays(p.to_rfx_pre_insp_dt,1)"/>
		       AND RFX.RFX_PRESN_ST_DTTM <![CDATA[<]]> #{toDatePattern}
		   </if>
		   <if test="p.rfx_typ_ccd != null">
		       AND RFX.RFX_TYP_CCD = #{p.rfx_typ_ccd}
		   </if>
		   <choose>
		       <when test="p.rfx_nos != null and p.rfx_nos.size() != 0">
		           AND UPPER(RFX.RFX_NO) IN
		           <foreach close=")" collection="p.rfx_nos" item="rfx_no" open="(" separator=",">
		               #{rfx_no}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_no != null and p.rfx_no != ''">
		               <bind name="namePattern" value="'%' + p.rfx_no + '%'"/>
		               AND UPPER(RFX.RFX_NO) LIKE UPPER(#{namePattern})
		           </if>
		       </otherwise>
		   </choose>
		   <if test="p.rfx_tit != null and p.rfx_tit != ''">
		       <bind name="userNamePattern" value="'%' + p.rfx_tit + '%'"/>
		       AND UPPER(RFX.RFX_TIT) LIKE UPPER(#{userNamePattern})
		   </if>
		   <choose>
		       <when test="p.rfx_sts_ccds != null and p.rfx_sts_ccds.size() != 0">
		           AND RFX.RFX_STS_CCD IN
		           <foreach close=")" collection="p.rfx_sts_ccds" item="rfx_sts_ccd" open="(" separator=",">
		               #{rfx_sts_ccd}
		           </foreach>
		       </when>
		       <otherwise>
		           <if test="p.rfx_sts_ccd != null">
		               AND RFX.RFX_STS_CCD = #{p.rfx_sts_ccd}
		           </if>
		       </otherwise>
		   </choose>
		   <if test="p.rfx_presn_cmpld_yn != null and p.rfx_presn_cmpld_yn != ''">
		       <choose>
		           <when test="p.rfx_presn_cmpld_yn == &quot;Y&quot;">
		               AND RFX_PRESN.RFX_PRESN_CMPLD_YN = #{p.rfx_presn_cmpld_yn}
		           </when>
		           <otherwise>
		               AND (RFX_PRESN.RFX_PRESN_CMPLD_YN IS NULL OR RFX_PRESN.RFX_PRESN_CMPLD_YN = '' OR RFX_PRESN.RFX_PRESN_CMPLD_YN = 'N')
		           </otherwise>
		       </choose>
		   </if>
		   <if test="p.close_sts != null and p.close_sts != ''">
		       <choose>
		           <when test="p.close_sts == &quot;CLSG&quot;">
		               AND RFX.RFX_PRESN_CLSG_DTTM <![CDATA[<]]> #{g.now}
		           </when>
		           <otherwise>
		               AND RFX.RFX_PRESN_CLSG_DTTM &gt;= #{g.now}
		           </otherwise>
		       </choose>
		   </if>
		   <if test="p.subm_sts_ccd != null and p.subm_sts_ccd != ''">
		       <choose>
		           <when test="p.subm_sts_ccd == &quot;SUBM_WTG&quot;">
		               AND RFX_PRESN_AFP.SUBM_STS_CCD IS NULL OR RFX_PRESN_AFP.SUBM_STS_CCD = ''
		           </when>
		           <otherwise>
		               AND RFX_PRESN_AFP.SUBM_STS_CCD  = #{p.subm_sts_ccd}
		           </otherwise>
		       </choose>
		   </if>
		 ORDER BY RFX.RFX_NO DESC, RFX.RFX_RND DESC
	</select>
	<select id="findRfxPreInspApp" resultType="map">
		/* sp-rfx-pre-insp.findRfxPreInspApp */
		SELECT RFX_PRESN.RFX_PRESN_UUID
		     , RFX_PRESN_AFP.RFX_PRESN_AFP_UUID
		     , RFX.RFX_UUID
		     , RFX.OORG_CD
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.RFX_TIT
		     , RFX.COMP_TYP_CCD
		     , RFX.RFX_PRESN_ST_DTTM
		     , RFX.RFX_PRESN_CLSG_DTTM
		     , RFX.VD_ATHG_UUID
		     , RFX_PRESN_AFP.VD_CD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS VD_NM
		     , RFX_PRESN_AFP.PRESN_RES_CCD
		     , CASE WHEN RFX.RFX_PRESN_CLSG_DTTM <![CDATA[<]]> #{g.now} THEN 'CLSG'
		            ELSE 'CLSG_WTG'
		        END AS CLOSE_STS
		     , CASE WHEN RFX_PRESN.RFX_PRESN_CMPLD_YN IS NOT NULL  THEN RFX_PRESN_AFP.PRESN_RES_CCD
		            ELSE CASE WHEN RFX_PRESN_AFP.SUBM_STS_CCD = 'SUBM' THEN 'SN_WTG'
		                      ELSE ''
		                  END
		        END AS PRESN_RES_CCD
		     , CASE WHEN RFX_PRESN_AFP.SUBM_STS_CCD IS NULL OR RFX_PRESN_AFP.SUBM_STS_CCD = '' THEN 'SUBM_WTG'
		            ELSE RFX_PRESN_AFP.SUBM_STS_CCD
		        END AS SUBM_STS_CCD
		     , RFX_PRESN_AFP.DQ_RSN
		     , RFX_PRESN_AFP.SUBM_DTTM
		     , RFX_PRESN_AFP.SUBM_STS_CCD
		     , RFX_PRESN_AFP.PRESN_DTTM
		     , RFX_PRESN_AFP.VD_PIC_NM
		     , RFX_PRESN_AFP.VD_PIC_MOB
		     , RFX_PRESN_AFP.VD_PIC_TEL
		     , RFX_PRESN_AFP.VD_PIC_EML
		     , RFX_PRESN_AFP.AFP_OPN
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS VD_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD.CEO_NM_EN
		            ELSE VD.CEO_NM
		        END AS VD_CEO_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN CONCAT(CONCAT(VD.DTL_ADDR_EN_1, ' '), VD.DTL_ADDR_EN_2)
		            ELSE CONCAT(CONCAT(VD.DTL_ADDR_1, ' '), VD.DTL_ADDR_2)
		        END AS VD_ADDR
		  FROM RFX_PRESN RFX_PRESN
		 INNER JOIN RFX RFX
		    ON RFX.TEN_ID       = RFX_PRESN.TEN_ID
		   AND RFX.RFX_UUID     = RFX_PRESN.RFX_UUID
		   AND RFX.STS         != 'D'
		   AND RFX.RFX_TYP_CCD != 'RAUC'
		  LEFT OUTER JOIN RFX_PRESN_AFP RFX_PRESN_AFP
		    ON RFX_PRESN_AFP.TEN_ID = RFX_PRESN.TEN_ID
		   AND RFX_PRESN_AFP.RFX_PRESN_UUID = RFX_PRESN.RFX_PRESN_UUID
		   AND RFX_PRESN_AFP.VD_CD = #{g.vd_cd}
		   AND RFX_PRESN_AFP.STS != 'D'
		  LEFT OUTER JOIN VD VD
		    ON VD.TEN_ID = RFX_PRESN_AFP.TEN_ID
		   AND VD.VD_CD = #{g.vd_cd}
		 WHERE RFX_PRESN.TEN_ID = #{g.tenant}
		   AND RFX_PRESN.RFX_PRESN_UUID = #{p.rfx_presn_uuid}
	</select>
	<select id="findRfxData" resultType="map">
		/* rfx-pre-isnp.findRfxData */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_TIT
		     , RFX.RFX_RND
		     , RFX.PRE_RFX_UUID
		     , RFX.OORG_CD
		     , RFX.RFX_PURP_CCD
		     , RFX.RAUC_TYP_CCD
		     , RFX.RFX_TYP_CCD
		     , RFX.RFX_CRN_DT
		     , RFX.RFX_ST_DTTM
		     , RFX.RFX_CLSG_DTTM
		     , RFX.RFX_CHG_CLSG_DTTM
		     , RFX.DOMOVRS_DIV_CCD
		     , RFX.DFRM_RO
		     , RFX.PYMTMETH_CCD
		     , RFX.PYMTMETH_EXPLN
		     , RFX.DLVYMETH_CCD
		     , RFX.DLVYMETH_EXPLN
             , RFX.PYMTMETH_DOM_CCD
		     , RFX.PYMTMETH_DOM_EXPLN
		     , RFX.DLVYMETH_DOM_CCD
		     , RFX.DLVYMETH_DOM_EXPLN
             , RFX.PYMTMETH_OVS_CCD
		     , RFX.PYMTMETH_OVS_EXPLN
		     , RFX.DLVYMETH_OVS_CCD
		     , RFX.DLVYMETH_OVS_EXPLN
             , RFX.PYMTMETH_DLVYMETH_CHG_POSS_YN
		     , RFX.COMP_TYP_CCD
		     , RFX.ITEM_SLCTN_TYP_CCD
		     , RFX.SLCTN_TYP_CCD
		     , RFX.AUTO_EXT_USE_YN
		     , RFX.AUTO_EXT_TM
		     , RFX.CNTR_ST_DT
		     , RFX.CNTR_EXP_DT
		     , RFX.PURC_TYP_CCD
		     , RFX.BFG_YN
		     , RFX.PRESN_YN
		     , RFX.PRTL_BID_PERM_YN
		     , RFX.COSTSTR_USE_YN
		     , RFX.NPE_RO_VD_PUB_YN
		     , RFX.CBE_TYP_CCD
		     , RFX.NPE_RO
		     , RFX.CBE_RO
		     , RFX.BFG_DTTM
		     , RFX.BFG_PLC
		     , RFX.BFG_PIC_ID
		     , RFX.PRESN_ST_DT
		     , RFX.PRESN_CLSG_DT
		     , RFX.PRESN_PIC_ID
		     , RFX.RFX_BUYER_RMK
		     , RFX.RFX_VD_RMK
		     , RFX.BUYER_ATHG_UUID
		     , RFX.VD_ATHG_UUID
		     , RFX.RFX_STS_CCD
		     , RFX.RFX_RES_STS_CCD
		     , RFX.RFX_APVL_USE_YN
		     , RFX.RFX_APVL_STS_CCD
		     , RFX.RFX_SLCTN_APVL_USE_YN
		     , RFX.RFX_SLCTN_APVL_STS_CCD
		     , RFX.AUTO_EXT_POSS_WD
		     , RFX.OPEN_DTTM
		     , RFX.IMMED_ST_USE_YN
		     , RFX.IMMED_OPEN_USE_YN
		     , RFX.CSTM_USE_YN                              /* 컨소시엄 여부 */
		     , RFX.CSTM_TYP_CCD                             /* 컨소시엄 유형 */
		     , (
		        SELECT COUNT(RFX_ITEM_UUID)
		          FROM RFX_ITEM RFX_ITEM
		         WHERE RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		       ) AS RFX_ITEM_CNT
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.BFG_PIC_ID
		           AND USR.STS != 'D'
		       ) AS BFG_PIC_NM        /* 현장설명회 담당자 */
		     , (
		        SELECT USR_NM
		          FROM USR USR
		         WHERE USR.TEN_ID = RFX.TEN_ID
		           AND USR.USR_ID = RFX.PRESN_PIC_ID
		           AND USR.STS != 'D'
		       )  AS PRESN_PIC_NM        /* 제안발표 담당자 */
		     , CASE WHEN RFX_VD.VD_CD IS NULL OR RFX_VD.VD_CD = '' THEN 'N'
		            ELSE 'Y'
		        END AS EXIST_RFX_VD
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM RFX_ITEM RFX_ITEM
		                   WHERE RFX_ITEM.TEN_ID   = RFX.TEN_ID
		                     AND RFX_ITEM.RFX_UUID = RFX.RFX_UUID
		                     AND RFX_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'
		                     AND RFX_ITEM.STS     != 'D'
		                 ) &gt; 0
		                 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_NO_CD_ITEM
		     , RFX.CUR_CCD
		  FROM RFX RFX
		  LEFT JOIN RFX_VD RFX_VD
		    ON RFX_VD.TEN_ID = #{g.tenant}
		   AND RFX_VD.RFX_UUID = RFX.RFX_UUID
		   AND RFX_VD.MULTRND_SUBJ_XCEPT_YN = 'N'
		   AND RFX_VD.VD_CD  = #{g.vd_cd}
		   AND RFX_VD.STS   != 'D'
		 WHERE RFX.TEN_ID = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
		   AND RFX.STS   != 'D'
	</select>
	<select id="findListRfxItem" resultType="map">
		/* sp-rfx-qta.findListRfxItem : rfx 아이템들*/
		SELECT RFX_ITEM.RFX_ITEM_UUID
		     , RFX_ITEM.RFX_UUID
		     , RFX_ITEM.OORG_CD
		     , RFX_ITEM.RFX_NO
		     , RFX_ITEM.RFX_RND
		     , RFX_ITEM.RFX_LNO
		     , RFX_ITEM.PR_NO
		     , RFX_ITEM.PR_LNO
		     , RFX_ITEM.PR_ITEM_UUID
		     , RFX_ITEM.UPCR_NO
		     , RFX_ITEM.UPCR_LNO
		     , RFX_ITEM.UPCR_ITEM_UUID
		     , RFX_ITEM.PURC_TYP_CCD
		     , RFX_ITEM.PLT_CD
		     , RFX_ITEM.ITEM_OORG_CD
		     , RFX_ITEM.ITEM_CD_CRN_TYP_CCD
		     , CASE WHEN RFX_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS' THEN NULL -- 구매품목유형: 미등록(무코드품목)
		            ELSE RFX_ITEM.ITEM_CD
		        END AS DISP_ITEM_CD
		     , RFX_ITEM.ITEM_CD
		     , RFX_ITEM.ITEM_NM
		     , RFX_ITEM.ITEM_NM_EN
		     , RFX_ITEM.ITEM_SPEC
		     , RFX_ITEM.ITEM_SPEC_DTL
		     , RFX_ITEM.UOM_CCD
		     , RFX_ITEM.RFX_REQ_UPRC
		     , RFX_ITEM.RFX_TRG_UPRC
		     , RFX_ITEM.RFX_LMT_UPRC
		     , RFX_ITEM.WH_CCD
		     , RFX_ITEM.REQ_DLVY_DT
		     , RFX_ITEM.CONST_ST_DT
		     , RFX_ITEM.CONST_EXP_DT
		     , RFX_ITEM.DLVY_PLC
		     , RFX_ITEM.ATHG_UUID
		     , RFX_ITEM.SLCTN_YN
		     , RFX_ITEM.SLCTN_QTY
		     , RFX_ITEM.SG_CD
		     , RFX_ITEM.CUR_CCD
		     , RFX_ITEM.PURC_GRP_CD
		     , RFX_ITEM.ED_YN
		     , RFX_ITEM.STS
		     , RFX_ITEM.REGR_ID
		     , RFX_ITEM.REG_DTTM
		     , RFX_ITEM.MODR_ID
		     , RFX_ITEM.MOD_DTTM
		     , RFX_ITEM.RFX_QTY
		  FROM RFX_ITEM RFX_ITEM
		 INNER JOIN RFX RFX
		    ON RFX.TEN_ID   = RFX_ITEM.TEN_ID
		   AND RFX.RFX_UUID = RFX_ITEM.RFX_UUID
		 WHERE RFX_ITEM.TEN_ID   = #{g.tenant}
		   AND RFX_ITEM.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_ITEM.STS     != 'D'
		 ORDER BY CAST(RFX_ITEM.RFX_LNO AS INT) ASC
	</select>
	<select id="findInfoVendor" resultType="map">
		/* sp-rfx-pre-insp.findInfoVendor */
		SELECT VD_CD
		     , CASE WHEN 'en_US' = #{g.locale} THEN VD_NM_EN
		            ELSE VD_NM
		        END AS VD_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN CEO_NM_EN
		            ELSE CEO_NM
		        END AS VD_CEO_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN CONCAT(CONCAT(DTL_ADDR_EN_1, ' '), DTL_ADDR_EN_2)
		            ELSE CONCAT(CONCAT(DTL_ADDR_1, ' '), DTL_ADDR_2)
		        END AS VD_ADDR
		     --, TEL
		     , VD_EML AS EML
		  FROM VD
		 WHERE TEN_ID = #{g.tenant}
		   AND VD_CD  = #{g.vd_cd}
		   AND STS   != 'D'
	</select>
	<select id="isExistRfxPreInspAppAttach" resultType="boolean">
		/* sp-rfx-pre-insp.checkRfxPreInspAppAttach : 첨부파일 체크 */
		SELECT CASE WHEN COUNT(RFX_PRESN_AFP_SUBMDDOC_UUID) &gt; 0 THEN 1
		            ELSE 0
		        END
		  FROM RFX_PRESN_AFP_SUBMDDOC
		 WHERE TEN_ID             = #{g.tenant}
		   AND RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
		   AND STS               != 'D'
	</select>
	<select id="findListRfxPreInspAppAttach" resultType="map">
		/* sp-rfx-pre-insp.findListRfxPreInspAppAttach */
		SELECT DTLCD.TEN_ID
		     , #{g.vd_cd}            AS VD_CD
		     , DTLCD.DTLCD           AS SUBMDDOC_TYP_CCD
		     , DTLCD_MULTLANG.DTLCD_NM        AS SUBMDDOC_TYP_NM
		     , CCD_CSTR_CND_VAL.CSTR_CND_VAL  AS SUBMDDOC_MAND_YN /* 제출 필수 여부*/
		     , DTLCD.DTLCD_SORT
		  FROM DTLCD DTLCD
		 INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		    ON DTLCD.TEN_ID = DTLCD_MULTLANG.TEN_ID
		   AND DTLCD.CCD    = DTLCD_MULTLANG.CCD
		   AND DTLCD.DTLCD  = DTLCD_MULTLANG.DTLCD
		  LEFT OUTER JOIN CCD_CSTR_CND_VAL CCD_CSTR_CND_VAL
		    ON CCD_CSTR_CND_VAL.TEN_ID = DTLCD.TEN_ID
		   AND CCD_CSTR_CND_VAL.CCD    = DTLCD.CCD
		   AND CCD_CSTR_CND_VAL.DTLCD  = DTLCD.DTLCD
		   AND CCD_CSTR_CND_VAL.CSTR_CND_CD = 'MAND_YN'
		 WHERE DTLCD.TEN_ID = #{g.tenant}
		   AND DTLCD.CCD    = 'P205' /* 첨부구분 코드*/
		   AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		 ORDER BY DTLCD.DTLCD_SORT
	</select>
	<select id="findListRfxPreInspAppedAttach" resultType="map">
		/* sp-rfx-pre-insp.findListRfxPreInspAppedAttach */
		SELECT RFX_PRESN_AFP_SUBMDDOC.TEN_ID
		     , RFX_PRESN_AFP_SUBMDDOC.RFX_PRESN_AFP_SUBMDDOC_UUID
		     , RFX_PRESN_AFP_SUBMDDOC.RFX_PRESN_AFP_UUID
		     , RFX_PRESN_AFP.VD_CD
		     , RFX_PRESN_AFP_SUBMDDOC.RFX_PRESN_UUID
		     , RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_TYP_CCD
		     , RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_TYP_NM
		     , RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_MAND_YN
		     , RFX_PRESN_AFP_SUBMDDOC.ATHG_UUID
		     , RFX_PRESN_AFP_SUBMDDOC.ATHF_NM
		     , RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_SORT
		     , (
		        SELECT COUNT(ATHF.ATHF_UUID)
		          FROM ATHF ATHF
		         WHERE ATHF.TEN_ID        = RFX_PRESN_AFP_SUBMDDOC.TEN_ID
		           AND ATHF.ATHG_UUID = RFX_PRESN_AFP_SUBMDDOC.ATHG_UUID
		           AND ATHF.STS          != 'D'
		       ) AS ATHF_CNT
		  FROM RFX_PRESN_AFP_SUBMDDOC RFX_PRESN_AFP_SUBMDDOC
		 INNER JOIN RFX_PRESN_AFP RFX_PRESN_AFP
		    ON RFX_PRESN_AFP.TEN_ID = RFX_PRESN_AFP_SUBMDDOC.TEN_ID
		   AND RFX_PRESN_AFP.RFX_PRESN_AFP_UUID = RFX_PRESN_AFP_SUBMDDOC.RFX_PRESN_AFP_UUID
		  LEFT OUTER JOIN DTLCD DTLCD
		    ON DTLCD.TEN_ID = RFX_PRESN_AFP_SUBMDDOC.TEN_ID
		   AND DTLCD.DTLCD  = RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_TYP_CCD
		   AND DTLCD.CCD = 'P205'
		 WHERE RFX_PRESN_AFP_SUBMDDOC.TEN_ID             = #{g.tenant}
		   AND RFX_PRESN_AFP_SUBMDDOC.RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
		   AND RFX_PRESN_AFP_SUBMDDOC.STS               != 'D'
		 ORDER BY DTLCD.DTLCD_SORT, RFX_PRESN_AFP_SUBMDDOC.SUBMDDOC_SORT
	</select>
	<select id="validRfxPreInspNoClose" resultType="boolean">
		/* sp-rfx-pre-insp.validRfxPreInspNoClose */
		SELECT CASE WHEN COUNT(RFX_PRESN.RFX_PRESN_UUID) &gt; 0 THEN 1
		            ELSE 0
		        END
		  FROM RFX_PRESN RFX_PRESN
		 INNER JOIN RFX RFX
		    ON RFX_PRESN.TEN_ID   = RFX.TEN_ID
		   AND RFX_PRESN.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX_PRESN.TEN_ID         = #{g.tenant}
		   AND RFX_PRESN.RFX_PRESN_UUID = #{p.rfx_presn_uuid}
		   AND RFX.RFX_PRESN_ST_DTTM <![CDATA[<=]]> #{g.now}
		   AND RFX.RFX_PRESN_CLSG_DTTM &gt;= #{g.now}
	</select>
	<select id="checkRfxHdStsP" resultType="map">
		/* sp-rfx-pre-insp.checkRfxHdStsP */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_RND
		     , RFX.RFX_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P013'    /* RFx 진행상태 */
		           AND DTLCD.DTLCD  = RFX.RFX_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS RFX_STS_CCD_NM
		     , RFX.RFX_RES_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P014'    /* RFx 종료상태 */
		           AND DTLCD.DTLCD  = RFX.RFX_RES_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS RFX_RES_STS_CCD_NM
		     , RFX.NPE_STS_CCD
		     , (
		        SELECT DTLCD_MULTLANG.DTLCD_NM
		          FROM DTLCD DTLCD
		         INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		            ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		           AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		           AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		           AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		           AND DTLCD_MULTLANG.STS     != 'D'
		         WHERE DTLCD.TEN_ID = RFX.TEN_ID
		           AND DTLCD.CCD    = 'P084'    /* 비가격평가 상태 */
		           AND DTLCD.DTLCD  = RFX.NPE_STS_CCD
		           AND DTLCD.USE_YN = 'Y'
		           AND DTLCD.STS   != 'D'
		       ) AS NPE_STS_CCD_NM
		     , CASE WHEN RFX.RFX_STS_CCD = 'PRGSG' AND (
		                                                 RFX.RFX_TYP_CCD = 'RFQ'
		                                              OR (
		                                                     RFX.RFX_TYP_CCD = 'RFP'
		                                                 )
		                                             )
		                 THEN 'Y'
		            ELSE 'N'
		        END AS VALID_YN
		  FROM RFX RFX
		 WHERE RFX.TEN_ID = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<insert id="insertRfxPreInspApp">
		/* sp-rfx-pre-insp.insertRfxPreInspApp */
		INSERT INTO RFX_PRESN_AFP (
			TEN_ID
			, RFX_PRESN_AFP_UUID
			, VD_CD
			, RFX_PRESN_UUID
			, VD_NM
			<if test="p.subm_sts_ccd == &quot;SUBM&quot;">
			    , SUBM_DTTM
			</if>
			, SUBM_STS_CCD
			, VD_PIC_NM
			, VD_PIC_MOB
			, VD_PIC_TEL
			, VD_PIC_EML
			, AFP_OPN
			, STS
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.rfx_presn_afp_uuid}
			, #{g.vd_cd}
			, #{p.rfx_presn_uuid}
			, #{p.vd_nm}
			<if test="p.subm_sts_ccd == &quot;SUBM&quot;">
			    , #{g.now}
			</if>
			, #{p.subm_sts_ccd}
			, #{p.vd_pic_nm}
			, #{p.vd_pic_mob}
			, #{p.vd_pic_tel}
			, #{p.vd_pic_eml}
			, #{p.afp_opn}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateRfxPreInspApp">
		/* sp-rfx-pre-insp.updateRfxPreInspApp */
		UPDATE RFX_PRESN_AFP
		   SET SUBM_STS_CCD = #{p.subm_sts_ccd}
		     , VD_PIC_NM    = #{p.vd_pic_nm}
		     , VD_PIC_MOB   = #{p.vd_pic_mob}
		     , VD_PIC_TEL   = #{p.vd_pic_tel}
		     , VD_PIC_EML   = #{p.vd_pic_eml}
		     , AFP_OPN      = #{p.afp_opn}
		     <if test="p.subm_sts_ccd == &quot;SUBM&quot;">
		         , SUBM_DTTM = #{g.now}
		     </if>
		     , MOD_DTTM = #{g.now}
		     , MODR_ID  = #{g.username}
		     , STS = 'U'
		 WHERE TEN_ID             = #{g.tenant}
		   AND RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
	</update>
	<insert id="insertRfxPreInspAppAttach">
		/* sp-rfx-pre-insp.insertRfxPreInspAppAttach */
		INSERT INTO RFX_PRESN_AFP_SUBMDDOC (
		    TEN_ID
		    , RFX_PRESN_AFP_SUBMDDOC_UUID
		    , RFX_PRESN_AFP_UUID
		    , RFX_PRESN_UUID
		    , SUBMDDOC_TYP_CCD
		    , SUBMDDOC_TYP_NM
		    , SUBMDDOC_MAND_YN
		    , ATHG_UUID
		    , ATHF_NM
		    , SUBMDDOC_SORT
		    , STS
		    , REGR_ID
		    , REG_DTTM
		) VALUES (
		    #{g.tenant}
		    , #{p.rfx_presn_afp_submddoc_uuid}
		    , #{p.rfx_presn_afp_uuid}
		    , #{p.rfx_presn_uuid}
		    , #{p.submddoc_typ_ccd}
		    , #{p.submddoc_typ_nm}
		    , #{p.submddoc_mand_yn}
		    , #{p.athg_uuid}
		    , #{p.athf_nm}
		    , #{p.submddoc_sort}
		    , 'C'
		    , #{g.username}
		    , #{g.now}
		)
	</insert>
	<update id="updateRfxPreInspAppAttach">
		/* sp-rfx-pre-insp.updateRfxPreInspAppAttach */
		UPDATE RFX_PRESN_AFP_SUBMDDOC
		   SET RFX_PRESN_UUID   = #{p.rfx_presn_uuid}
		     , SUBMDDOC_TYP_CCD = #{p.submddoc_typ_ccd}
		     , SUBMDDOC_TYP_NM  = #{p.submddoc_typ_nm}
		     , SUBMDDOC_MAND_YN = #{p.submddoc_mand_yn}
		     , ATHG_UUID        = #{p.athg_uuid}
		     , ATHF_NM          = #{p.athf_nm}
		     , SUBMDDOC_SORT    = #{p.submddoc_sort}
		     , STS              = 'U'
		     , MODR_ID          = #{g.username}
		     , MOD_DTTM         = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND RFX_PRESN_AFP_SUBMDDOC_UUID = #{p.rfx_presn_afp_submddoc_uuid}
		   AND RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
	</update>
	<select id="checkRfxPreInspCompYByRfx" resultType="map">
		/* sp-rfx-pre-insp.checkRfxPreInspCompYByRfx */
		SELECT RFX_PRESN.RFX_PRESN_UUID
		  FROM RFX RFX
		 INNER JOIN RFX_PRESN RFX_PRESN
		    ON RFX_PRESN.TEN_ID   = RFX.TEN_ID
		   AND RFX_PRESN.RFX_UUID = RFX.RFX_UUID
		 WHERE RFX_PRESN.TEN_ID   = #{g.tenant}
		   AND RFX_PRESN.RFX_UUID = #{p.rfx_uuid}
		   AND RFX_PRESN.RFX_PRESN_CMPLD_YN = 'Y'
	</select>
	<select id="validRfxPreInspCloseStsByRfxId" resultType="map">
		/* sp-rfx-pre-insp.validRfxPreInspCloseStsByRfxId */
		SELECT RFX_PRESN.RFX_PRESN_UUID
		  FROM RFX RFX
		 INNER JOIN RFX_PRESN RFX_PRESN
		    ON RFX_PRESN.TEN_ID   = RFX.TEN_ID
		   AND RFX_PRESN.RFX_UUID = RFX.RFX_UUID
		 INNER JOIN RFX_PRESN_AFP RFX_PRESN_AFP
		    ON RFX_PRESN_AFP.TEN_ID         = RFX_PRESN.TEN_ID
		   AND RFX_PRESN_AFP.RFX_PRESN_UUID = RFX_PRESN.RFX_PRESN_UUID
		   AND RFX_PRESN_AFP.VD_CD          = #{g.vd_cd}
		 WHERE RFX_PRESN.TEN_ID     = #{g.tenant}
		   AND RFX.RFX_UUID         = #{p.rfx_uuid}
		   AND RFX.RFX_PRESN_USE_YN ='Y'
		   AND RFX.RFX_PRESN_CLSG_DTTM <![CDATA[<]]> #{g.now}
	</select>
	<select id="checkValidRfxPreInspApp" resultType="map">
		/* sp-rfx-pre-insp.checkValidRfxPreInspApp */
		SELECT RFX_PRESN_AFP.RFX_PRESN_AFP_UUID
		     , RFX_PRESN_AFP.PRESN_RES_CCD
		  FROM RFX RFX
		 INNER JOIN RFX_PRESN RFX_PRESN
		    ON RFX_PRESN.TEN_ID   = RFX.TEN_ID
		   AND RFX_PRESN.RFX_UUID = RFX.RFX_UUID
		 INNER JOIN RFX_PRESN_AFP RFX_PRESN_AFP
		    ON RFX_PRESN_AFP.TEN_ID         = RFX_PRESN.TEN_ID
		   AND RFX_PRESN_AFP.VD_CD          = #{g.vd_cd}
		   AND RFX_PRESN_AFP.RFX_PRESN_UUID = RFX_PRESN.RFX_PRESN_UUID
		   AND RFX_PRESN_AFP.STS           != 'D'
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<select id="findRfxPurcChrMailInfo" resultType="map">
		/* sp-rfx-pre-insp.findRfxPurcChrMailInfo */
		SELECT RFX.RFX_UUID
		     , RFX.RFX_NO
		     , RFX.RFX_TIT
		     , RFX.RFX_RND
		     , RFX.RFX_PRESN_USE_YN
		     , RFX.RFX_PRESN_ST_DTTM
		     , RFX.RFX_PRESN_CLSG_DTTM
		     , RFX.IMMED_RFX_PRESN_ST_USE_YN
		     , RFX.PURC_PIC_ID
		     , CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
		            ELSE USR.USR_NM
		        END AS PURC_CHR_NM
		     , CASE WHEN 'en_US' = #{g.locale} THEN DEPT.DEPT_NM_EN
		            ELSE DEPT.DEPT_NM
		        END AS PURC_CHR_DEPT_NM               /* 부서명 */
		     , USR.TEL  AS PURC_CHR_PHONE_NO
		     , USR.EML  AS PURC_CHR_EMAIL
		     , CONCAT(CONCAT(TO_CHAR(RFX.RFX_PRESN_ST_DTTM,'YYYY/MM/DD')  , '~')
		              , TO_CHAR(RFX.RFX_PRESN_CLSG_DTTM,'YYYY/MM/DD')  ) AS RFX_PRE_INSP_PERIOD
		     , DTLCD_MULTLANG.DTLCD_NM     AS RFX_TYP_CCD_NM
		  FROM RFX RFX
		  LEFT OUTER JOIN USR USR        /* USR : 구매요청자 */
		    ON RFX.TEN_ID      = USR.TEN_ID
		   AND RFX.PURC_PIC_ID = USR.USR_ID
		  LEFT OUTER JOIN DEPT DEPT
		    ON DEPT.TEN_ID  = USR.TEN_ID
		   AND DEPT.DEPT_CD = USR.DEPT_CD
		 INNER JOIN DTLCD DTLCD
		    ON DTLCD.TEN_ID = RFX.TEN_ID
		   AND DTLCD.CCD    = 'P033'
		   AND DTLCD.DTLCD  = RFX.RFX_TYP_CCD
		   AND DTLCD.USE_YN = 'Y'
		   AND DTLCD.STS   != 'D'
		 INNER JOIN DTLCD_MULTLANG DTLCD_MULTLANG
		    ON DTLCD_MULTLANG.TEN_ID   = DTLCD.TEN_ID
		   AND DTLCD_MULTLANG.CCD      = DTLCD.CCD
		   AND DTLCD_MULTLANG.DTLCD    = DTLCD.DTLCD
		   AND DTLCD_MULTLANG.LANG_CCD = #{g.locale}
		   AND DTLCD_MULTLANG.STS     != 'D'
		 WHERE RFX.TEN_ID   = #{g.tenant}
		   AND RFX.RFX_UUID = #{p.rfx_uuid}
	</select>
	<update id="deleteRfxPreInspAttach">
		/* sp-rfx-pre-insp.deleteRfxPreInspAttach */
		UPDATE RFX_PRESN_AFP_SUBMDDOC
		   SET STS = 'D'
		 WHERE TEN_ID             = #{g.tenant}
		   AND RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
	</update>
	<update id="deleteRfxPreInspApp">
		/* sp-rfx-pre-insp.deleteRfxPreInspApp */
		UPDATE RFX_PRESN_AFP
		   SET STS = 'D'
		 WHERE TEN_ID             = #{g.tenant}
		   AND RFX_PRESN_AFP_UUID = #{p.rfx_presn_afp_uuid}
	</update>
</mapper>
