<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="seal">
	<resultMap id="resultMap-findListSeal" type="map">
		<result column="SEAL_IMG_ENC_DAT" javaType="string" property="seal_img_enc_dat" typeHandler="stringClob"/>
	</resultMap>
	<select id="findListSeal" resultMap="resultMap-findListSeal">
	/* seal.findListSeal : 인장 목록 조회 */
	SELECT STP.TEN_ID
	     , STP.DGTLSGN_SEAL_UUID
	     , STP.OORG_CD
	     , STP.CO_SEAL_YN
	     , STP.SEAL_NM
	     , STP.SEAL_COWD_COMM_USE_YN
	     , STP.DEPT_CD
	     , STP.USR_ID
	     , STP.SEAL_IMG_ENC_DAT
	     , STP.SEAL_IMG_TYP
	  FROM DGTLSGN_SEAL STP /*서버인증서*/
	 WHERE STP.TEN_ID = #{g.tenant}
	<if test=" p.oorg_cd != null and p.oorg_cd != &quot;&quot; ">
	   AND STP.OORG_CD = #{p.oorg_cd}
	</if>
	<if test="p.co_seal_yn != null and p.co_seal_yn != &quot;&quot; ">
	   AND STP.CO_SEAL_YN = #{p.co_seal_yn}
	</if>
	<if test="p.usr_id != null and p.usr_id != &quot;&quot; ">
	   AND STP.USR_ID = #{p.usr_id}
	</if>
	 ORDER BY STP.REG_DTTM DESC
	</select>
	<resultMap id="resultMap-findSeal" type="map">
		<result column="SEAL_IMG_ENC_DAT" javaType="string" property="seal_img_enc_dat" typeHandler="stringClob"/>
	</resultMap>
	<select id="findSeal" resultMap="resultMap-findSeal">
	/* seal.findSeal : 인장 단건 조회 */
	SELECT STP.TEN_ID
	     , STP.DGTLSGN_SEAL_UUID
	     , STP.OORG_CD
	     , STP.CO_SEAL_YN
	     , STP.SEAL_NM
	     , STP.SEAL_COWD_COMM_USE_YN
	     , STP.DEPT_CD
	     , (SELECT DEPT_NM FROM DEPT WHERE TEN_ID = STP.TEN_ID AND DEPT_CD = STP.DEPT_CD) AS DEPT_NM
	     , STP.USR_ID
	     , STP.SEAL_IMG_ENC_DAT
	     , STP.SEAL_IMG_TYP
	     , STP.SEAL_IMG_WID_SIZE
	     , STP.SEAL_IMG_HGT_SIZE
	     , STP.SGN_LFT_COORD
	     , STP.SGN_UP_COORD
	  FROM DGTLSGN_SEAL STP /*서버인증서*/
	 WHERE STP.TEN_ID = #{g.tenant}
	   AND STP.DGTLSGN_SEAL_UUID = #{p.dgtlsgn_seal_uuid}
	</select>
	<insert id="insertSeal">
	/* seal.insertSeal : 인장 신규 생성 */
	INSERT INTO DGTLSGN_SEAL (
		   TEN_ID
		 , DGTLSGN_SEAL_UUID
		 , OORG_CD
		 , CO_SEAL_YN
		 , SEAL_NM
		 , SEAL_COWD_COMM_USE_YN
		 , DEPT_CD
		 , USR_ID
		 , SEAL_IMG_ENC_DAT
		 , SEAL_IMG_TYP
		 , SEAL_IMG_WID_SIZE
		 , SEAL_IMG_HGT_SIZE
		 , SGN_LFT_COORD
		 , SGN_UP_COORD
		 , RMK
		 , STS
		 , REGR_ID
		 , REG_DTTM
		 , MODR_ID
		 , MOD_DTTM
	) VALUES (
		   #{g.tenant}
		 , #{g.uuid}
		 , #{p.oorg_cd}
		 , #{p.co_seal_yn}
		 , #{p.seal_nm}
		 , #{p.seal_cowd_comm_use_yn}
		 , #{p.dept_cd}
		 , #{g.username}
		 , #{p.seal_img_enc_dat}
		 , #{p.seal_img_typ}
		 , #{p.seal_img_wid_size}
		 , #{p.seal_img_hgt_size}
		 , #{p.sgn_lft_coord}
		 , #{p.sgn_up_coord}
		 , #{p.rmk}
		 , 'C'
		 , #{g.username}
		 , #{g.now}
		 , #{g.username}
		 , #{g.now}
	)
	</insert>
	<update id="updateSeal">
	/* seal.updateSeal : 인장 수정 */
	UPDATE DGTLSGN_SEAL
	   SET OORG_CD = #{p.oorg_cd}
	     , CO_SEAL_YN = #{p.co_seal_yn}
	     , SEAL_NM = #{p.seal_nm}
	     , SEAL_COWD_COMM_USE_YN = #{p.seal_cowd_comm_use_yn}
	     , DEPT_CD = #{p.dept_cd}
	     , USR_ID = #{p.usr_id}
	     , SEAL_IMG_ENC_DAT = #{p.seal_img_enc_dat}
	     , SEAL_IMG_TYP = #{p.seal_img_typ}
	     , SEAL_IMG_WID_SIZE = #{p.seal_img_wid_size}
	     , SEAL_IMG_HGT_SIZE = #{p.seal_img_hgt_size}
	     , SGN_LFT_COORD = #{p.sgn_lft_coord}
	     , SGN_UP_COORD = #{p.sgn_up_coord}
	     , RMK = #{p.rmk}
	     , MODR_ID = #{g.username}
	     , MOD_DTTM = #{g.now}
	 WHERE TEN_ID = #{g.tenant}
	   AND DGTLSGN_SEAL_UUID = #{p.dgtlsgn_seal_uuid}
	</update>
	<delete id="deleteSeal">
	/* seal.deleteSeal : 인장 삭제 */
	DELETE FROM DGTLSGN_SEAL
	 WHERE TEN_ID = #{g.tenant}
	   AND DGTLSGN_SEAL_UUID = #{p.dgtlsgn_seal_uuid}
	</delete>
	<resultMap id="resultMap-findCompanyStampList" type="map">
		<result column="IMG_SRC" javaType="string" property="img_src" typeHandler="stringClob"/>
	</resultMap>
	<select id="findCompanySealList" resultMap="resultMap-findCompanyStampList">
	/* seal.findCompanySealList : 회사 인장 목록 조회 */
	SELECT ESTP_B.DGTLSGN_SEAL_UUID AS STP_NO
		 , ESTP_B.SEAL_NM           AS STP_NM
		 , ESTP_B.SEAL_IMG_ENC_DAT  AS IMG_SRC
		 , ESTP_B.SEAL_IMG_TYP      AS IMG_TYPE
		 , ESTP_B.SEAL_IMG_WID_SIZE AS ORG_SIGN_WIDTH
		 , ESTP_B.SEAL_IMG_HGT_SIZE AS ORG_SIGN_HEIGHT
		 , ESTP_B.SGN_LFT_COORD     AS ORG_SIGN_LEFT
		 , ESTP_B.SGN_UP_COORD      AS ORG_SIGN_TOP
		 , ESTP_B.REG_DTTM          AS REG_DT
	  FROM (SELECT DGTLSGN_SEAL_UUID
			  FROM DGTLSGN_SEAL stp
			 WHERE stp.CO_SEAL_YN = 'Y' AND stp.SEAL_COWD_COMM_USE_YN = 'Y'
			UNION 
			SELECT DGTLSGN_SEAL_UUID
			  FROM DGTLSGN_SEAL stp
			 WHERE stp.CO_SEAL_YN = 'Y' AND stp.SEAL_COWD_COMM_USE_YN = 'N' AND stp.DEPT_CD = #{g.dept_cd}
			UNION 
			SELECT DGTLSGN_SEAL_UUID
			  FROM DGTLSGN_SEAL stp
			 WHERE stp.CO_SEAL_YN = 'N' AND stp.USR_ID = #{g.username}
	       ) ESTP_A
	     , DGTLSGN_SEAL ESTP_B
	 WHERE ESTP_B.TEN_ID = #{g.tenant}
	   AND ESTP_A.DGTLSGN_SEAL_UUID = ESTP_B.DGTLSGN_SEAL_UUID
	 ORDER BY ESTP_B.REG_DTTM DESC
	</select>
	<resultMap id="resultMap-findUserStampList" type="map">
		<result column="IMG_SRC" javaType="string" property="img_src" typeHandler="stringClob"/>
	</resultMap>
	<select id="findUserSealList" resultMap="resultMap-findUserStampList">
	/* seal.findUserSealList : 유저 인장 목록 조회 */
	SELECT DGTLSGN_SEAL_UUID AS STP_NO
		 , SEAL_NM           AS STP_NM
		 , SEAL_IMG_ENC_DAT  AS IMG_SRC
		 , SEAL_IMG_TYP      AS IMG_TYPE
		 , SEAL_IMG_WID_SIZE AS ORG_SIGN_WIDTH
		 , SEAL_IMG_HGT_SIZE AS ORG_SIGN_HEIGHT
		 , SGN_LFT_COORD     AS ORG_SIGN_LEFT
		 , SGN_UP_COORD      AS ORG_SIGN_TOP
	  FROM DGTLSGN_SEAL
	 WHERE TEN_ID = #{g.tenant}
	   AND (CO_SEAL_YN = 'N' AND USR_ID = #{g.username})
	 ORDER BY REG_DTTM DESC
	</select>
</mapper>
