<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="item-reg">
    <select id="findListItemReg" resultType="map">
		/* item-reg.findListItemReg : 품목 등록 관리 조회 */
		SELECT
			REQ.TEN_ID         /*시스템 아이디 */
			, REQ.ITEM_REG_REQ_NO     /*등록 요청 번호 */
			, REQ.REQ_TYP_CCD        /*요청 유형 */
			, REQ.ITEM_CD        /*품목 코드 */
			, CASE WHEN 'en_US' = #{g.locale} THEN REQ.ITEM_NM_EN
					ELSE REQ.ITEM_NM
				END AS DISP_ITEM_NM
			, REQ.ITEM_NM        /*품목 명 */
			, REQ.ITEM_NM_EN
			, REQ.ITEM_SIMWORD
			, REQ.ITEM_SPEC           /*규격 */
			, REQ.UOM_CCD
			, (
				SELECT
					DL.DTLCD_NM
				FROM DTLCD DTL
				INNER JOIN DTLCD_MULTLANG DL
				ON DTL.TEN_ID   = DL.TEN_ID
				AND DTL.CCD   = DL.CCD
				AND DTL.DTLCD   = DL.DTLCD
				AND DL.LANG_CCD = #{g.locale}
				WHERE DTL.TEN_ID   = #{g.tenant}
				AND DTL.CCD   = 'C007'
				AND DTL.USE_YN   = 'Y'
				AND DTL.DTLCD   = REQ.UOM_CCD
			) AS UOM_NM
			, REQ.ITEMCAT_LVL_1_CD       /*분류1 코드 : 품목분류1 */
			, REQ.ITEMCAT_LVL_2_CD       /*분류2 코드 : 품목분류2 */
			, REQ.ITEMCAT_LVL_3_CD       /*분류3 코드 : 품목분류3 */
			, REQ.ITEMCAT_LVL_4_CD       /*분류4 코드 : 품목분류4 */
			, REQ.ITEMCAT_LVL_5_CD
			, REQ.SG_CD
			, REQ.ATHG_UUID
			, REQ.IMG_ATHG_UUID
			, REQ.DWG_NO
			, REQ.MFGR_CD
			, REQ.MFGR_NM        /*제조사 명 */
			, REQ.MDL_NO          /*모델 번호 */
			, REQ.HS_NO
			, REQ.REP_ITEM_CD_YN
			, REQ.RMK
			, REQ.REQR_ID          /*요청자 아이디 */
			, REQ.REQ_DTTM          /*요청 일시 */
			, REQ.APVR_ID
			, REQ.APVD_DTTM
			, REQ.ITEM_REG_REQ_RET_RSN
			, REQ.ITEM_REG_REQ_STS_CCD		/*진행 상태 T:임시저장,P:요청,C:승인,B:반려 */
			, REQ.STS
			, REQ.REGR_ID
			, REQ.REG_DTTM
			, REQ.MODR_ID
			, REQ.MOD_DTTM
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN CAT1.ITEMCAT_NM_EN
						ELSE CAT1.ITEMCAT_NM
					END
				FROM ITEMCAT CAT1
				WHERE CAT1.TEN_ID  = REQ.TEN_ID
				AND CAT1.ITEMCAT_CD = REQ.ITEMCAT_LVL_1_CD
				AND CAT1.STS != 'D'
			) AS ITEMCAT_LVL_1_NM			/* 품목분류1명 */
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN CAT2.ITEMCAT_NM_EN
						ELSE CAT2.ITEMCAT_NM
					END
				FROM ITEMCAT CAT2
				WHERE CAT2.TEN_ID  = REQ.TEN_ID
				AND CAT2.ITEMCAT_CD = REQ.ITEMCAT_LVL_2_CD
				AND CAT2.STS != 'D'
			) AS ITEMCAT_LVL_2_NM 		/* 품목분류2명 */
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN CAT3.ITEMCAT_NM_EN
						ELSE CAT3.ITEMCAT_NM
					END
				FROM ITEMCAT CAT3
				WHERE CAT3.TEN_ID  = REQ.TEN_ID
				AND CAT3.ITEMCAT_CD = REQ.ITEMCAT_LVL_3_CD
				AND CAT3.STS != 'D'
			) AS ITEMCAT_LVL_3_NM 		/* 품목분류3명 */
			,(
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN CAT4.ITEMCAT_NM_EN
						ELSE CAT4.ITEMCAT_NM
					END
				FROM ITEMCAT CAT4
				WHERE CAT4.TEN_ID  = REQ.TEN_ID
				AND CAT4.ITEMCAT_CD = REQ.ITEMCAT_LVL_4_CD
				AND CAT4.STS != 'D'
			) AS ITEMCAT_LVL_4_NM 		/* 품목분류4명 */
			, CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
					ELSE USR.USR_NM
				END AS REQ_NM			/*요청자*/
		FROM ITEM_REG_REQ REQ
		LEFT OUTER JOIN USR USR
		ON USR.TEN_ID = REQ.TEN_ID
		AND USR.CO_CD = #{g.co_cd}
		AND USR.USR_ID = REQ.REQR_ID
		AND USR.STS != 'D'
		WHERE REQ.TEN_ID = #{g.tenant}
		AND REQ.ITEM_REG_REQ_STS_CCD IN ('APVL_REQG', 'APVD', 'RET')	/* 진행 상태 P:요청,C:승인,R:반려 */
		AND REQ.STS != 'D'
		<!-- 분류 -->
		<if test="p.itemcat_lvl_1_cd != null and p.itemcat_lvl_1_cd != &quot;&quot;">
			AND REQ.ITEMCAT_LVL_1_CD = #{p.itemcat_lvl_1_cd}
		</if>
		<if test="p.itemcat_lvl_2_cd != null and p.itemcat_lvl_2_cd != &quot;&quot;">
			AND REQ.ITEMCAT_LVL_2_CD = #{p.itemcat_lvl_2_cd}
		</if>
		<if test="p.itemcat_lvl_3_cd != null and p.itemcat_lvl_3_cd != &quot;&quot;">
			AND REQ.ITEMCAT_LVL_3_CD = #{p.itemcat_lvl_3_cd}
		</if>
		<if test="p.itemcat_lvl_4_cd != null and p.itemcat_lvl_4_cd != &quot;&quot;">
			AND REQ.ITEMCAT_LVL_4_CD = #{p.itemcat_lvl_4_cd}
		</if>
		<!-- 등록요청일자 -->
		<if test="p.from_date != null">
			AND REQ.REG_DTTM &gt;= #{p.from_date}
		</if>
		<if test="p.to_date != null">
			<bind name="toDatePattern" value="g.getPlusDays(p.to_date,1)"/>
			AND REQ.REG_DTTM <![CDATA[<]]> #{toDatePattern}
		</if>
		<!-- 요청자 -->
		<if test="p.reqr_id != null and p.reqr_id != &quot;&quot;">
			AND REQ.REQR_ID = UPPER(#{p.reqr_id})
		</if>
		<!-- 요청자 -->
		<if test="p.reqr_nm != null and p.reqr_nm != &quot;&quot;">
			<bind name="reqNmPattern" value="'%' + p.reqr_nm + '%'"/>
			AND (UPPER(USR.USR_NM) LIKE UPPER(#{reqNmPattern}) OR UPPER(USR.USR_NM_EN) LIKE UPPER(#{reqNmPattern}) )
		</if>
		<!-- 품목코드 -->
		<choose>
			<when test="p.item_cds != null and p.item_cds.size() != 0">
				AND REQ.ITEM_CD IN
				<foreach close=")" collection="p.item_cds" item="item_cd" open="(" separator=",">
					#{item_cd}
				</foreach>
			</when>
			<otherwise>
				<if test="p.item_cd != null and p.item_cd != &quot;&quot;">
					<bind name="itemCdPattern" value="'%' + p.item_cd + '%'"/>
					AND UPPER(REQ.ITEM_CD) LIKE UPPER(#{itemCdPattern})
				</if>
			</otherwise>
		</choose>
		<!-- 품목명 -->
		<if test="p.item_nm != null and p.item_nm != &quot;&quot;">
			<bind name="itemNmPattern" value="'%' + p.item_nm + '%'"/>
			AND (UPPER(REQ.ITEM_NM) LIKE UPPER(#{itemNmPattern}) OR UPPER(REQ.ITEM_NM_EN) LIKE UPPER(#{itemNmPattern}))
		</if>
		<!-- 등록요청번호 -->
		<choose>
			<when test="p.item_reg_req_nos != null and p.item_reg_req_nos.size() != 0">
				AND REQ.ITEM_REG_REQ_NO IN
				<foreach close=")" collection="p.item_reg_req_nos" item="item_reg_req_no" open="(" separator=",">
					#{item_reg_req_no}
				</foreach>
			</when>
			<otherwise>
				<if test="p.item_reg_req_no != null and p.item_reg_req_no != ''">
					<bind name="regReqNoPattern" value="'%' + p.item_reg_req_no + '%'"/>
					AND UPPER(REQ.ITEM_REG_REQ_NO) LIKE UPPER(#{regReqNoPattern})
				</if>
			</otherwise>
		</choose>
		<!-- 진행상태 -->
		<if test="p.item_reg_req_sts_ccd != null and p.item_reg_req_sts_ccd != &quot;&quot;">
			AND REQ.ITEM_REG_REQ_STS_CCD = #{p.item_reg_req_sts_ccd}
		</if>
		ORDER BY REQ.MOD_DTTM DESC
    </select>
	<select id="findInfoItemReg" resultType="map">
		/* item-reg.findInfoItemReg : 품목등록관리 상세 정보 조회 */
		SELECT
		    REQ.TEN_ID /*시스템 아이디 */
			, REQ.ITEM_REG_REQ_NO /*등록 요청 번호 */
			, REQ.REQ_TYP_CCD /*요청 유형 */
			, REQ.ITEM_CD /*품목 코드 */
			, REQ.ITEM_NM /*품목 명 */
			, REQ.ITEM_NM_EN /*품목 영문 명 */
			, REQ.ITEM_SIMWORD /*동의어 */
			, REQ.ITEM_SPEC /*규격 */
			, REQ.UOM_CCD /*기본 단위 코드 */
			, (SELECT
			       DL.DTLCD_NM
				FROM DTLCD D
				INNER JOIN DTLCD_MULTLANG DL
				ON D.TEN_ID = DL.TEN_ID
				AND D.CCD = DL.CCD
				AND D.DTLCD = DL.DTLCD
				AND DL.LANG_CCD = #{g.locale}
				WHERE D.TEN_ID = #{g.tenant}
				AND D.CCD = 'C007'
				AND D.USE_YN = 'Y'
				AND D.DTLCD = REQ.UOM_CCD
			) AS UOM_NM
			, REQ.ITEMCAT_LVL_1_CD /*분류1 코드 */
			, REQ.ITEMCAT_LVL_2_CD /*분류2 코드 */
			, REQ.ITEMCAT_LVL_3_CD /*분류3 코드 */
			, REQ.ITEMCAT_LVL_4_CD /*분류4 코드 */
			, REQ.ITEMCAT_LVL_5_CD /*분류5 코드 */
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN CAT1.ITEMCAT_NM_EN
			   			ELSE CAT1.ITEMCAT_NM
			   		END
				FROM ITEMCAT CAT1
				WHERE CAT1.TEN_ID = REQ.TEN_ID
				AND CAT1.ITEMCAT_CD = REQ.ITEMCAT_LVL_1_CD
				AND CAT1.STS != 'D'
			) AS ITEMCAT_LVL_1_NM /* 품목분류1명 */
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN CAT2.ITEMCAT_NM_EN
			   			ELSE CAT2.ITEMCAT_NM
			   		END
				FROM ITEMCAT CAT2
				WHERE CAT2.TEN_ID = REQ.TEN_ID
				AND CAT2.ITEMCAT_CD = REQ.ITEMCAT_LVL_2_CD
				AND CAT2.STS != 'D'
			) AS ITEMCAT_LVL_2_NM /* 품목분류2명 */
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN CAT3.ITEMCAT_NM_EN
			   			ELSE CAT3.ITEMCAT_NM
			   		END
				FROM ITEMCAT CAT3
				WHERE CAT3.TEN_ID = REQ.TEN_ID
				AND CAT3.ITEMCAT_CD = REQ.ITEMCAT_LVL_3_CD
				AND CAT3.STS != 'D'
			) AS ITEMCAT_LVL_3_NM /* 품목분류3명 */
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN CAT4.ITEMCAT_NM_EN
			   			ELSE CAT4.ITEMCAT_NM
			   		END
				FROM ITEMCAT CAT4
				WHERE CAT4.TEN_ID = REQ.TEN_ID
				AND CAT4.ITEMCAT_CD = REQ.ITEMCAT_LVL_4_CD
				AND CAT4.STS != 'D'
			) AS ITEMCAT_LVL_4_NM /* 품목분류4명 */
			, REQ.SG_CD
			, REQ.ATHG_UUID /*첨부 번호 */
			, REQ.IMG_ATHG_UUID /*이미지 첨부 번호 */
			, REQ.DWG_NO
			, REQ.MFGR_CD	    /*제조사 코드 */
			, REQ.MFGR_NM /*제조사 명 */
			, REQ.MDL_NO /*모델 번호 */
			, REQ.HS_NO
			, REQ.REP_ITEM_CD_YN
			, REQ.RMK /*비고 */
			, REQ.REQR_ID /*요청자 아이디 */
			, REQ.REQ_DTTM
			, REQ.ITEM_REG_REQ_RET_RSN
			, REQ.ITEM_REG_REQ_STS_CCD /*진행 상태 T:임시저장,P:요청,C:승인,B:반려*/
			, REQ.STS
			, REQ.REGR_ID
			, REQ.REG_DTTM
			, REQ.MODR_ID
			, REQ.MOD_DTTM
			, REQ.ITEM_CHG_REQ_CONT /*변경 요청 내용*/
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN UR.USR_NM_EN
			   			ELSE UR.USR_NM
			   		END
				FROM USR UR
				WHERE UR.TEN_ID = REQ.TEN_ID
				AND UR.CO_CD = #{g.co_cd}
				AND UR.USR_ID = REQ.REQR_ID
				AND UR.STS != 'D'
			) AS REQR_NM /*요청자*/
			, (SELECT
			       UR.TEL
				FROM USR UR
				WHERE UR.TEN_ID = REQ.TEN_ID
				AND UR.CO_CD = #{g.co_cd}
				AND UR.USR_ID = REQ.REQR_ID
				AND UR.STS != 'D'
			) AS REQR_PHONE /*요청자*/
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN ORG.LOGIC_ORG_NM_EN
			   			ELSE ORG.LOGIC_ORG_NM
			   		END
				FROM USR UR
				LEFT OUTER JOIN LOGIC_ORG ORG /* 조직*/
				ON ORG.TEN_ID = UR.TEN_ID
				AND ORG.LOGIC_ORG_TYP_CCD = 'COMPANY'
				AND ORG.LOGIC_ORG_CD = UR.CO_CD
				AND ORG.USE_YN = 'Y'
				AND ORG.STS != 'D'
				WHERE UR.TEN_ID = REQ.TEN_ID
				AND UR.USR_ID = REQ.REQR_ID
			) AS REQR_COMP
			, (SELECT
			       CASE WHEN 'en_US' = #{g.locale} THEN DEPT.DEPT_NM_EN
			   			ELSE DEPT.DEPT_NM
			   		END
				FROM USR UR
				LEFT OUTER JOIN DEPT DEPT
				ON DEPT.TEN_ID = UR.TEN_ID
				AND DEPT.DEPT_CD = UR.DEPT_CD
				AND DEPT.STS != 'D'
				LEFT OUTER JOIN LOGIC_ORG_DEPT_MAPG ODM
				on DEPT.TEN_ID = ODM.TEN_ID
				AND DEPT.DEPT_CD = ODM.DEPT_CD
				AND ODM.LOGIC_ORG_TYP_CCD = 'COMPANY'
				AND ODM.LOGIC_ORG_CD = UR.CO_CD
				AND ODM.STS != 'D'
				WHERE UR.TEN_ID = REQ.TEN_ID
				AND UR.USR_ID = REQ.REQR_ID
			) AS REQR_DEPT
			, REQ.APVR_ID
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN USR.USR_NM_EN
						ELSE USR.USR_NM
					END
				FROM USR USR
				WHERE USR.TEN_ID  = REQ.TEN_ID
				AND USR.CO_CD = #{g.co_cd}
				AND USR.USR_ID  = REQ.APVR_ID
				AND USR.STS != 'D'
			) AS APVR_NM		/*승인자명*/
			, (
				SELECT
					USR.TEL
				FROM USR USR
				WHERE USR.TEN_ID  = REQ.TEN_ID
				AND USR.CO_CD = #{g.co_cd}
				AND USR.USR_ID  = REQ.APVR_ID
				AND USR.STS != 'D'
			) AS APVR_PHONE		/*요청자*/
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN ORG.LOGIC_ORG_NM_EN
						ELSE ORG.LOGIC_ORG_NM
					END
				FROM USR USR
				LEFT OUTER JOIN LOGIC_ORG ORG /* 조직*/
				ON ORG.TEN_ID     = USR.TEN_ID
				AND ORG.LOGIC_ORG_TYP_CCD = 'COMPANY'
				AND ORG.LOGIC_ORG_CD     = USR.CO_CD
				AND ORG.USE_YN       = 'Y'
				AND ORG.STS != 'D'
				WHERE USR.TEN_ID  = REQ.TEN_ID
				AND USR.USR_ID  = REQ.APVR_ID
			) AS APVR_COMP
			, (
				SELECT
					CASE WHEN 'en_US' = #{g.locale} THEN DEPT.DEPT_NM_EN
						ELSE DEPT.DEPT_NM
					END
				FROM USR USR
				LEFT OUTER JOIN DEPT DEPT
				ON DEPT.TEN_ID     = USR.TEN_ID
				AND DEPT.DEPT_CD    = USR.DEPT_CD
				AND DEPT.STS != 'D'
				LEFT OUTER JOIN LOGIC_ORG_DEPT_MAPG ODM
				ON DEPT.TEN_ID         = ODM.TEN_ID
				AND DEPT.DEPT_CD        = ODM.DEPT_CD
				AND ODM.LOGIC_ORG_TYP_CCD  = 'COMPANY'
				AND ODM.LOGIC_ORG_CD       = USR.CO_CD
				AND ODM.STS          != 'D'
				WHERE USR.TEN_ID  = REQ.TEN_ID
				AND USR.USR_ID  = REQ.APVR_ID
			) AS APVR_DEPT
			, REQ.APVD_DTTM
		FROM ITEM_REG_REQ REQ
		WHERE REQ.TEN_ID = #{g.tenant}
		AND REQ.ITEM_REG_REQ_NO = #{p.item_reg_req_no}
		AND REQ.STS != 'D'
	</select>
	<select id="findListItemChangeHistory" resultType="map">
		/* item-reg.findListItemChangeHistory : 품목 변경 내용 조회 */
		<trim prefix="SELECT" prefixOverrides=",">
			<if test="p.item_nm != null">
				, CASE WHEN #{p.item_nm} = ITEM_NM THEN NULL
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEM_NM), ' , new : '), #{p.item_nm})
				END AS ITEM_NM
			</if>
			<if test="p.item_nm_en != null">
				, CASE WHEN #{p.item_nm_en} = ITEM_NM_EN THEN NULL
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEM_NM_EN), ' , new : '), #{p.item_nm_en})
				END AS ITEM_NM_EN
			</if>
			<if test="p.item_simword != null">
				, CASE WHEN #{p.item_simword} = ITEM_SIMWORD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEM_SIMWORD), ' , new : '), #{p.item_simword})
				END AS ITEM_SIMWORD
			</if>
			<if test="p.ITEM_SPEC != null">
				, CASE WHEN #{p.item_spec} = ITEM_SPEC THEN NULL
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEM_SPEC), ' , new : '), #{p.item_spec})
				END AS ITEM_SPEC
			</if>
			<if test="p.uom_ccd != null">
				, CASE WHEN #{p.uom_ccd} = UOM_CCD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', UOM_CCD), ' , new : '), #{p.uom_ccd})
				END AS UOM_CCD
			</if>
			<if test="p.itemcat_lvl_1_cd != null">
				, CASE WHEN #{p.itemcat_lvl_1_cd} = ITEMCAT_LVL_1_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEMCAT_LVL_1_CD), ' , new : '), #{p.itemcat_lvl_1_cd})
				END AS ITEMCAT_LVL_1_CD
			</if>
			<if test="p.itemcat_lvl_2_cd != null">
				, CASE WHEN #{p.itemcat_lvl_2_cd} = ITEMCAT_LVL_2_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEMCAT_LVL_2_CD), ' , new : '), #{p.itemcat_lvl_2_cd})
				END AS ITEMCAT_LVL_2_CD
			</if>
			<if test="p.itemcat_lvl_3_cd != null">
				, CASE WHEN #{p.itemcat_lvl_3_cd} = ITEMCAT_LVL_3_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEMCAT_LVL_3_CD), ' , new : '), #{p.itemcat_lvl_3_cd})
				END AS ITEMCAT_LVL_3_CD
			</if>
			<if test="p.itemcat_lvl_4_cd != null">
				, CASE WHEN #{p.itemcat_lvl_4_cd} = ITEMCAT_LVL_4_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEMCAT_LVL_4_CD), ' , new : '), #{p.itemcat_lvl_4_cd})
				END AS ITEMCAT_LVL_4_CD
			</if>
			<if test="p.itemcat_lvl_5_cd != null">
				, CASE WHEN #{p.itemcat_lvl_5_cd} = ITEMCAT_LVL_5_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ITEMCAT_LVL_5_CD), ' , new : '), #{p.itemcat_lvl_5_cd})
				END AS ITEMCAT_LVL_5_CD
			</if>
			<if test="p.sg_cd != null">
				, CASE WHEN #{p.sg_cd} = SG_CD THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', SG_CD), ' , new : '), #{p.sg_cd})
				END AS SG_CD
			</if>
			<if test="p.athg_uuid != null">
				, CASE WHEN #{p.athg_uuid} = ATHG_UUID THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', ATHG_UUID), ' , new : '), #{p.athg_uuid})
				END AS ATHG_UUID
			</if>
			<if test="p.img_athg_uuid != null">
				, CASE WHEN #{p.img_athg_uuid} = IMG_ATHG_UUID THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', IMG_ATHG_UUID), ' , new : '), #{p.img_athg_uuid})
				END AS IMG_ATHG_UUID
			</if>
			<if test="p.dwg_no != null">
				, CASE WHEN #{p.dwg_no} = DWG_NO THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', DWG_NO), ' , new : '), #{p.dwg_no})
				END AS DWG_NO
			</if>
			<if test="p.mfgr_nm != null">
				, CASE WHEN #{p.mfgr_nm} = MFGR_NM THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', MFGR_NM), ' , new : '), #{p.mfgr_nm})
				END AS MFGR_NM
			</if>
			<if test="p.mdl_no != null">
				, CASE WHEN #{p.mdl_no} = MDL_NO THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', MDL_NO), ' , new : '), #{p.mdl_no})
				END AS MDL_NO
			</if>
			<if test="p.hs_no != null">
				, CASE WHEN #{p.hs_no} = HS_NO THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', HS_NO), ' , new : '), #{p.hs_no})
				END AS HS_NO
			</if>
			<if test="p.purc_pause_yn != null">
				, CASE WHEN #{p.purc_pause_yn} = PURC_PAUSE_YN THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', PURC_PAUSE_YN), ' , new : '), #{p.purc_pause_yn})
				END AS PURC_PAUSE_YN
			</if>
			<if test="p.use_yn != null">
				, CASE WHEN #{p.use_yn} = USE_YN THEN ''
				ELSE CONCAT(CONCAT(CONCAT('old : ', USE_YN), ' , new : '), #{p.use_yn})
				END AS USE_YN
			</if>
		</trim>
		FROM ITEM
		WHERE TEN_ID  = #{g.tenant}
		AND ITEM_CD = #{p.item_cd}
	</select>
	<select id="checkExistedApvdAndRet" resultType="int">
		/* item-reg.checkExistedApvdAndRet : 반려, 승인 중인 데이터가 있는 지 확인 */
		SELECT
			CAST(COUNT(ITEM_REG_REQ_NO) AS NUMERIC) AS CNT  FROM ITEM_REG_REQ
		WHERE TEN_ID = #{g.tenant}
		AND ITEM_REG_REQ_NO = #{p.item_reg_req_no}
		AND ITEM_REG_REQ_STS_CCD IN ('RET', 'APVD') /* 반려, 승인 */
		AND STS != 'D'
	</select>
</mapper>
