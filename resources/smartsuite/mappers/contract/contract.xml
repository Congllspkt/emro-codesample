<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="contract">
	<select id="findContract" resultType="map">
	/* contract.findContract : 계약 정보 조회 */
	SELECT CT.CNTR_UUID
	     , CT.CNTR_REQ_RCPT_UUID
	     , CT.CNTR_CND_UUID
	     , CT.CNTR_NO
	     , CT.CNTR_REVNO
	     , CT.ORG_CD
	     , CT.OORG_CD
	     , OG.OUNIT_CD
	     , CT.CNTR_NM
	     , CT.VD_CD
	     , VD.ERP_VD_CD
	     , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM ELSE VD.VD_NM_EN END AS VD_NM
	     , VD.BIZREGNO
	     , CT.CNTR_ST_DT
	     , CT.CNTR_EXP_DT
	     , CT.CNTR_DT
	     , CT.CNTR_STS_CCD
	     , CT.CNTRDOC_TYP_CCD
	     , CT.CNTR_SGNMETH_CCD
	     , CT.CNTR_TMPL_TYP_CCD
	     , CT.CNTR_PIC_ID
	     , CASE WHEN 'ko_KR' = #{g.locale} THEN US.USR_NM ELSE US.USR_NM_EN END AS CNTR_PIC_NM
	     , CT.CNTR_AMT
	     , CT.SUP_AMT
	     , CT.CUR_CCD
	     , CT.CNTRDOC_LGL_RV_UUID
	     , CT.CNTR_TRMN_DT
	     , CT.CNTR_TRMN_RSN
	     , CT.CNTRPD_AUTO_EXT_USE_YN
	     , CT.TMPL_UNUD_CNTRDOC_ATHG_UUID AS ORGN_TMPL_UNUD_ATHG_UUID
	     , CT.TMPL_UNUD_APPX_ATHG_UUID
	     , CT.CNTRDOC_TMPL_UUID
	     , CT.SGNORD_TYP_CCD
	     , CT.PURC_GRP_CD
	     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
	            ELSE PURC_GRP.PURC_GRP_NM
	        END AS PURC_GRP_NM
	     , CT.CNTR_RET_RSN
	     , CT.LOGIC_ORG_CD
	     , CT.CNTR_TYP_CCD
	     , CR.CNTR_REQ_UUID
	     , AP.APVL_UUID
	     , AP.APVL_STS_CCD
	     , AP.APVL_TYP_CCD
	  FROM CNTR CT
	 INNER JOIN OORG OG
	    ON OG.TEN_ID = CT.TEN_ID
	   AND OG.OORG_CD = CT.OORG_CD
	 LEFT OUTER JOIN PURC_GRP
	    ON PURC_GRP.TEN_ID = CT.TEN_ID
	   AND PURC_GRP.CO_CD = CT.LOGIC_ORG_CD
	   AND PURC_GRP.PURC_GRP_CD = CT.PURC_GRP_CD
	  LEFT OUTER JOIN USR US
	    ON US.TEN_ID = CT.TEN_ID
	   AND US.USR_ID = CT.CNTR_PIC_ID
	  LEFT OUTER JOIN VD VD
	    ON VD.TEN_ID = CT.TEN_ID
	   AND VD.VD_CD =  CT.VD_CD
	  LEFT OUTER JOIN CNTR_REQ_RCPT CR
	    ON CR.TEN_ID = CT.TEN_ID
	   AND CR.CNTR_REQ_RCPT_UUID = CT.CNTR_REQ_RCPT_UUID
	  LEFT OUTER JOIN TASK_APVL TA
	    ON TA.TEN_ID = CT.TEN_ID
	   AND TA.TASK_UUID = CT.CNTR_UUID
	   AND TA.USE_YN = 'Y'
	  LEFT OUTER JOIN APVL AP
	    ON AP.TEN_ID = TA.TEN_ID
	   AND AP.APVL_UUID = TA.APVL_UUID
	 WHERE CT.TEN_ID = #{g.tenant}
	   AND CT.CNTR_UUID = #{p.cntr_uuid}
	</select>
	<select id="findChangeContract" resultType="map">
	/* contract.findChangeContract : 변경 계약 정보 조회 */
	SELECT CT.CNTR_CND_UUID AS ORGN_CNTR_CND_UUID
	     , CT.CNTR_NO
	     , CT.CNTR_REVNO + 1 AS CNTR_REVNO
	     , CT.OORG_CD
	     , OG.OUNIT_CD
	     , CT.CNTR_NM
	     , CT.VD_CD
	     , VD.ERP_VD_CD
	     , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM ELSE VD.VD_NM_EN END AS VD_NM
	     , VD.BIZREGNO
	     , CT.CNTR_ST_DT
	     , CT.CNTR_EXP_DT
	     , CT.CNTRDOC_TYP_CCD
	     , CT.CNTR_SGNMETH_CCD
	     , CT.CNTR_TMPL_TYP_CCD
	     , CT.CNTR_AMT
	     , CT.SUP_AMT
	     , CT.CUR_CCD
	     , CT.PURC_GRP_CD
	     , CASE WHEN #{g.locale} = 'en_US' THEN PURC_GRP.PURC_GRP_NM_EN
	            ELSE PURC_GRP.PURC_GRP_NM
	        END AS PURC_GRP_NM
	     , CT.LOGIC_ORG_CD
	  FROM CNTR CT
	 INNER JOIN OORG OG
	    ON OG.TEN_ID = CT.TEN_ID
	   AND OG.OORG_CD = CT.OORG_CD
	 LEFT OUTER JOIN PURC_GRP
	   ON PURC_GRP.TEN_ID = CT.TEN_ID
	  AND PURC_GRP.CO_CD = CT.LOGIC_ORG_CD
	  AND PURC_GRP.PURC_GRP_CD = CT.PURC_GRP_CD
	  LEFT OUTER JOIN VD VD
	    ON VD.TEN_ID = CT.TEN_ID
	   AND VD.VD_CD =  CT.VD_CD
	 WHERE CT.TEN_ID = #{g.tenant}
	   AND CT.CNTR_UUID = #{p.cntr_uuid}
	</select>
	<insert id="insertContract">
	/* contract.insertContract : 계약 정보 생성 */
	INSERT INTO CNTR
	     ( TEN_ID
	     , CNTR_UUID
	     , CNTR_REQ_RCPT_UUID
	     , CNTR_CND_UUID
	     , CNTR_NO
	     , CNTR_REVNO
	     , ORG_CD
	     , OORG_CD
	     , CNTR_NM
	     , VD_CD
	     , CNTR_ST_DT
	     , CNTR_EXP_DT
	     , CNTR_DT
	     , CNTRDOC_TYP_CCD
	     , CNTR_SGNMETH_CCD
	     , CNTR_TMPL_TYP_CCD
	     , CNTR_PIC_ID
	     , CNTR_AMT
	     , SUP_AMT
	     , CUR_CCD
	     , CNTRDOC_LGL_RV_UUID
	     , CNTR_TRMN_DT
	     , CNTR_TRMN_RSN
	     , CNTRPD_AUTO_EXT_USE_YN
	     , TMPL_UNUD_CNTRDOC_ATHG_UUID
	     , TMPL_UNUD_APPX_ATHG_UUID
	     , CNTRDOC_TMPL_UUID
	     , SGNORD_TYP_CCD
	     , PURC_GRP_CD
	     , CNTR_RET_RSN
	     , LOGIC_ORG_CD
	     , CNTR_TYP_CCD
	     , RMK
	     , STS
	     , REGR_ID
	     , REG_DTTM
	     , MODR_ID
	     , MOD_DTTM
	     )
	VALUES
	     ( #{g.tenant}
	     , #{p.cntr_uuid}
	     , #{p.cntr_req_rcpt_uuid}
	     , #{p.cntr_cnd_uuid}
	     , #{p.cntr_no}
	     , #{p.cntr_revno}
	     , #{p.org_cd}
	     , #{p.oorg_cd}
	     , #{p.cntr_nm}
	     , #{p.vd_cd}
	     , #{p.cntr_st_dt}
	     , #{p.cntr_exp_dt}
	     , #{p.cntr_dt}
	     , #{p.cntrdoc_typ_ccd}
	     , #{p.cntr_sgnmeth_ccd}
	     , #{p.cntr_tmpl_typ_ccd}
	     , #{p.cntr_pic_id}
	     , #{p.cntr_amt}
	     , #{p.sup_amt}
	     , #{p.cur_ccd}
	     , #{p.cntrdoc_lgl_rv_uuid}
	     , #{p.cntr_trmn_dt}
	     , #{p.cntr_trmn_rsn}
	     , #{p.cntrpd_auto_ext_use_yn}
	     , #{p.orgn_tmpl_unud_athg_uuid}
	     , #{p.tmpl_unud_appx_athg_uuid}
	     , #{p.cntrdoc_tmpl_uuid}
	     , #{p.sgnord_typ_ccd}
	     , #{p.purc_grp_cd}
	     , #{p.cntr_ret_rsn}
	     , #{p.logic_org_cd}
	     , #{p.cntr_typ_ccd}
	     , #{p.rmk}
	     , 'C'
	     , #{g.username}
	     , #{g.now}
	     , #{g.username}
	     , #{g.now}
	     )
	</insert>
	<update id="updateContract">
	/* contract.updateContract : 계약 정보 갱신 */
	UPDATE CNTR
	   SET CNTR_NM = #{p.cntr_nm}
	     , CNTR_ST_DT = #{p.cntr_st_dt}
	     , CNTR_EXP_DT = #{p.cntr_exp_dt}
	     , CNTR_DT = #{p.cntr_dt}
		 , CNTR_AMT = #{p.cntr_amt}
	     , CNTR_SGNMETH_CCD = #{p.cntr_sgnmeth_ccd}
	     , CNTR_TMPL_TYP_CCD = #{p.cntr_tmpl_typ_ccd}
	     , CNTRDOC_TMPL_UUID = #{p.cntrdoc_tmpl_uuid}
	     , CNTR_TRMN_RSN = #{p.cntr_trmn_rsn}
	     , TMPL_UNUD_CNTRDOC_ATHG_UUID = #{p.orgn_tmpl_unud_athg_uuid}
	     , TMPL_UNUD_APPX_ATHG_UUID = #{p.tmpl_unud_appx_athg_uuid}
	     , SGNORD_TYP_CCD = #{p.sgnord_typ_ccd}
	     , PURC_GRP_CD = #{p.purc_grp_cd}
	     , RMK = #{p.rmk}
	     , STS = 'U'
	     , MODR_ID = #{g.username}
	     , MOD_DTTM = #{g.now}
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</update>
	<delete id="deleteContract">
	/* contract.deleteContract : 계약 정보 삭제 */
	DELETE FROM CNTR
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</delete>
	<insert id="insertContractor">
	/* contract.insertContractor : 계약자 정보 생성 */
	INSERT INTO CNTRR
		 ( TEN_ID
		 , CNTRR_UUID
		 , CNTR_UUID
		 , VD_CD
		 , CNTRR_TYP_CCD
		 , USR_ID
		 , CNTRR_EML
		 , CNTRR_MOB
		 , REP_VD_YN
		 , RMK
		 , STS
		 , REGR_ID
		 , REG_DTTM
		 , MODR_ID
		 , MOD_DTTM
		 )
	VALUES
		 ( #{g.tenant}
		 , #{g.uuid}
		 , #{p.cntr_uuid}
		 , #{p.vd_cd}
		 , #{p.cntrr_typ_ccd}
		 , #{p.usr_id}
		 , #{p.cntrr_eml}
		 , #{p.cntrr_mob}
		 , #{p.rep_vd_yn}
		 , #{p.rmk}
		 , 'C'
		 , #{g.username}
		 , #{g.now}
		 , #{g.username}
		 , #{g.now}
		 )
	</insert>
	<update id="updateContractorByVdCd">
	/* contract.updateContractorByVdCd : 계약자 정보 갱신 */
	UPDATE CNTRR
	   SET CNTRR_EML = #{p.cntrr_eml}
	     , CNTRR_MOB = #{p.cntrr_mob}
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	   AND VD_CD = #{p.vd_cd}
	</update>
	<update id="updateContractor">
	/* contract.updateContractor : 계약자 정보 갱신 */
	UPDATE CNTRR
	   SET CNTRR_EML = #{p.cntrr_eml}
	     , CNTRR_MOB = #{p.cntrr_mob}
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTRR_UUID = #{p.cntrr_uuid}
	</update>
	<delete id="deleteContractor">
	/* contract.deleteContractor : 계약자 정보 삭제 */
	DELETE FROM CNTRR
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</delete>
	<select id="findListContract" resultType="map">
	/* contract.findListContract : 계약 목록 조회 */
		SELECT T.*
			 , CASE WHEN T.VD_CNT &gt; 0 THEN CONCAT(CONCAT(T.VD_NM, ' 외 '), T.VD_CNT)
					ELSE T.VD_NM
					 END AS DISP_VD_NM
	      FROM (
		SELECT CT.CNTR_UUID
		     , CT.CNTR_REQ_RCPT_UUID
		     , CT.CNTR_CND_UUID
		     , CT.CNTR_NO
		     , CT.CNTR_REVNO
		     , CT.ORG_CD
		     , CT.OORG_CD
		     , CT.CNTR_NM
		     , CT.VD_CD
		     , VD.ERP_VD_CD
		     , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM ELSE VD.VD_NM_EN END AS VD_NM
		     , CT.CNTR_ST_DT
		     , CT.CNTR_EXP_DT
		     , CT.CNTR_DT
		     , CT.CNTR_STS_CCD
		     , CT.CNTRDOC_TYP_CCD
		     , CT.CNTR_SGNMETH_CCD
		     , CT.CNTR_TMPL_TYP_CCD
		     , CT.CNTR_PIC_ID
		     , CASE WHEN 'ko_KR' = #{g.locale} THEN US.USR_NM ELSE US.USR_NM_EN END AS CNTR_PIC_NM
		     , CT.CNTR_AMT
		     , CT.SUP_AMT
		     , CT.CUR_CCD
		     , CT.CNTRDOC_LGL_RV_UUID
		     , CT.CNTR_TRMN_DT
		     , CT.CNTR_TRMN_RSN
		     , CT.CNTRPD_AUTO_EXT_USE_YN
		     , CT.TMPL_UNUD_CNTRDOC_ATHG_UUID
		     , CT.TMPL_UNUD_APPX_ATHG_UUID
		     , CT.CNTRDOC_TMPL_UUID
		     , CT.SGNORD_TYP_CCD
		     , CT.PURC_GRP_CD
		     , CT.CNTR_RET_RSN
		     , CT.LOGIC_ORG_CD
		     , CT.CNTR_TYP_CCD
		     , (SELECT COUNT(Z.VD_CD)
		          FROM CNTRR Z
		         WHERE Z.TEN_ID = CT.TEN_ID
		           AND Z.CNTR_UUID = CT.CNTR_UUID
		           AND Z.CNTRR_TYP_CCD = 'VD'
		           AND Z.VD_CD != CT.VD_CD) AS VD_CNT
		     , TA.TASK_UUID AS APVL_TASK_UUID
		     , AP.APVL_STS_CCD
		     , AP.APVL_TYP_CCD
		     , CASE WHEN CT.CNTR_REVNO = (SELECT MAX(X.CNTR_REVNO)
		                                  FROM CNTR X
		                                 WHERE X.TEN_ID = CT.TEN_ID
		                                   AND X.CNTR_NO = CT.CNTR_NO)
		            THEN 'Y' ELSE 'N'
		        END AS FINAL_CNTR_YN
		  FROM CNTR CT
		  LEFT OUTER JOIN USR US
		    ON US.TEN_ID = CT.TEN_ID
		   AND US.USR_ID = CT.CNTR_PIC_ID
		  LEFT OUTER JOIN VD VD
		    ON VD.TEN_ID = CT.TEN_ID
		   AND VD.VD_CD =  CT.VD_CD
		  LEFT OUTER JOIN TASK_APVL TA
		    ON TA.TEN_ID = CT.TEN_ID
		   AND TA.TASK_UUID = CT.CNTR_UUID
		   AND TA.USE_YN = 'Y'
		  LEFT OUTER JOIN APVL AP
		    ON AP.TEN_ID = TA.TEN_ID
		   AND AP.APVL_UUID = TA.APVL_UUID
		 WHERE CT.TEN_ID = #{g.tenant}
		<if test="p.exp_from_date != null and p.exp_from_date !=''">
		   AND CT.CNTR_EXP_DT &gt;= #{p.exp_from_date}
		</if>
		<if test="p.exp_to_date != null and p.exp_to_date !=''">
		   AND CT.CNTR_EXP_DT <![CDATA[<=]]> #{p.exp_to_date}
		</if>
		<if test="p.cntr_sts_ccd !=null and p.cntr_sts_ccd !=''">
		   AND CT.CNTR_STS_CCD = #{p.cntr_sts_ccd}
		</if>
		<if test="p.cntr_typ_ccd != null and p.cntr_typ_ccd !=''">
		   AND CT.CNTR_TYP_CCD = #{p.cntr_typ_ccd}
		</if>
		<if test="p.cntrdoc_typ_ccd != null and p.cntrdoc_typ_ccd !=''">
		   AND CT.CNTRDOC_TYP_CCD = #{p.cntrdoc_typ_ccd}
		</if>
		<if test="p.cntr_nm != null and p.cntr_nm !=''">
		   <bind name="cntrNm" value="'%'+p.cntr_nm+'%'"/>
		   AND CT.CNTR_NM LIKE UPPER(#{cntrNm})
		</if>
		<if test="p.cntr_no != null and p.cntr_no !=''">
		   <bind name="cntrNo" value="'%'+p.cntr_no+'%'"/>
		   AND CT.CNTR_NO LIKE UPPER(#{cntrNo})
		</if>
		<if test="p.cntr_pic_id != null and p.cntr_pic_id !=''">
		   AND CT.CNTR_PIC_ID = #{p.cntr_pic_id}
		</if>
		<if test="p.cntr_pic_nm != null and p.cntr_pic_nm !=''">
		   <bind name="cntrPicNm" value="'%'+p.cntr_pic_nm+'%'"/>
		   AND (UPPER(US.USR_NM) LIKE UPPER(#{cntrPicNm}) OR UPPER(US.USR_NM_EN) LIKE UPPER(#{cntrPicNm}))
		</if>
		<if test="p.erp_vd_cd != null and p.erp_vd_cd !=''">
		   <bind name="erpVdCd" value="'%'+p.erp_vd_cd+'%'"/>
		   AND UPPER(VD.ERP_VD_CD) LIKE UPPER(#{erpVdCd})
		</if>
		<if test="p.vd_nm != null and p.vd_nm !=''">
		   <bind name="vdNm" value="'%'+p.vd_nm+'%'"/>
		   AND (UPPER(VD.VD_NM) LIKE UPPER(#{vdNm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{vdNm}))
		</if>
	       ) T
	 ORDER BY T.CNTR_NO DESC, T.CNTR_REVNO DESC
	</select>
	<update id="updateContractStatus">
	/* contract.updateContractStatus : 계약 상태 업데이트 */
	UPDATE CNTR
		SET CNTR_STS_CCD = #{p.cntr_sts_ccd}
	<if test="p.reason != null and p.reason != &quot;&quot;">
	     , CNTR_RET_RSN = #{p.reason}
	</if>
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</update>
	<update id="terminateContract">
	/* contract.terminateContract : 계약 해지 처리 */
	UPDATE CNTR
	   SET CNTR_STS_CCD = 'CNTR_TRMN'
	     , CNTR_TRMN_DT = TO_CHAR(#{g.now}, 'YYYYMMDD')  , CNTR_TRMN_RSN = #{p.cntr_trmn_rsn}
	     , MODR_ID = #{g.username}
	     , MOD_DTTM = #{g.now}
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</update>
	<insert id="insertCntrHistory">
	/* contract.insertCntrHistory : 계약 이력 저장 */
	INSERT INTO CNTR_PRGS_HISTREC
	     ( TEN_ID
	     , CNTR_PRGS_HISTREC_UUID
	     , CNTR_UUID
	     , CNTR_STS_CCD
	     , RET_RSN
	     , USR_IP
	     , USR_WEBBR_KIND
	     , CNTR_SGNDUSR_UUID
	     , CNTRR_EML
	     , STS
	     , RMK
	     , REGR_ID
	     , REG_DTTM
	     , MODR_ID
	     , MOD_DTTM
	     )
	     VALUES
	     ( #{g.tenant}
	     , #{p.cntr_prgs_histrec_uuid}
	     , #{p.cntr_uuid}
	     , #{p.cntr_sts_ccd}
	     , #{p.cntr_ret_rsn}
	     , #{p.usr_ip}
	     , #{p.usr_webbr_kind}
	     , #{p.cntr_sgndusr_uuid}
	     , #{p.cntrr_eml}
	     , 'C'
	     , #{p.rmk}
	     <choose>
		     <when test=" p.username != null and p.username != ''">
			     ,#{p.username}
		     </when>
		     <otherwise>
			     ,#{g.username}
		     </otherwise>
	     </choose>
	     , #{p.histRegDate}
		<choose>
			<when test=" p.username != null and p.username != ''">
				,#{p.username}
			</when>
			<otherwise>
				,#{g.username}
			</otherwise>
		</choose>
	     , #{p.histRegDate}
	     )
	</insert>
	<select id="findListCntrHistory" resultType="map">
	/* contract.findListCntrHistory : 계약 이력 조회 */
	SELECT CRHR.TEN_ID
	     , CRHR.CNTR_UUID
	     , CRHR.CNTR_STS_CCD
	     , CRHR.RET_RSN
	     , CRHR.RMK
	     , CRHR.STS
	     , CRHR.REGR_ID
	     , CRHR.REG_DTTM
	     , CASE WHEN US.USR_NM IS NULL OR US.USR_NM = ''
	            THEN CRHR.REGR_ID
	            ELSE US.USR_NM
	        END USR_NM
	  FROM CNTR_PRGS_HISTREC CRHR
	  LEFT OUTER JOIN USR US
	    ON CRHR.TEN_ID = US.TEN_ID
	   AND CRHR.REGR_ID = US.USR_ID
	 WHERE CRHR.TEN_ID = #{g.tenant}
	   AND CRHR.CNTR_UUID = #{p.cntr_uuid}
	 ORDER BY CRHR.REG_DTTM ASC
	</select>
	<select id="findListContractor" resultType="map">
	/* contract.findListContractor : 계약자 목록 조회 */
	SELECT T.*
	  FROM (
		SELECT TR.CNTRR_UUID
		     , TR.CNTR_UUID
		     , TR.VD_CD
		     , VD.ERP_VD_CD
		     , VD.VD_NM
		     , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM ELSE VD.VD_NM_EN END AS DISP_VD_NM
		     , VD.BIZREGNO
		     , TR.CNTRR_TYP_CCD
		     , TR.USR_ID
		     , TR.CNTRR_EML
		     , TR.CNTRR_MOB
		     , TR.REP_VD_YN
		     , CASE WHEN TR.REP_VD_YN = 'Y' THEN 1 ELSE 2 END AS SORT_ORD
		  FROM CNTRR TR
		 INNER JOIN CNTR CT
		    ON CT.TEN_ID = TR.TEN_ID
		   AND CT.CNTR_UUID = TR.CNTR_UUID
		  LEFT OUTER JOIN VD VD
		    ON VD.TEN_ID = TR.TEN_ID
		   AND VD.VD_CD = TR.VD_CD
		 WHERE TR.TEN_ID = #{g.tenant}
		   AND TR.CNTR_UUID = #{p.cntr_uuid}
		   AND TR.CNTRR_TYP_CCD = 'VD'
	       ) T
	   ORDER BY T.SORT_ORD ASC, T.VD_NM ASC
	</select>
	<select id="findListCntrVendor" resultType="map">
	/* contract.findListCntrVendor : 계약 상대자 목록 조회 */
	 SELECT VD.VD_CD
	      , VD.ERP_VD_CD
	      , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM ELSE VD.VD_NM_EN END AS VD_NM
	      , VD.BIZREGNO
	      , OG.OORG_CD
	   FROM VD VD
	<if test="p.ounit_cd != null and p.ounit_cd == &quot;PO&quot;">
	  INNER JOIN OORG_MAPG LM
	     ON LM.TEN_ID = VD.TEN_ID
	    AND LM.CONN_TYP_CCD = 'POEO'
	    AND LM.CONNSRC_OORG_CD = #{p.oorg_cd}
	</if>
	  INNER JOIN VD_OORG OG
	     ON OG.TEN_ID = VD.TEN_ID
	    AND OG.VD_CD = VD.VD_CD
	<choose>
		<when test="p.ounit_cd != null and p.ounit_cd == &quot;PO&quot;">
	    AND OG.OORG_CD = LM.CONNSUBJ_OORG_CD
		</when>
		<otherwise>
	    AND OG.OORG_CD = #{p.oorg_cd}
		</otherwise>
	</choose>
	    AND OG.OBD_TYP_CCD = 'OFC'  /* 협력사 구분(E902): 거래업체 */
	    AND OG.PO_POSS_YN = 'Y'  /* 거래상태(E035): 거래 */
	  WHERE VD.TEN_ID = #{g.tenant}
	    AND VD.STS != 'D'
	<if test="p.bizregno != null and p.bizregno != ''">
	   <bind name="bizregno" value="'%'+p.bizregno+'%'"/>
	   AND UPPER(VD.BIZREGNO) LIKE UPPER(#{bizregno})
	</if>
	<if test="p.vd_nm != null and p.vd_nm !=''">
	   <bind name="vdNm" value="'%' + p.vd_nm + '%'"/>
	   AND (UPPER(VD.VD_NM) LIKE UPPER(#{vdNm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{vdNm}))
	</if>
	<if test="p.vd_cd != null and p.vd_cd !=''">
	   <bind name="vdCd" value="'%' + p.vd_cd + '%'"/>
	   AND UPPER(VD.VD_CD) LIKE UPPER(#{vdCd})
	</if>
	<if test="p.erp_vd_cd != null and p.erp_vd_cd !=''">
	   <bind name="erpVdCd" value="'%' + p.erp_vd_cd + '%'"/>
	   AND UPPER(VD.ERP_VD_CD) LIKE UPPER(#{erpVdCd})
	</if>
	 ORDER BY VD.VD_CD DESC
	</select>
	<select id="getMaxCntrRevNo" resultType="String">
	/* contract.getMaxCntrRevNo : 최근 계약 차수 조회 */
	SELECT MAX(CNTR_REVNO) AS CNTR_REVNO
	  FROM CNTR
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_NO = #{p}
	</select>
	<delete id="deleteContractHistory">
	/* contract.deleteContractHistory : 계약 이력 삭제 */
	DELETE FROM CNTR_PRGS_HISTREC
	 WHERE TEN_ID = #{g.tenant}
	   AND CNTR_UUID = #{p.cntr_uuid}
	</delete>
	<select id="getContractDocWithdrawalPossYn" resultType="String">
	/* contract.getContractDocWithdrawalPossYn : 계약서 회수 가능여부 조회 */
		SELECT CASE WHEN CNTR_STS_CCD = 'VD_RCPT_CONFM' OR CNTR_STS_CCD = 'SND'
			        THEN 'Y'
		            ELSE 'N'
			         END AS WITHDRAWAL_POSS_YN
		 FROM CNTR
		WHERE TEN_ID = #{g.tenant}
		  AND CNTR_UUID = #{p.cntr_uuid}
		  AND STS <![CDATA[<>]]> 'D'
	</select>
	<update id="updateTaskApvlUseYn">
	/* contract.updateTaskApvlUseYn : 계약서 회수시 결재연결 제거 */
		UPDATE TASK_APVL
           SET USE_YN = 'N'
		 WHERE TEN_ID = #{g.tenant}
		   AND TASK_UUID = #{p.cntr_uuid}
		   AND APVL_TYP_CCD = 'CNTR'
		   AND USE_YN = 'Y'
		   AND STS != 'D'
	</update>
	<select id="validateCompanyInfo" resultType="String">
	/* contract.validateCompanyInfo : 일괄 계약 작성 &gt; 업체 검증 */
	SELECT
	    CASE WHEN COUNT(VD.VD_CD) = 0 THEN 'N' ELSE 'Y' END AS IS_EXIST
	FROM VD VD
	WHERE TEN_ID = #{g.tenant}
	  AND ERP_VD_CD = #{p.erp_vd_cd}
	</select>
</mapper>
