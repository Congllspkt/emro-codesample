<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="purc-contract-cnd">
	<insert id="insertPurcCntrInfo">
/* purc-contract-cnd.insertPurcCntrInfo */
		INSERT INTO PURC_CNTR_INFO (
			TEN_ID
			, PURC_CNTR_INFO_UUID
			, PURC_CNTR_UUID
			, PYMTMETH_CCD
			, PYMTMETH_EXPLN
			, PYMTMETH_USE_YN
			, DLVYMETH_CCD
			, DLVYMETH_EXPLN
			, DLVYMETH_USE_YN
			, TAX_TYP_CCD
			, OTREXP
			, OTREXP_EXPLN
			, PYMTMETH_CND
			, DFRM_RO
			, CPGUR_USE_YN
			, CPGUR_TYP_CCD
			, CPGUR_RO
			, CPGUR_AMT
			, CPGUR_ST_DT
			, CPGUR_EXP_DT
			, DEFPGUR_USE_YN
			, DEFPGUR_TYP_CCD
			, DEFPGUR_RO
			, DEFPGUR_AMT
			, DEFPGUR_PD_TYP_CCD
			, DEFPGUR_PD
			, APYMTGUR_USE_YN
			, APYMTGUR_TYP_CCD
			, APYMTGUR_RO
			, APYMTGUR_AMT
			, APYMTGUR_ST_DT
			, APYMTGUR_EXP_DT
			, STAX_YN
			, STTPYMT_RO_TYP_CCD
			, STTPYMTMETH_CCD
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.purc_cntr_info_uuid}
			, #{p.purc_cntr_uuid}
			, #{p.pymtmeth_ccd}
			, #{p.pymtmeth_expln}
			, #{p.pymtmeth_use_yn}
			, #{p.dlvymeth_ccd}
			, #{p.dlvymeth_expln}
			, #{p.dlvymeth_use_yn}
			, #{p.tax_typ_ccd}
		    , CAST(#{p.otrexp} AS FLOAT  )
			, #{p.otrexp_expln}
			, #{p.pymtmeth_cnd}
		    , CAST(#{p.dfrm_ro} AS FLOAT  )
			, #{p.cpgur_use_yn}
			, #{p.cpgur_typ_ccd}
		    , CAST(#{p.cpgur_ro} AS FLOAT  )
		    , CAST(#{p.cpgur_amt} AS FLOAT  )
			, #{p.cpgur_st_dt}
			, #{p.cpgur_exp_dt}
			, #{p.defpgur_use_yn}
			, #{p.defpgur_typ_ccd}
		    , CAST(#{p.defpgur_ro} AS FLOAT  )
		    , CAST(#{p.defpgur_amt} AS FLOAT  )
			, #{p.defpgur_pd_typ_ccd}
			, #{p.defpgur_pd}
			, #{p.apymtgur_use_yn}
			, #{p.apymtgur_typ_ccd}
			, CAST(#{p.apymtgur_ro} AS FLOAT  )
			, CAST(#{p.apymtgur_amt} AS FLOAT  )
			, #{p.apymtgur_st_dt}
			, #{p.apymtgur_exp_dt}
			, #{p.stax_yn}
			, #{p.sttpymt_ro_typ_ccd}
		    , #{p.sttpymtmeth_ccd}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updatePurcCntrInfo">
/* purc-contract-cnd.updatePurcCntrInfo */
		UPDATE PURC_CNTR_INFO
		   SET PYMTMETH_CCD       = #{p.pymtmeth_ccd}
		     , PYMTMETH_EXPLN     = #{p.pymtmeth_expln}
		     , PYMTMETH_USE_YN    = #{p.pymtmeth_use_yn}
		     , DLVYMETH_CCD       = #{p.dlvymeth_ccd}
		     , DLVYMETH_EXPLN     = #{p.dlvymeth_expln}
		     , DLVYMETH_USE_YN    = #{p.dlvymeth_use_yn}
		     , TAX_TYP_CCD        = #{p.tax_typ_ccd}
			 , OTREXP             = CAST(#{p.otrexp} AS FLOAT  )
		     , OTREXP_EXPLN       = #{p.otrexp_expln}
		     , PYMTMETH_CND       = #{p.pymtmeth_cnd}
			 , DFRM_RO            = CAST(#{p.dfrm_ro} AS FLOAT  )
		     , CPGUR_USE_YN       = #{p.cpgur_use_yn}
		     , CPGUR_TYP_CCD      = #{p.cpgur_typ_ccd}
			 , CPGUR_RO           = CAST(#{p.cpgur_ro} AS FLOAT  )
			 , CPGUR_AMT          = CAST(#{p.cpgur_amt} AS FLOAT  )
		     , CPGUR_ST_DT        = #{p.cpgur_st_dt}
		     , CPGUR_EXP_DT       = #{p.cpgur_exp_dt}
		     , DEFPGUR_USE_YN     = #{p.defpgur_use_yn}
		     , DEFPGUR_TYP_CCD    = #{p.defpgur_typ_ccd}
			 , DEFPGUR_RO         = CAST(#{p.defpgur_ro} AS FLOAT  )
			 , DEFPGUR_AMT        = CAST(#{p.defpgur_amt} AS FLOAT  )
		     , DEFPGUR_PD_TYP_CCD = #{p.defpgur_pd_typ_ccd}
		     , DEFPGUR_PD         = #{p.defpgur_pd}
		     , APYMTGUR_USE_YN    = #{p.apymtgur_use_yn}
		     , APYMTGUR_TYP_CCD   = #{p.apymtgur_typ_ccd}
			 , APYMTGUR_RO        = CAST(#{p.apymtgur_ro} AS FLOAT  )
			 , APYMTGUR_AMT       = CAST(#{p.apymtgur_amt} AS FLOAT  )
		     , APYMTGUR_ST_DT     = #{p.apymtgur_st_dt}
		     , APYMTGUR_EXP_DT    = #{p.apymtgur_exp_dt}
		     , STAX_YN            = #{p.stax_yn}
		     , STTPYMT_RO_TYP_CCD = #{p.sttpymt_ro_typ_ccd}
		     , STTPYMTMETH_CCD    = #{p.sttpymtmeth_ccd}
		     , MODR_ID            = #{g.username}
		     , MOD_DTTM           = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_INFO_UUID = #{p.purc_cntr_info_uuid}
	</update>
	<insert id="insertPurcCntr">
/* purc-contract-cnd.insertPurcCntr */
		INSERT INTO PURC_CNTR (
			TEN_ID
			, PURC_CNTR_UUID
			, OORG_CD
			, PURC_TYP_CCD
			, CND_TYP_CCD
			, DOMOVRS_DIV_CCD
			, VD_CD
			, CUR_CCD
			, CNTR_ST_DT
			, CNTR_EXP_DT
			, CNTR_AMT
			, SUP_AMT
			, VAT_AMT
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.purc_cntr_uuid}
			, #{p.oorg_cd}
			, #{p.purc_typ_ccd}
			, #{p.cnd_typ_ccd}
			, #{p.domovrs_div_ccd}
			, #{p.vd_cd}
			, #{p.cur_ccd}
			, #{p.cntr_st_dt}
			, #{p.cntr_exp_dt}
			, CAST(#{p.cntr_amt} AS FLOAT  )
			, CAST(#{p.sup_amt} AS FLOAT  )
			, CAST(#{p.vat_amt} AS FLOAT  )
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updatePurcCntr">
/* purc-contract-cnd.updatePurcCntr */
		UPDATE PURC_CNTR
		   SET OORG_CD = #{p.oorg_cd}
		     , PURC_TYP_CCD = #{p.purc_typ_ccd}
		     , VD_CD = #{p.vd_cd}
		     , CND_TYP_CCD = #{p.cnd_typ_ccd}
		     , DOMOVRS_DIV_CCD = #{p.domovrs_div_ccd}
		     , CUR_CCD = #{p.cur_ccd}
		     , CNTR_ST_DT = #{p.cntr_st_dt}
		     , CNTR_EXP_DT = #{p.cntr_exp_dt}
			 , CNTR_AMT = CAST(#{p.cntr_amt} AS FLOAT  )
			 , SUP_AMT = CAST(#{p.sup_amt} AS FLOAT  )
			 , VAT_AMT = CAST(#{p.vat_amt} AS FLOAT  )
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</update>
	<insert id="insertPurcCntrItem">
/* purc-contract-cnd.insertPurcCntrItem */
		INSERT INTO PURC_CNTR_ITEM (
			TEN_ID
			, PURC_CNTR_ITEM_UUID
			, PURC_CNTR_UUID
			, PLT_CD
			, ITEM_OORG_CD
			, ITEM_LNO
			, ITEM_CD
			, ITEM_NM
			, ITEM_NM_EN
			, ITEM_SPEC
			, ITEM_SPEC_DTL
			, ITEM_CD_CRN_TYP_CCD
			, UOM_CCD
			, ITEM_QTY
			, ITEM_UPRC
			, ITEM_AMT
			, DF_YN
			, REQ_DLVY_DT
			, DLVY_DT
			, CNTR_ST_DT
			, CNTR_EXP_DT
			, DLVY_PLC
			, PR_ITEM_UUID
			, PR_NO
			, PR_LNO
			, UPCR_ITEM_UUID
			, UPCR_NO
			, UPCR_LNO
			, RFX_ITEM_UUID
			, RFX_NO
			, RFX_RND
			, RFX_LNO
			, RFX_BID_ITEM_UUID
			, RFX_BID_UUID
			, RFX_BID_NO
			, REF_CNTR_UUID
			, REF_CNTR_NO
			, REF_CNTR_REVNO
			, REF_PURC_CNTR_UUID
			, REF_PURC_CNTR_INFO_UUID
			, REF_PURC_CNTR_ITEM_UUID
			, REF_PURC_CNTR_ITEM_LNO
			, DLVY_LDTM
			, MOQ
			, CTQ
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.purc_cntr_item_uuid}
			, #{p.purc_cntr_uuid}
			, #{p.plt_cd}
			, #{p.item_oorg_cd}
			, #{p.item_lno}
			, #{p.item_cd}
			, #{p.item_nm}
			, #{p.item_nm_en}
			, #{p.item_spec}
			, #{p.item_spec_dtl}
			, #{p.item_cd_crn_typ_ccd}
			, #{p.uom_ccd}
			, CAST(#{p.item_qty} AS FLOAT  )
			, CAST(#{p.item_uprc} AS FLOAT  )
			, CAST(#{p.item_amt} AS FLOAT  )
			, #{p.df_yn}
			, #{p.req_dlvy_dt}
			, #{p.dlvy_dt}
			, #{p.cntr_st_dt}
			, #{p.cntr_exp_dt}
			, #{p.dlvy_plc}
			, #{p.pr_item_uuid}
			, #{p.pr_no}
			, #{p.pr_lno}
			, #{p.upcr_item_uuid}
			, #{p.upcr_no}
			, #{p.upcr_lno}
			, #{p.rfx_item_uuid}
			, #{p.rfx_no}
			, CAST(#{p.rfx_rnd} AS FLOAT  )
			, #{p.rfx_lno}
			, #{p.rfx_bid_item_uuid}
			, #{p.rfx_bid_uuid}
			, #{p.rfx_bid_no}
			, #{p.ref_cntr_uuid}
			, #{p.ref_cntr_no}
			, CAST(#{p.ref_cntr_revno} AS FLOAT  )
			, #{p.ref_purc_cntr_uuid}
			, #{p.ref_purc_cntr_info_uuid}
			, #{p.ref_purc_cntr_item_uuid}
			, #{p.ref_purc_cntr_item_lno}
			, CAST(#{p.dlvy_ldtm} AS FLOAT  )
			, CAST(#{p.moq} AS FLOAT  )
			, CAST(#{p.ctq} AS FLOAT  )
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updatePurcCntrItem">
/* purc-contract-cnd.updatePurcCntrItems */
		UPDATE PURC_CNTR_ITEM
		   SET ITEM_OORG_CD = #{p.item_oorg_cd}
		     , PLT_CD = #{p.plt_cd}
		     , ITEM_CD_CRN_TYP_CCD = #{p.item_cd_crn_typ_ccd}
		     , ITEM_CD = #{p.item_cd}
		     , ITEM_NM = #{p.item_nm}
		     , ITEM_NM_EN = #{p.item_nm_en}
		     , ITEM_SPEC = #{p.item_spec}
		     , ITEM_SPEC_DTL = #{p.item_spec_dtl}
		     , UOM_CCD = #{p.uom_ccd}
			 , ITEM_QTY = CAST(#{p.item_qty} AS FLOAT  )
			 , ITEM_UPRC = CAST(#{p.item_uprc} AS FLOAT  )
			 , ITEM_AMT = CAST(#{p.item_amt} AS FLOAT  )
		     , DF_YN = #{p.df_yn}
		     , REQ_DLVY_DT = #{p.req_dlvy_dt}
		     , DLVY_DT = #{p.dlvy_dt}
		     , CNTR_ST_DT = #{p.cntr_st_dt}
		     , CNTR_EXP_DT = #{p.cntr_exp_dt}
		     , DLVY_PLC = #{p.dlvy_plc}
			 , DLVY_LDTM = CAST(#{p.dlvy_ldtm} AS FLOAT  )
			 , MOQ = CAST(#{p.moq} AS FLOAT  )
			 , CTQ = CAST(#{p.ctq} AS FLOAT  )
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_ITEM_UUID = #{p.purc_cntr_item_uuid}
	</update>
	<delete id="deletePurcCntrItem">
/* purc-contract-cnd.deletePurcCntrItem */
		DELETE PURC_CNTR_ITEM
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_ITEM_UUID = #{p.purc_cntr_item_uuid}
	</delete>
	<insert id="insertPurcCntrPymtExpt">
/* purc-contract-cnd.insertPurcCntrPymtExpt */
		INSERT INTO PURC_CNTR_PYMT_EXPT (
			TEN_ID
			, PURC_CNTR_PYMT_EXPT_UUID
			, PURC_CNTR_UUID
			, PYMT_TYP_CCD
			, PYMT_RO
			, PYMT_AMT
			, PYMT_EXPT_DT
			, PYMT_REVNO
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.purc_cntr_pymt_expt_uuid}
			, #{p.purc_cntr_uuid}
			, #{p.pymt_typ_ccd}
			, CAST(#{p.pymt_ro} AS FLOAT  )
			, CAST(#{p.pymt_amt} AS FLOAT  )
			, #{p.pymt_expt_dt}
			, CAST(#{p.pymt_revno} AS FLOAT  )
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<select id="calcSupplyAmountByItem" resultType="java.math.BigDecimal">
/* purc-contract-cnd.calcSupplyAmountByItem */
		SELECT CASE WHEN SUM(COALESCE(ITEM_AMT, 0)) IS NULL
		            THEN 0
		            ELSE SUM(COALESCE(ITEM_AMT, 0))
		        END
		  FROM PURC_CNTR_ITEM
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</select>
	<update id="updatePurcCntrAmt">
	/* purc-contract-cnd.updatePurcCntrAmt */
		UPDATE PURC_CNTR
		   SET CNTR_AMT = CAST(#{p.cntr_amt} AS FLOAT  )
			 , SUP_AMT = CAST(#{p.sup_amt} AS FLOAT  )
			 , VAT_AMT = CAST(#{p.vat_amt} AS FLOAT  )
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</update>
	<select id="findPurcCntr" resultType="map">
/* purc-contract-cnd.findPurcCntr */
		SELECT PURC_CNTR.PURC_CNTR_UUID
		     , PURC_CNTR.OORG_CD
		     , PURC_CNTR.PURC_TYP_CCD
		     , PURC_CNTR.VD_CD
		     , PURC_CNTR.CND_TYP_CCD
		     , VD.ERP_VD_CD
		     , CASE WHEN #{g.locale} = 'en_US' THEN VD.VD_NM_EN
		            ELSE VD.VD_NM
		        END AS DISP_VD_NM
		     , PURC_CNTR.CUR_CCD
		     , PURC_CNTR.CNTR_ST_DT
		     , PURC_CNTR.CNTR_EXP_DT
		     , PURC_CNTR.CNTR_AMT
		     , PURC_CNTR.SUP_AMT
		     , PURC_CNTR.VAT_AMT
		     , PURC_CNTR.DOMOVRS_DIV_CCD
		     , CASE WHEN (
		                  SELECT COUNT(1)
		                    FROM PURC_CNTR_ITEM
		                   WHERE PURC_CNTR_ITEM.TEN_ID   = PURC_CNTR.TEN_ID
		                     AND PURC_CNTR_ITEM.PURC_CNTR_UUID = PURC_CNTR.PURC_CNTR_UUID
		                     AND PURC_CNTR_ITEM.ITEM_CD_CRN_TYP_CCD = 'CDLS'
		                 ) &gt; 0 THEN 'Y'
		            ELSE 'N'
		        END AS HAS_NO_CD_ITEM    /* 무코드 품목 존재여부 */
		  FROM PURC_CNTR
		  LEFT OUTER JOIN VD
		    ON VD.TEN_ID = PURC_CNTR.TEN_ID
		   AND VD.VD_CD = PURC_CNTR.VD_CD
		 WHERE PURC_CNTR.TEN_ID = #{g.tenant}
		   AND PURC_CNTR.PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</select>
	<select id="findPurcCntrInfo" resultType="map">
/* purc-contract-cnd.findPurcCntrInfo */
		SELECT PURC_CNTR_INFO_UUID
		     , PURC_CNTR_UUID
		     , PYMTMETH_CCD
		     , PYMTMETH_EXPLN
		     , PYMTMETH_USE_YN
		     , DLVYMETH_CCD
		     , DLVYMETH_EXPLN
		     , DLVYMETH_USE_YN
		     , TAX_TYP_CCD
		     , OTREXP
		     , OTREXP_EXPLN
		     , PYMTMETH_CND
		     , DFRM_RO
		     , CPGUR_USE_YN
		     , CPGUR_TYP_CCD
		     , CPGUR_RO
		     , CPGUR_AMT
		     , CPGUR_ST_DT
		     , CPGUR_EXP_DT
		     , DEFPGUR_USE_YN
		     , DEFPGUR_TYP_CCD
		     , DEFPGUR_RO
		     , DEFPGUR_AMT
		     , DEFPGUR_PD_TYP_CCD
		     , DEFPGUR_PD
		     , APYMTGUR_USE_YN
		     , APYMTGUR_TYP_CCD
		     , APYMTGUR_RO
		     , APYMTGUR_AMT
		     , APYMTGUR_ST_DT
		     , APYMTGUR_EXP_DT
		     , STAX_YN
		     , STTPYMT_RO_TYP_CCD
		     , STTPYMTMETH_CCD
		  FROM PURC_CNTR_INFO
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</select>
	<select id="findListPurcCntrItem" resultType="map">
/* purc-contract-cnd.findListPurcCntrItem */
		SELECT PURC_CNTR_ITEM_UUID
		     , PURC_CNTR_UUID
		     , PLT_CD
		     , (
		        SELECT CASE WHEN 'en_US' = #{g.locale} THEN LOGIC_ORG.LOGIC_ORG_NM_EN
		                    ELSE LOGIC_ORG.LOGIC_ORG_NM
		                END
		          FROM LOGIC_ORG LOGIC_ORG
		         INNER JOIN OORG OORG
		            ON LOGIC_ORG.TEN_ID = OORG.TEN_ID
		           AND LOGIC_ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
		         WHERE LOGIC_ORG.TEN_ID = PURC_CNTR_ITEM.TEN_ID
		           AND LOGIC_ORG.ORG_CD = PURC_CNTR_ITEM.PLT_CD
		           AND OORG.OORG_CD = PURC_CNTR_ITEM.ITEM_OORG_CD
		       ) AS PLT_NM
		     , ITEM_OORG_CD
		     , ITEM_LNO
		     , ITEM_CD
		     , CASE WHEN ITEM_CD_CRN_TYP_CCD = 'CDLS' THEN NULL -- 구매품목유형: 미등록(무코드품목)
		            ELSE ITEM_CD
		        END AS DISP_ITEM_CD
		     , ITEM_NM
		     , ITEM_NM_EN
		     , CASE WHEN #{g.locale} = 'en_US' THEN ITEM_NM_EN
		            ELSE ITEM_NM
		        END AS DISP_ITEM_NM
		     , ITEM_SPEC
		     , ITEM_CD_CRN_TYP_CCD
		     , UOM_CCD
		     , ITEM_QTY
		     , ITEM_UPRC
		     , ITEM_AMT
		     , DF_YN
		     , REQ_DLVY_DT
		     , DLVY_DT
		     , CNTR_ST_DT
		     , CNTR_EXP_DT
		     , DLVY_PLC
		     , PR_ITEM_UUID
		     , PR_NO
		     , PR_LNO
		     , UPCR_ITEM_UUID
		     , UPCR_NO
		     , UPCR_LNO
		     , RFX_ITEM_UUID
		     , RFX_NO
		     , RFX_RND
		     , RFX_LNO
		     , RFX_BID_ITEM_UUID
		     , RFX_BID_UUID
		     , RFX_BID_NO
		     , REF_CNTR_UUID
		     , REF_CNTR_NO
		     , REF_CNTR_REVNO
		     , REF_PURC_CNTR_UUID
		     , REF_PURC_CNTR_INFO_UUID
		     , REF_PURC_CNTR_ITEM_UUID
		     , REF_PURC_CNTR_ITEM_LNO
		     , DLVY_LDTM
		     , MOQ
		     , CTQ
		  FROM PURC_CNTR_ITEM
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
		 ORDER BY ITEM_LNO
	</select>
	<select id="findListPurcCntrPymtExpt" resultType="map">
/* purc-contract-cnd.findListPurcCntrPymtExpt */
		SELECT PURC_CNTR_PYMT_EXPT_UUID
		     , PURC_CNTR_UUID
		     , PYMT_TYP_CCD
		     , PYMT_RO
		     , PYMT_AMT
		     , PYMT_EXPT_DT
		     , PYMT_REVNO
		  FROM PURC_CNTR_PYMT_EXPT
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
		 ORDER BY PYMT_REVNO
	</select>
	<delete id="deletePurcCntrPymtExptByPurcCntr">
/* purc-contract-cnd.deletePurcCntrPymtExptByPurcCntr */
		DELETE
		  FROM PURC_CNTR_PYMT_EXPT
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</delete>
	<delete id="deletePurcCntrItemByPurcCntr">
/* purc-contract-cnd.deletePurcCntrItemByPurcCntr */
		DELETE
		  FROM PURC_CNTR_ITEM
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</delete>
	<delete id="deletePurcCntrInfoByPurcCntr">
/* purc-contract-cnd.deletePurcCntrInfoByPurcCntr */
		DELETE
		  FROM PURC_CNTR_INFO
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</delete>
	<delete id="deletePurcCntr">
/* purc-contract-cnd.deletePurcCntr */
		DELETE
		  FROM PURC_CNTR
		 WHERE TEN_ID = #{g.tenant}
		   AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
	</delete>
	<insert id="insertCs">
/* purc-contract-cnd.insertCs */
		INSERT INTO PURC_CNTR_CSTM_VD (
			TEN_ID
			, PURC_CNTR_CSTM_VD_UUID
			, PURC_CNTR_UUID
			, VD_CD
			, REP_VD_CD
			, CSTM_TYP_CCD
			, INVT_RO
			, INVT_ALOT_CONT
			, REP_VD_YN
			, RMK
			, REGR_ID
			, REG_DTTM
		)
		VALUES (
			#{g.tenant}
			, #{p.purc_cntr_cstm_vd_uuid}
			, #{p.purc_cntr_uuid}
			, #{p.vd_cd}
			, #{p.rep_vd_cd}
			, #{p.cstm_typ_ccd}
			, CAST(#{p.invt_ro} AS FLOAT  )
			, #{p.invt_alot_cont}
			, #{p.rep_vd_yn}
			, #{p.rmk}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<select id="findListCstm" resultType="map">
/* purc-contract-cnd.findListCstm */
		SELECT T.VD_CD
		     , T.REP_VD_CD
		     , T.CSTM_TYP_CCD
		     , T.INVT_RO
		     , T.INVT_ALOT_CONT
		     , T.REP_VD_YN
		     , T.SORT_ORD
		  FROM (
		        SELECT VD_CD
		             , REP_VD_CD
		             , CSTM_TYP_CCD
		             , INVT_RO
		             , INVT_ALOT_CONT
		             , REP_VD_YN
		             , CASE WHEN REP_VD_YN = 'Y' THEN 1
		                    ELSE 2
		                END AS SORT_ORD
		          FROM PURC_CNTR_CSTM_VD
		         WHERE TEN_ID         = #{g.tenant}
		           AND PURC_CNTR_UUID = #{p.purc_cntr_uuid}
		       ) T
		 ORDER BY T.SORT_ORD
	</select>
</mapper>
