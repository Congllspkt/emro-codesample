<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="vendor-info">
	<select id="findListVdFatyInfo" resultType="map">
		/* vendor-info.findListVdFatyInfo : 협력사 공장정보 조회 */
		SELECT /*------------------- VD_FATY(협력사 공장정보) ------------------------------*/
			VDFT.TEN_ID          /* 시스템 아이디*/
		  , VDFT.VD_CD           /* 협력사 코드*/
		  , VDFT.VD_FATY_UUID    /* 공장 UUID*/
		  , VDFT.FATY_SEQNO      /* 공장순번*/
		  , VDFT.FATY_NM         /* 공장명*/
		  , VDFT.FATY_ESTD_DT    /* 공장 설립일*/
		  , VDFT.FATY_TEL        /* 공장 전화번호*/
		  , VDFT.FATY_ADDR       /* 공장 주소*/
		  , VDFT.RMK             /* 비고*/
		  , VDFT.REGR_ID         /* 등록자 아이디*/
		  , VDFT.REG_DTTM        /* 등록 일시*/
		  , VDFT.MODR_ID         /* 수정자 아이디*/
		  , VDFT.MOD_DTTM        /* 수정 일시*/
		  , US.USR_NM AS MODR_NM
		FROM VD_FATY VDFT        /* (협력사 공장정보)*/
		LEFT OUTER JOIN USR US
		ON US.TEN_ID = VDFT.TEN_ID
		AND US.USR_ID = VDFT.MODR_ID
		WHERE VDFT.TEN_ID  = #{g.tenant}
		AND VDFT.VD_CD   = #{p.vd_cd}
		ORDER BY VDFT.FATY_SEQNO
	</select>
	<select id="findVdFatyMaxSeq" resultType="int">
		/* vendor-info.findVdFatyMaxSeq : 공장정보 seq 조회*/
		SELECT CASE WHEN MAX(FATY_SEQNO) IS NULL THEN 1
		            ELSE MAX(FATY_SEQNO) + 1 END
		FROM VD_FATY
		WHERE TEN_ID  = #{g.tenant}
		  AND VD_CD = #{p.vd_cd}
	</select>
	<insert id="insertListVdFatyInfo">
		/* vendor-info.insertListVdFatyInfo : 협력사 공장정보 저장 */
		INSERT INTO VD_FATY (
			  TEN_ID            /* 시스템 아이디*/
			, VD_CD             /* 협력사 코드*/
			, VD_FATY_UUID
			, FATY_SEQNO        /* 공장 순번*/
			, FATY_NM           /* 공장명*/
			, FATY_ESTD_DT      /* 공장 설립일*/
			, FATY_TEL          /* 공장 전화번호*/
			, FATY_ADDR         /* 공장 주소 */
			, RMK               /* 비고*/
			, REGR_ID           /* 등록자 아이디*/
			, REG_DTTM          /* 등록 일시*/
			, MODR_ID           /* 수정자 아이디*/
			, MOD_DTTM          /* 수정 일시*/
		) VALUES (
			  #{g.tenant}       /* 시스템 아이디*/
			, #{p.vd_cd}        /* 협력사 코드*/
			, #{p.vd_faty_uuid}
			, #{p.faty_seqno}   /* 공장 순번*/
			, #{p.faty_nm}      /* 공장명*/
			, TO_DATE(#{p.faty_estd_dt}, 'YY-MM-DD') /* 공장 설립일*/  , #{p.faty_tel}     /* 공장 전화번호*/
			, #{p.faty_addr}    /* 공장주소*/
			, #{p.rmk}          /* 비고*/
			, #{g.username}     /* 등록자 아이디*/
			, #{g.now}          /* 등록 일시*/
			, #{g.username}     /* 수정자 아이디*/
			, #{g.now}          /* 수정 일시*/
		)
	</insert>
	<update id="updateListVdFatyInfo">
		/* vendor-info.updateListVdFatyInfo 공장정보 수정*/
		UPDATE VD_FATY
		SET FATY_TEL        = #{p.faty_tel}       /* 공장전화번호*/
		, FATY_ESTD_DT    = TO_DATE(#{p.faty_estd_dt}, 'YY-MM-DD')   /* 공장설립일*/  , FATY_ADDR       = #{p.faty_addr}      /* 공장주소*/
		  , MODR_ID         = #{g.username}       /* 수정자 아이디*/
		  , MOD_DTTM        = #{g.now}            /* 수정 일시*/
		WHERE TEN_ID        = #{g.tenant}
		  AND VD_CD         = #{p.vd_cd}
		  AND VD_FATY_UUID  = #{p.vd_faty_uuid}
	</update>
	<delete id="deleteListVdFatyInfo">
		/* vendor-info.deleteListVdFatyInfo 공장정보 삭제 */
		DELETE FROM VD_FATY
		WHERE  TEN_ID     = #{g.tenant}
		  AND  VD_CD      = #{p.vd_cd}
		  AND  VD_FATY_UUID = #{p.vd_faty_uuid}
	</delete>
	<select id="findListVdFacInfo" resultType="map">
		/* vendor-info.findListVdFacInfo 설비정보 조회*/
		SELECT /*------------------- VD_FAC(협력사 설비정보) ------------------------------*/
			VDFC.TEN_ID         /* 시스템 아이디*/
		  , VDFC.VD_FAC_UUID    /* 설비 UUID*/
		  , VDFC.FAC_SEQNO      /* 설비순번*/
		  , VDFC.FAC_NM         /* 설비명*/
		  , VDFC.FAC_QTY        /* 수량*/
		  , VDFC.MFGR_NM        /* 제조사*/
		  , VDFC.FAC_PURC_YYMM  /* 설비구매년월*/
		  , VDFC.RMK            /* 비고*/
		  , VDFC.REGR_ID        /* 등록자 아이디*/
		  , VDFC.REG_DTTM       /* 등록 일시*/
		  , VDFC.MODR_ID        /* 수정자 아이디*/
		  , VDFC.MOD_DTTM       /* 수정 일시*/
		  , US.USR_NM AS MODR_NM
		  , VDFT.FATY_NM        /* 공장명*/
		  , VDFT.VD_FATY_UUID   /* 공장 UUID*/
		  , VDFT.VD_CD
		FROM VD_FAC VDFC      /* (협력사 설비정보)*/
		LEFT OUTER JOIN USR US
		ON US.TEN_ID = VDFC.TEN_ID
		AND US.USR_ID = VDFC.MODR_ID
		LEFT OUTER JOIN VD_FATY VDFT
		ON VDFT.TEN_ID = VDFC.TEN_ID
		AND VDFT.VD_FATY_UUID = VDFC.VD_FATY_UUID
		WHERE VDFC.TEN_ID = #{g.tenant}
		AND VDFC.VD_FATY_UUID = #{p.vd_faty_uuid}
		ORDER BY VDFC.FAC_SEQNO
	</select>
	<insert id="insertListVdFacInfo">
		/* vendor-info.insertListVdFacInfo 설비정보 저장*/
		INSERT INTO VD_FAC(
		      TEN_ID           /* 시스템 아이디*/
		    , VD_FATY_UUID     /* 공장 UUID*/
		    , VD_FAC_UUID      /* 설비 UUID*/
		    , FAC_SEQNO        /* 설비 순번*/
		    , FAC_NM           /* 설비명*/
		    , FAC_QTY          /* 수량*/
		    , MFGR_NM          /* 제조사*/
		    , FAC_PURC_YYMM    /* 설비구매년월*/
		    , RMK              /* 비고*/
		    , REGR_ID          /* 등록자 아이디*/
		    , REG_DTTM         /* 등록 일시*/
		    , MODR_ID          /* 수정자 아이디*/
		    , MOD_DTTM         /* 수정 일시*/
		) VALUES (
		      #{g.tenant}      /* 시스템 아이디*/
		    , #{p.vd_faty_uuid}  /* 공장 UUID*/
		    , #{p.vd_fac_uuid}   /* 설비 UUID*/
		    , #{p.fac_seqno}   /* 설비 순번*/
		    , #{p.fac_nm}      /* 설비명*/
		    , #{p.fac_qty}     /* 수량*/
		    , #{p.mfgr_nm}     /* 제조사*/
		    , #{p.fac_purc_yymm} /* 설비구매년월*/
		    , #{p.rmk}         /* 비고*/
		    , #{g.username}    /* 등록자 아이디*/
		    , #{g.now}         /* 등록 일시*/
		    , #{g.username}    /* 수정자 아이디*/
		    , #{g.now}         /* 수정 일시*/
		)
	</insert>
	<update id="updateListVdFacInfo">
		/* vendor-info.updateListVdFacInfo 설비정보 수정*/
		UPDATE VD_FAC
		SET FAC_NM         = #{p.fac_nm}        /* 설비명*/
		  , FAC_QTY        = #{p.fac_qty}       /* 수량*/
		  , MFGR_NM        = #{p.mfgr_nm}       /* 제조사*/
		  , FAC_PURC_YYMM  = #{p.fac_purc_yymm} /* 설비구매년월*/
		  , MODR_ID        = #{g.username}      /* 수정자 아이디*/
		  , MOD_DTTM       = #{g.now}           /* 수정 일시*/
		WHERE TEN_ID       = #{g.tenant}
		  AND VD_FATY_UUID = #{p.vd_faty_uuid}
		  AND VD_FAC_UUID  = #{p.vd_fac_uuid}
	</update>
	<delete id="deleteListVdFacInfo">
		/* vendor-info.deleteListVdFacInfo 설비정보 삭제 */
		DELETE FROM VD_FAC
		WHERE TEN_ID       = #{g.tenant}
		  AND VD_FATY_UUID = #{p.vd_faty_uuid}
		  AND VD_FAC_UUID  = #{p.vd_fac_uuid}
	</delete>
	<delete id="deleteListVdFacInfoByFatyUuid">
		/* vendor-info.deleteListVdFacInfoByFatyUuid 공장삭제시 하위 설비정보 삭제 */
		DELETE FROM VD_FAC
		WHERE TEN_ID   = #{g.tenant}
		  AND VD_FATY_UUID = #{p.vd_faty_uuid}
	</delete>
	<select id="findVdFacMaxSeq" resultType="int">
		/* vendor-info.findVdFacMaxSeq : 설비정보 seq 조회 */
		SELECT CASE WHEN MAX(FAC_SEQNO) IS NULL THEN 1
		            ELSE MAX(FAC_SEQNO) + 1
			       END
		FROM VD_FAC
		WHERE TEN_ID  = #{g.tenant}
		  AND VD_FATY_UUID  = #{p.vd_faty_uuid}
	</select>
	<select id="findVdInviteMailList" resultType="map">
	/* vendor-info.findVdInviteMailList 협력사 초청메일 목록 조회 */
		SELECT VI.TEN_ID
		     , VI.VD_INVI_UUID
			 , VI.VD_NM
			 , VI.BIZREGNO
			 , VI.VD_EML
			 , VI.INVI_TIT
			 , VI.INVI_CONT
			 , VI.INVI_PIC_ID
			 , VI.INVI_DTTM
			 , VI.STS
			 , VI.RMK
			 , VI.REGR_ID
			 , VI.REG_DTTM
			 , VI.MODR_ID
			 , VI.MOD_DTTM
			 , CASE WHEN #{g.locale} = 'ko_KR' THEN US.USR_NM
			        ELSE COALESCE(US.USR_NM_EN, US.USR_NM) END AS INVI_PIC_NM
		  FROM VD_INVI VI
		  LEFT OUTER JOIN USR US
		    ON US.TEN_ID = VI.TEN_ID
		   AND US.USR_ID = VI.INVI_PIC_ID
		   AND US.STS != 'D'
		 WHERE VI.TEN_ID = #{g.tenant}
		 <if test="p.vd_nm != null and p.vd_nm != ''">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
		   AND UPPER(VI.VD_NM) LIKE UPPER(#{p_vd_nm})
		</if>
		<if test="p.bizregno != null and p.bizregno != ''">
		   <bind name="p_bizregno" value="'%' + p.bizregno + '%'"/>
		   AND VI.BIZREGNO LIKE #{p_bizregno}
		</if>
		 ORDER BY VI.REG_DTTM DESC
	</select>
	<select id="checkDuplicatedVdInfo" resultType="map">
	/* vendor-info.checkDuplicatedVdInfo 중복체크 */
		SELECT VD.VD_CD                   /* 협력사 코드 */
		     , VD.ERP_VD_CD               /* ERP 코드 */
		     , VD.VD_NM                   /* 협력사 명 */
		     , VD.VD_NM_EN               /* 협력사 영문 명 */
		     , VD.CEO_NM                  /* 대표 명 */
			 , VD.CEO_NM_EN               /* 대표 영문 명 */
			 , VD.BIZREGNO              /* 사업자 등록 번호 */
			 , VD.CORPNO             /* 법인 등록 번호 */
			 , VD.TAX_ID                  /* TAX NO */
			 , VD.EU_VAT_REG_ID		/* EU VAT REG NO */
			 , US.USR_ID
		  FROM VD VD
		 INNER JOIN USR US
			ON ( US.TEN_ID = VD.TEN_ID
	          AND US.VD_CD = VD.VD_CD )
		<trim prefix="WHERE" prefixOverrides="OR">
			<if test="p.bizregno != null and p.bizregno != ''">
				<bind name="namePattern1" value="'%' + p.bizregno + '%'"/>
				UPPER(VD.BIZREGNO) LIKE UPPER(#{namePattern1})
			</if>
			<if test="p.tax_id != null and p.tax_id != ''">
				<bind name="namePattern2" value="'%' + p.tax_id + '%'"/>
				OR  UPPER(VD.TAX_ID) LIKE UPPER(#{namePattern2})
			</if>
			<if test="p.eu_vat_reg_id != null and p.eu_vat_reg_id != ''">
				<bind name="namePattern3" value="'%' + p.eu_vat_reg_id + '%'"/>
				OR  UPPER(VD.EU_VAT_REG_ID) LIKE UPPER(#{namePattern3})
			</if>
		</trim>
		ORDER BY US.USR_ID
	</select>
	<select id="findVdInviteMailInfo" resultType="map">
	/* vendorInfoMgt.findVdInviteMailInfo 협력사 초청메일 정보 조회 */
		SELECT VI.TEN_ID
			 , VI.VD_INVI_UUID
			 , VI.VD_NM
			 , VI.BIZREGNO
			 , VI.VD_EML
			 , VI.INVI_TIT
			 , VI.INVI_CONT
			 , VI.INVI_PIC_ID
			 , VI.INVI_DTTM
			 , US.USR_NM AS INVI_PIC_NM  /* 발신자 */
			 , US.EML AS INVI_PIC_EML    /* 발신자 이메일 */
		  FROM VD_INVI VI
	      LEFT OUTER JOIN USR US
	        ON US.TEN_ID = VI.TEN_ID
	       AND US.USR_ID = VI.INVI_PIC_ID
           AND US.STS != 'D'
		 WHERE VI.TEN_ID = #{g.tenant}
		   AND VI.VD_INVI_UUID = #{p.vd_invi_uuid}
	</select>
	<insert id="insertVendorInviteMail">
	/* vendor-info.insertVendorInviteMail : 협력사 초청메일 정보 저장 */
		INSERT INTO VD_INVI (
			TEN_ID
			, VD_INVI_UUID
			, VD_NM
			, BIZREGNO
			, VD_EML
			, INVI_TIT
			, INVI_CONT
			, INVI_PIC_ID
			, INVI_DTTM
			, STS
			, RMK
			, REGR_ID              /*등록자 아이디*/
			, REG_DTTM              /*등록 일시*/
			, MODR_ID              /*수정자 아이디*/
			, MOD_DTTM              /*수정 일시*/
		) VALUES (
		    #{g.tenant}
		    , #{p.vd_invi_uuid}
		    , #{p.vd_nm}
		    , #{p.bizregno}
		    , #{p.vd_eml}
		    , #{p.invi_tit}
		    , #{p.invi_cont}
		    , #{p.invi_pic_id}
		    , #{g.now}
		    , 'C'
		    , #{p.rmk}
		    , #{g.username}       /*등록자 아이디*/
		    , #{g.now}            /*등록 일시*/
		    , #{g.username}       /*수정자 아이디*/
		    , #{g.now}            /*수정 일시*/
		)
	</insert>
	<select id="findListVendorInviteValidate" resultType="map">
	/* vendor-info.findListVendorInviteValidate : 협력사 초청메일 정보 조회 */
		SELECT TEMP_TBL.TEN_ID
		     , TEMP_TBL.TASK_ID   AS BIZREGNO
		     , CASE WHEN EXISTS (SELECT 1
								   FROM VD
								  WHERE VD.TEN_ID = TEMP_TBL.TEN_ID
									AND VD.BIZREGNO = TEMP_TBL.TASK_ID) THEN 'N' ELSE 'Y' END VALID_YN
		  FROM TEMP_TBL
	     WHERE TEMP_TBL.USR_ID = #{g.username}
	</select>
	<resultMap id="financeVendorInfoMap" type="java.util.HashMap">
		<id column="TEN_ID" property="ten_id"/>
		<id column="SUBJ_YR" property="subj_yr"/>
		<id column="REGR_TYP_CCD" property="regr_typ_ccd"/>
		<id column="REGR_TYP_CCD_NM" property="regr_typ_ccd_nm"/>
		<id column="VD_CD" property="vd_cd"/>
		<id column="ERP_VD_CD" property="erp_vd_cd"/>
		<id column="VD_NM" property="vd_nm"/>
		<id column="BIZREGNO" property="bizregno"/>
		<id column="MOD_DTTM" property="mod_dttm"/>
		<id column="MOD_NM" property="mod_nm"/>
        <collection javaType="java.util.ArrayList" property="cls" resultMap="fnAcctTypMap"/>
    </resultMap>
    <resultMap id="fnAcctTypMap" type="java.util.HashMap">
		<id column="SUBJ_YR" property="subj_yr"/>
		<id column="VD_CD" property="vd_cd"/>
		<id column="FN_ACCT_TYP_CCD" property="fn_acct_typ_ccd"/>
		<result column="FN_ACCT_TYP_VAL" property="fn_acct_typ_val"/>
    </resultMap>
	<select id="findListVendorFinance" resultMap="financeVendorInfoMap">
	/* vendor-info.findListVendorFinance : 협력사 재무정보 조회 */
		SELECT VDFN.TEN_ID         /* 테넌트 아이디*/
			 , VDFN.VD_CD          /* 협력사 코드*/
			 , VD.ERP_VD_CD        /* ERP 협력사 코드*/
			 , VDFN.SUBJ_YR         /* 대상 년도 */
			 , VDFN.REGR_TYP_CCD    /* 등록자 유형 공통코드 */
			 , VDFN.FN_ACCT_TYP_CCD /* 재무 계정 유형 공통코드 */
			 , VDFN.FN_ACCT_TYP_VAL /* 재무 계정 유형 값 */
			 , VDFN.MODR_ID         /* 수정자 아이디*/
			, VDFN.MOD_DTTM        /* 수정 일시*/  , CASE WHEN #{g.locale} = 'ko_KR' THEN US.USR_NM
		     		ELSE COALESCE(US.USR_NM_EN, US.USR_NM) END MOD_NM
			 , CASE WHEN #{g.locale} = 'ko_KR' THEN VD.VD_NM
			        ELSE COALESCE(VD.VD_NM_EN, VD.VD_NM) END VD_NM      /* 협력사 명*/
			 , CASE WHEN VD.CTRY_CCD = 'KR' THEN VD.BIZREGNO
			        WHEN VD.CTRY_CCD = 'CN' THEN VD.TAX_ID
			        WHEN (SELECT COUNT(*)
			                FROM DTLCD
						   WHERE TEN_ID = VD.TEN_ID
							 AND CCD = 'C008'
							 AND DTLCD = VD.CTRY_CCD) &gt; 0 THEN VD.EU_VAT_REG_ID
					ELSE VD.TAX_ID END BIZREGNO
			 , (SELECT DM.DTLCD_NM
			      FROM DTLCD DTLCD
			     INNER JOIN DTLCD_MULTLANG DM
			        ON DTLCD.TEN_ID = DM.TEN_ID
			       AND DTLCD.CCD = DM.CCD
			       AND DTLCD.DTLCD = DM.DTLCD
			       AND DM.LANG_CCD = #{g.locale}
			       AND DM.STS != 'D'
			     WHERE DTLCD.TEN_ID = VDFN.TEN_ID
			       AND DTLCD.CCD = 'E040'
			       AND DTLCD.DTLCD = VDFN.REGR_TYP_CCD
			       AND DTLCD.USE_YN = 'Y'
			       AND DTLCD.STS != 'D') AS REGR_TYP_CCD_NM
		  FROM VD_FN VDFN           /* (협력사 재무정보) */
		  <if test="p.fn_acct_typ_ccd != null and p.fn_acct_typ_ccd != ''">
		      INNER JOIN (SELECT VD_CD, SUBJ_YR, REGR_TYP_CCD
		                  FROM VD_FN
		                  WHERE UPPER(FN_ACCT_TYP_CCD) = UPPER(#{p.fn_acct_typ_ccd})
		                      AND FN_ACCT_TYP_VAL IS NOT NULL  /* 특정 재무 계정 유형 검색 시 해당 재무 계정 유형의 값이 존재하는 것만 조회한다. */  ) VDFN_KEY
		          ON VDFN.VD_CD = VDFN_KEY.VD_CD
		          AND VDFN.SUBJ_YR = VDFN_KEY.SUBJ_YR
		          AND VDFN.REGR_TYP_CCD = VDFN_KEY.REGR_TYP_CCD
		  </if>
		 INNER JOIN VD VD ON VDFN.TEN_ID = VD.TEN_ID AND VDFN.VD_CD = VD.VD_CD AND VD.STS != 'D'
		  LEFT OUTER JOIN USR US ON US.TEN_ID = VDFN.TEN_ID AND US.USR_ID = VDFN.MODR_ID
		 WHERE VDFN.TEN_ID          = #{g.tenant}
		  <if test="p.vd_cd != null and p.vd_cd != ''">
			 <bind name="vdCodePattern" value="'%' + p.vd_cd + '%'"/>
			AND UPPER(VDFN.VD_CD) LIKE UPPER(#{vdCodePattern})
		  </if>
		  <if test="p.subj_yr != null and p.subj_yr != ''">
			AND VDFN.SUBJ_YR          = CAST(#{p.subj_yr} AS VARCHAR(4))
		  </if>
		  <if test="p.erp_vd_cd != null and p.erp_vd_cd != ''">
			 <bind name="erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
			 AND UPPER(VD.ERP_VD_CD) LIKE UPPER(#{erp_vd_cd})      /* 협력사명 검색조건*/
		 </if>
		 <if test="p.vd_nm != null and p.vd_nm != ''">
			 <bind name="vd_nm" value="'%' + p.vd_nm + '%'"/>
			 AND (UPPER(VD.VD_NM) LIKE UPPER(#{vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{vd_nm}))      /* 협력사명 검색조건*/
		 </if>
		 <if test="p.regr_typ_ccd != null and p.regr_typ_ccd != ''">
			 AND UPPER(VDFN.REGR_TYP_CCD) = UPPER(#{p.regr_typ_ccd})
		 </if>
		     AND VDFN.STS != 'D'
		 ORDER BY CAST(VDFN.SUBJ_YR AS INTEGER) DESC, VDFN.VD_CD
	</select>
	<select id="findListCertManager" resultType="map">
	/* vendor-info.findListCertManager : 인증서 리스트 조회 */
		SELECT VDCM.TEN_ID           /* 시스템 아이디 */
		     , VDCM.CERT_ID          /* 인증 아이디 */
		     , VDCM.VD_CD            /* 협력사 코드 */
			 , CASE WHEN 'ko_KR' = #{g.locale} THEN VD.VD_NM
			        ELSE COALESCE(VD.VD_NM_EN, VD.VD_NM) END AS VD_NM /* 협력사 명 */
		     , VDCM.CERT_DM_NM       /* 인증서 도메인 명 */
		     , VDCM.CERT_SEQNO       /* 인증서 일련번호 */
		     , VDCM.CERT_ST_DATE     /* 인증서 시작 일자 */
		     , VDCM.CERT_ED_DATE     /* 인증서 종료 일자 */
		     , VDCM.STS              /* 상태 */
		     , VDCM.REGR_ID          /* 등록자 아이디 */
		     , VDCM.REG_DTTM         /* 등록 일시 */
		     , VDCM.MODR_ID          /* 수정자 아이디 */
		     , VDCM.MOD_DTTM         /* 수정 일시 */
		  FROM VD_CERT_MGMT VDCM
		 INNER JOIN VD VD
		    ON VDCM.TEN_ID = VD.TEN_ID
		   AND VDCM.VD_CD  = VD.VD_CD
		 WHERE VDCM.TEN_ID = #{g.tenant}
		<if test="p.vd_cd != null and p.vd_cd != ''">
			<bind name="vdCdPattern" value="'%' + p.vd_cd + '%'"/>
			AND UPPER(VDCM.VD_CD) LIKE UPPER(#{vdCdPattern})
		</if>
		<if test="p.vd_nm != null and p.vd_nm != ''">
			<bind name="vdNmPattern" value="'%' + p.vd_nm + '%'"/>
			AND (UPPER(VD.VD_NM) LIKE UPPER(#{vdNmPattern}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{vdNmPattern}))      /* 협력사명 검색조건*/
		</if>
		<if test="p.valid_yn != null and p.valid_yn eq 'Y'.toString()">
			AND VDCM.STS = 'C'
		</if>
		ORDER BY VDCM.VD_CD, VDCM.CERT_ED_DATE DESC
	</select>
	<select id="findListVdFatyFac" resultType="map">
	/* vendor-info.findListVdFatyFac: 공장정보 및 설비정보를 조회 */
		SELECT VDFT.TEN_ID
		     , VDFT.VD_FATY_UUID
			 , VDFC.VD_FAC_UUID
		     , VDFT.VD_CD
			 , VDFT.FATY_SEQNO
			 , VDFT.FATY_NM
			 , VDFT.FATY_ESTD_DT
		     , VDFT.FATY_TEL
		     , VDFT.FATY_ADDR
		     , VDFC.FAC_SEQNO
		     , VDFC.FAC_NM
		     , VDFC.FAC_QTY
		     , VDFC.MFGR_NM
		     , VDFC.FAC_PURC_YYMM
		     , CASE WHEN #{g.locale} = 'ko_KR' THEN VD.VD_NM
		            ELSE COALESCE(VD.VD_NM_EN, VD.VD_NM) END VD_NM
			 , VD.ERP_VD_CD
		  FROM VD_FATY VDFT
		  LEFT OUTER JOIN VD_FAC VDFC
		    ON VDFT.TEN_ID = VDFC.TEN_ID
		   AND VDFT.VD_FATY_UUID = VDFC.VD_FATY_UUID
		  LEFT OUTER JOIN VD VD
		    ON VDFT.TEN_ID = VD.TEN_ID
		   AND VDFT.VD_CD = VD.VD_CD
		 WHERE VDFT.TEN_ID = #{g.tenant}
		<if test="p.erp_vd_cd != null and p.erp_vd_cd != ''">
			<bind name="erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
			AND UPPER(VD.ERP_VD_CD) LIKE UPPER(#{erp_vd_cd})      /* 협력사명 검색조건*/
		</if>
		<if test="p.vd_nm != null and p.vd_nm != ''">
			<bind name="vd_nm" value="'%' + p.vd_nm + '%'"/>
			AND (UPPER(VD.VD_NM) LIKE UPPER(#{vd_nm}) OR UPPER(VD.VD_NM_EN) LIKE UPPER(#{vd_nm}))      /* 협력사명 검색조건*/
		</if>
		<if test="p.faty_nm != null and p.faty_nm != ''">
			<bind name="faty_nm" value="'%' + p.faty_nm + '%'"/>
			AND UPPER(VDFT.FATY_NM) LIKE UPPER(#{faty_nm})      /* 공장명 검색조건*/
		</if>
		<if test="p.fac_nm != null and p.fac_nm != ''">
			<bind name="fac_nm" value="'%' + p.fac_nm + '%'"/>
			AND UPPER(VDFC.FAC_NM) LIKE UPPER(#{fac_nm})  /* 설비명 검색조건*/
		</if>
		<if test="p.faty_addr != null and p.faty_addr != ''">
			<bind name="faty_addr" value="'%' + p.faty_addr + '%'"/>
			AND UPPER(VDFT.FATY_ADDR) LIKE UPPER(#{faty_addr})  /* 공장주소 검색조건*/
		</if>
		<if test="p.mfgr_nm != null and p.mfgr_nm != ''">
			<bind name="mfgr_nm" value="'%' + p.mfgr_nm + '%'"/>
			AND UPPER(VDFC.MFGR_NM) LIKE UPPER(#{mfgr_nm})        /* 제조사명 검색조건*/
		</if>
		ORDER BY VD.ERP_VD_CD, VDFT.FATY_SEQNO, VDFC.FAC_SEQNO
	</select>
	<resultMap id="financeInfoMap" type="java.util.HashMap">
		<id column="TEN_ID" property="ten_id"/>
		<id column="SUBJ_YR" property="subj_yr"/>
		<id column="REGR_TYP_CCD" property="regr_typ_ccd"/>
		<id column="REGR_TYP_CCD_NM" property="regr_typ_ccd_nm"/>
        <collection javaType="java.util.ArrayList" property="cls" resultMap="fnAcctMap"/>
    </resultMap>
    <resultMap id="fnAcctMap" type="java.util.HashMap">
		<id column="SUBJ_YR" property="subj_yr"/>
		<id column="VD_CD" property="vd_cd"/>
		<id column="FN_ACCT_TYP_CCD" property="fn_acct_typ_ccd"/>
		<result column="FN_ACCT_TYP_VAL" property="fn_acct_typ_val"/>
    </resultMap>
	<select id="findListFinanceInfo" resultMap="financeInfoMap">
	/* vendor-info.findListFinanceInfo : 협력사 재무정보 조회 */
		SELECT VDFN.TEN_ID
		     , MAX(VDFN.VD_FN_UUID) AS VD_FN_UUID
		     , VDFN.VD_CD
		     , VDFN.SUBJ_YR
		     , VDFN.REGR_TYP_CCD
			 , (SELECT DM.DTLCD_NM
			      FROM DTLCD DTLCD
			     INNER JOIN DTLCD_MULTLANG DM
			        ON DTLCD.TEN_ID = DM.TEN_ID
			       AND DTLCD.CCD = DM.CCD
			       AND DTLCD.DTLCD = DM.DTLCD
			       AND DM.LANG_CCD = #{g.locale}
			       AND DM.STS != 'D'
			     WHERE DTLCD.TEN_ID = VDFN.TEN_ID
			       AND DTLCD.CCD = 'E040'
			       AND DTLCD.DTLCD = VDFN.REGR_TYP_CCD
			       AND DTLCD.USE_YN = 'Y'
			       AND DTLCD.STS != 'D') AS REGR_TYP_CCD_NM
		     , VDFN.FN_ACCT_TYP_CCD
		     , VDFN.FN_ACCT_TYP_VAL
		  FROM VD_FN VDFN         /* (협력사 재무정보)*/
		 WHERE VDFN.TEN_ID          = #{g.tenant}
		   AND VDFN.VD_CD           = #{p.vd_cd}
		   AND VDFN.STS            != 'D'
		 GROUP BY VDFN.TEN_ID, VDFN.VD_CD, VDFN.SUBJ_YR, VDFN.REGR_TYP_CCD, VDFN.FN_ACCT_TYP_CCD, VDFN.FN_ACCT_TYP_VAL
		 ORDER BY CAST(VDFN.SUBJ_YR AS INTEGER) DESC
	</select>
	<insert id="insertListFinanceInfo">
	/* vendor-info.insertListFinanceInfo : 협력사 재무정보 저장 */
		INSERT INTO VD_FN (
			TEN_ID
			, VD_FN_UUID
			, VD_CD
			, SUBJ_YR
			, REGR_TYP_CCD
			, FN_ACCT_TYP_CCD
			, FN_ACCT_TYP_VAL
			, STS
			, RMK
			, REGR_ID
			, REG_DTTM
			, MODR_ID
			, MOD_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.vd_fn_uuid}
			, #{p.vd_cd}
			, #{p.subj_yr}
			, #{p.regr_typ_ccd}
			, #{p.fn_acct_typ_ccd}
			, #{p.fn_acct_typ_val}
			, 'C'
			, #{p.rmk}
			, #{g.username}
			, #{g.now}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateListFinanceInfo">
	/* vendor-info.updateListFinanceInfo : 협력사 재무정보 수정 */
		UPDATE VD_FN
		   SET SUBJ_YR         = CAST(#{p.subj_yr} AS VARCHAR(4))
			 , FN_ACCT_TYP_VAL = #{p.fn_acct_typ_val}
			 , STS             = 'U'
			 , MODR_ID         = #{g.username}
			 , MOD_DTTM        = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND SUBJ_YR         = #{p.subj_yr}
		   AND REGR_TYP_CCD    = #{p.regr_typ_ccd}
		   AND FN_ACCT_TYP_CCD = #{p.fn_acct_typ_ccd}
		   AND VD_CD           = #{p.vd_cd}
	</update>
	<delete id="deleteFinanceInfo">
	/* vendor-info.deleteFinanceInfo 재무정보 삭제 */
		DELETE FROM VD_FN
		 WHERE TEN_ID       = #{g.tenant}
		   AND SUBJ_YR      = #{p.subj_yr}
		   AND REGR_TYP_CCD = #{p.regr_typ_ccd}
		   AND VD_CD        = #{p.vd_cd}
	</delete>
	<resultMap id="laborInfoMap" type="java.util.HashMap">
		<id column="TEN_ID" property="ten_id"/>
		<id column="EMP_ID" property="emp_id"/>
		<id column="SUBJ_YR" property="subj_yr"/>
		<result column="OPER_ORG_CD" property="oper_org_cd"/>
		<result column="PAY_TERMS_CD" property="pay_terms_cd"/>
		<result column="PAY_TERMS_DESC" property="pay_terms_desc"/>
		<result column="DELY_TERMS_CD" property="dely_terms_cd"/>
		<result column="DELY_TERMS_DESC" property="dely_terms_desc"/>
		<result column="PAY_TERMS_YN" property="pay_terms_yn"/>
		<result column="DELY_TERMS_YN" property="dely_terms_yn"/>
        <collection javaType="java.util.ArrayList" property="cls" resultMap="clsMap"/>
    </resultMap>
    <resultMap id="clsMap" type="java.util.HashMap">
		<id column="SUBJ_YR" property="subj_yr"/>
		<id column="VD_CD" property="vd_cd"/>
		<id column="EMP_TYP_CCD" property="emp_typ_ccd"/>
		<result column="EMP_NUMC" property="emp_numc"/>
    </resultMap>
	<select id="findListLaborInfo" resultMap="laborInfoMap">
	/* vendor-info.findListLaborInfo : 협력사 직원 조회 */
		SELECT VDET.TEN_ID
			 , MAX(VDET.VD_EMP_CURSITU_UUID) AS VD_EMP_CURSITU_UUID
			 , VDET.VD_CD
			 , VDET.SUBJ_YR
			 , VDET.EMP_TYP_CCD
			 , VDET.EMP_NUMC
		  FROM VD_EMP_CURSITU VDET
		 WHERE VDET.TEN_ID          = #{g.tenant}
		   AND VDET.VD_CD           = #{p.vd_cd}
		   AND VDET.STS             != 'D'
		 GROUP BY VDET.TEN_ID, VDET.VD_CD, VDET.SUBJ_YR, VDET.EMP_TYP_CCD, VDET.EMP_NUMC
		 ORDER BY SUBJ_YR DESC
	</select>
	<insert id="insertListLaborInfo">
	/* vendor-info.insertListLaborInfo : 협력사 직원 저장 */
		INSERT INTO VD_EMP_CURSITU(
			TEN_ID
			, VD_EMP_CURSITU_UUID
			, VD_CD
			, SUBJ_YR
			, EMP_TYP_CCD
			, EMP_NUMC
			, STS
			, RMK
			, REGR_ID
			, REG_DTTM
			, MODR_ID
			, MOD_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.vd_emp_cursitu_uuid}
			, #{p.vd_cd}
			, CAST(#{p.subj_yr} AS VARCHAR(4))
			, #{p.emp_typ_ccd}
			, #{p.emp_numc}
			, 'C'
			, #{p.rmk}
			, #{g.username}
			, #{g.now}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateListLaborInfo">
	/* vendor-info.updateListLaborInfo : 협력사 직원 수정*/
		UPDATE VD_EMP_CURSITU
		   SET EMP_NUMC        = #{p.emp_numc}
		     , STS             = 'U'
			 , MODR_ID         = #{g.username}
			 , MOD_DTTM        = #{g.now}
		 WHERE TEN_ID          = #{g.tenant}
		   AND VD_CD           = #{p.vd_cd}
		   AND SUBJ_YR         = CAST(#{p.subj_yr} AS VARCHAR(4))
		   AND EMP_TYP_CCD     = #{p.emp_typ_ccd}
	</update>
	<delete id="deleteLaborInfo">
	/* vendor-info.deleteLaborInfo : 협력사 직원 삭제 */
		DELETE FROM VD_EMP_CURSITU
		 WHERE TEN_ID  = #{g.tenant}
		   AND VD_CD   = #{p.vd_cd}
		   AND SUBJ_YR = #{p.subj_yr}
	</delete>
	<select id="findListCertInfo" resultType="map">
	/* vendor-info.findListCertInfo : 협력사 인증정보 조회 */
		SELECT VDCT.TEN_ID
			 , VDCT.VD_CERT_UUID
			 , VDCT.VD_CD
			 , VDCT.CERT_TYP_CCD
			 , VDCT.CERT_NO
		     , VDCT.ATHG_UUID
			 , ( SELECT COUNT(1)
			       FROM ATHF
			      WHERE TEN_ID = VDCT.TEN_ID
			        AND ATHG_UUID = VDCT.ATHG_UUID
			        AND STS != 'D' ) AS ATT_COUNT
			 , VDCT.CERT_PUBL_DT
			 , VDCT.CERT_PUBL_INSTN_NM
			 , VDCT.CERT_EFCT_ST_DT
			 , VDCT.CERT_EFCT_EXP_DT
			 , VDCT.STS
			 , VDCT.RMK
			 , VDCT.REGR_ID
			 , VDCT.REG_DTTM
			 , VDCT.MODR_ID
			 , VDCT.MOD_DTTM
		  FROM VD_CERT VDCT
		 WHERE VDCT.TEN_ID          = #{g.tenant}
		   AND VDCT.VD_CD           = #{p.vd_cd}
		   AND VDCT.STS             != 'D'
	</select>
	<insert id="insertListCertInfo">
	/* vendor-info.insertListCertInfo 협력사 인증정보 저장 */
		INSERT INTO VD_CERT (
			TEN_ID
			, VD_CERT_UUID
			, VD_CD
			, CERT_TYP_CCD
			, CERT_NO
			, ATHG_UUID
			, CERT_PUBL_DT
			, CERT_PUBL_INSTN_NM
			, CERT_EFCT_ST_DT
			, CERT_EFCT_EXP_DT
			, STS
			, RMK
			, REGR_ID
			, REG_DTTM
			, MODR_ID
			, MOD_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.vd_cert_uuid}
            , #{p.vd_cd}
            , #{p.cert_typ_ccd}
            , #{p.cert_no}
            , #{p.athg_uuid}
            , #{p.cert_publ_dt}
            , #{p.cert_publ_instn_nm}
            , #{p.cert_efct_st_dt}
            , #{p.cert_efct_exp_dt}
			, 'C'                /* 상태*/
			, #{p.rmk}           /* 비고*/
			, #{g.username}      /* 등록자 아이디*/
			, #{g.now}           /* 등록 일시*/
			, #{g.username}      /* 수정자 아이디*/
			, #{g.now}            /* 수정 일시*/
		)
	</insert>
	<update id="updateListCertInfo">
	/* vendor-info.updateListCertInfo 협력사 인증정보 수정*/
		UPDATE VD_CERT
		   SET CERT_TYP_CCD          = #{p.cert_typ_ccd}            /* 인증서 유형 공통코드 */
			 , CERT_NO               = #{p.cert_no}                 /* 인증서 번호 */
			 , ATHG_UUID             = #{p.athg_uuid}               /* 첨부파일 */
			 , CERT_PUBL_DT          = #{p.cert_publ_dt}            /* 인증서 발행 일자 */
			 , CERT_PUBL_INSTN_NM    = #{p.cert_publ_instn_nm}      /* 인증서 발행 기관 명 */
			 , CERT_EFCT_ST_DT       = #{p.cert_efct_st_dt}         /* 인증서 유효 시작 일자 */
			 , CERT_EFCT_EXP_DT      = #{p.cert_efct_exp_dt}        /* 인증서 유효 만료 일자 */
			 , STS                   = 'U'                          /* 상태*/
			 , MODR_ID               = #{g.username}                /* 수정자 아이디*/
			 , MOD_DTTM              = #{g.now}                     /* 수정 일시*/
		 WHERE TEN_ID                = #{g.tenant}
		   AND VD_CERT_UUID          = #{p.vd_cert_uuid}
		   AND VD_CD                 = #{p.vd_cd}
	</update>
	<delete id="deleteCertInfo">
	/* vendor-info.deleteCertInfo 협력사 인증정보 삭제 */
		DELETE FROM VD_CERT
		 WHERE TEN_ID       = #{g.tenant}
		   AND VD_CERT_UUID = #{p.vd_cert_uuid}
		   AND VD_CD        = #{p.vd_cd}
	</delete>
</mapper>
