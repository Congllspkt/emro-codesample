<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="obd-monitoring">
	<select id="findListReqOnboardingEval" resultType="map">
        /* obd-monitoring.findListReqOnboardingEval: 온보딩평가 요청 목록 조회 */
        SELECT O.TEN_ID
             , O.OE_UUID
             , O.OORG_CD
             , O.VD_CD
             , V.ERP_VD_CD
             , CASE WHEN 'ko_KR' = #{g.locale} THEN V.VD_NM ELSE (CASE WHEN V.VD_NM_EN IS NULL OR V.VD_NM_EN = '' THEN V.VD_NM ELSE V.VD_NM_EN END) END AS VD_NM
             , OG.OEG_NM
             , O.OE_PRGS_STS_CCD  /* 진행 상태 */
			 , O.OE_RES_STS_CCD   /* 온보딩평가 결과 상태 공통코드(E008) */
             , O.OE_REQ_DT
             , O.PRCSG_ED_YN
             , O.OE_ED_DT
	         , NVL ((
	         	SELECT CASE WHEN PO_POSS_YN IS NULL OR PO_POSS_YN = '' THEN 'N' ELSE PO_POSS_YN END
	            FROM VD_OORG OV
	            WHERE OV.TEN_ID    = O.TEN_ID
	            	AND OV.OORG_CD = O.OORG_CD
	                AND OV.VD_CD   = O.VD_CD
               ), 'N') AS PO_POSS_YN  , O.OEG_UUID
             , OP.OBD_EVALSHT_UUID
          FROM OE O
          LEFT OUTER JOIN (SELECT TEN_ID, OE_UUID, OBD_EVALSHT_UUID
                             FROM OE_PRCS
                            GROUP BY TEN_ID, OE_UUID, OBD_EVALSHT_UUID
                          ) OP
            ON O.TEN_ID = OP.TEN_ID AND O.OE_UUID = OP.OE_UUID
         INNER JOIN OEG OG ON OG.TEN_ID = O.TEN_ID AND OG.OEG_UUID = O.OEG_UUID
         INNER JOIN VD V ON V.TEN_ID = O.TEN_ID AND V.VD_CD = O.VD_CD
         WHERE O.TEN_ID      = #{g.tenant}
           AND O.STS        != 'D'
           AND OG.STS       != 'D'
           AND O.PRCSG_ED_YN = 'N'  -- 처리 미종료 건만 조회
           AND O.OE_PRGS_STS_CCD IN ('EVAL_PRGSG')
         <if test="p.oe_prgs_sts_ccd != null and p.oe_prgs_sts_ccd != ''">
           AND O.OE_PRGS_STS_CCD = #{p.oe_prgs_sts_ccd}
         </if>
         <if test="p.vd_cd != null and p.vd_cd != ''">
           <bind name="vdCodePattern" value="'%' + p.vd_cd + '%'"/>
           AND UPPER(O.VD_CD) LIKE UPPER(#{vdCodePattern})
         </if>
         <if test="p.erp_vd_cd != null and p.erp_vd_cd != ''">
           <bind name="p_erp_vd_cd" value="'%' + p.erp_vd_cd + '%'"/>
           AND UPPER(V.ERP_VD_CD) LIKE UPPER(#{p_erp_vd_cd})
         </if>
         <if test="p.vd_nm != null and p.vd_nm != &quot;&quot;">
           <bind name="p_vd_nm" value="'%' + p.vd_nm + '%'"/>
           AND (UPPER(V.VD_NM) LIKE UPPER(#{p_vd_nm}) OR UPPER(V.VD_NM_EN) LIKE UPPER(#{p_vd_nm}))  /* 협력사명 검색조건*/
         </if>
         <if test="p.from_date != null and p.from_date != ''">
           AND O.OE_REQ_DT &gt;= #{p.from_date}
         </if>
         <if test="p.to_date != null and p.to_date != ''">
           AND O.OE_REQ_DT <![CDATA[<=]]> #{p.to_date}
         </if>
       <choose>
         <when test="p.oorg_cd != null and p.oorg_cd.size() != 0">
           AND O.OORG_CD IN
                <foreach close=")" collection="p.oorg_cd" item="oorg_cd" open="(" separator=",">
                  #{oorg_cd}
                </foreach>
         </when>
         <otherwise>
           AND O.OORG_CD IN (SELECT OOPM.OORG_CD
                                  FROM OORG_USR OOPM
                                     , OORG OOMG
                                 WHERE OOPM.TEN_ID       = #{g.tenant}
                                   AND OOPM.USR_ID       = #{g.username}
                                   AND OOMG.TEN_ID       = OOPM.TEN_ID
                                   AND OOMG.OUNIT_CD     = 'EO'
                                   AND OOMG.OORG_CD      = OOPM.OORG_CD
                                   AND OOMG.STS         != 'D'
                               )
         </otherwise>
       </choose>
         ORDER BY O.OE_REQ_DT DESC, O.MOD_DTTM DESC
    </select>
	<select id="findListOnboardingEvalProcess" resultType="map">
        /* obd-monitoring.findListOnboardingEvalProcess: 온보딩평가 프로세스 목록 조회 */
        SELECT OP.TEN_ID
             , O.OE_UUID
             , O.OORG_CD
             , OP.OE_PRCS_UUID
             , V.VD_CD
             , CASE WHEN 'ko_KR' = #{g.locale} THEN V.VD_NM ELSE V.VD_NM_EN END AS VD_NM
             , O.OEG_UUID
             , OEG.OEG_CD
             , OEP.OBD_EVALSHT_UUID                     /* 온보딩 평가시트 */
             , OEP.OBD_EVALSHT_PRCS_UUID                /* 온보딩 평가시트 프로세스 */
             , OEP.EVALTMPL_UUID                        /* 온보딩 평가시트 프로세스 템플릿 */
             , OEP.PRCS_CCD                             /* 프로세스 공통코드[공통코드=E916] */
             , OEP_DTLMULT.DTLCD_NM AS PRCS_NM
             , O.OE_REQ_DT                              /* 온보딩평가 요청 일자 */
             , OP.EVAL_CMPLD_DT                         /* 온보딩평가 프로세스 완료 일자 */
             , OP.OE_PRCS_STS_CCD                       /* 프로세스 상태 */
             , OP.EVAL_SUBJ_RES_UUID                    /* 평가 대상 결과 UUID */
             , OP_STS_DTLMULT.DTLCD_NM AS OE_REQ_RES_STS_NM
             , OP.PRCS_CONL_PASS_RSN                    /* 프로세스 조건부 합격 사유 */
             , CONCAT(
             	  CASE WHEN OP.PRCS_EVAL_SC IS NULL THEN CAST('0' AS NVARCHAR2(18)) ELSE CAST(OP.PRCS_EVAL_SC AS NVARCHAR2(18)) END
             	, CONCAT('/', CASE WHEN OEP.PRCS_PASS_SC IS NULL THEN CAST('0' AS NVARCHAR2(18)) ELSE CAST(OEP.PRCS_PASS_SC AS NVARCHAR2(18)) END)
               ) AS EVAL_SCO  , (SELECT SUM(CASE WHEN EVAL_STS_CCD = 'SUBM' THEN 1 ELSE 0 END) FROM OE_PRCS_EVALTR OPE WHERE OPE.TEN_ID = OP.TEN_ID AND OPE.OE_PRCS_UUID = OP.OE_PRCS_UUID) AS EVAL_END_CNT                  /* 완료된 절차 수 */
             , (SELECT SUM(CASE WHEN OPE.OE_PRCS_EVALTR_UUID IS NOT NULL  THEN 1 ELSE 0 END) FROM OE_PRCS_EVALTR OPE WHERE OPE.TEN_ID = OP.TEN_ID AND OPE.OE_PRCS_UUID = OP.OE_PRCS_UUID) AS EVAL_TOT_CNT  /* 전체 절차 수 */
             , OEP.EVALTR_TYP_CCD                       /* 평가자 유형 공통코드 */
             , CASE WHEN EXISTS(
                                SELECT 1
                                  FROM OE_PRCS_EVALTR OPE
                                 WHERE OPE.TEN_ID       = OP.TEN_ID
                                   AND OPE.OE_PRCS_UUID = OP.OE_PRCS_UUID
                                   AND OPE.EVALTR_ID IS NULL OR OPE.EVALTR_ID = ''
                                   AND OPE.STS         != 'D'
                               ) THEN 'Y' ELSE 'N'
               END NO_EVALTR_YN                         /* 평가 담당자 미존재 여부 */
             , OP.PRE_OE_PRCS_PASS_DT                   /* 이전 온보딩평가 프로세스 합격 일자 */
             , OEP.AUTO_PRCSG_YN                        /* 자동 처리 여부 */
             , OEP.PRCS_EFCTPD_MNTHS                    /* 프로세스 유효기간 개월 */
             , OEP.PRE_OE_TCAPPL_YN                     /* 이전 온보딩평가 인정 여부 */
             , OEP.PRE_OE_EFCTPD_MNTHS                  /* 이전 온보딩평가 유효기간 개월 */
             , OEP.PRE_OE_FCD_PASS_TCAPPL_YN            /* 이전 온보딩평가 강제 합격 인정 여부 */
             , OEP.PTNL_VD_SLCTN_CRTRA_YN               /* 잠재 협력사 선정 기준 여부 */
             , OEP.PRCS_WGT                             /* 프로세스 가중치 */
             , OEP.PRCS_SORT                            /* 프로세스 정렬 */
          FROM OE_PRCS OP
          LEFT OUTER JOIN DTLCD_MULTLANG OP_STS_DTLMULT ON OP_STS_DTLMULT.TEN_ID = OP.TEN_ID AND OP_STS_DTLMULT.CCD = 'E007' AND OP_STS_DTLMULT.DTLCD = OP.OE_PRCS_STS_CCD AND OP_STS_DTLMULT.LANG_CCD = #{g.locale}
         INNER JOIN OE O ON O.TEN_ID = OP.TEN_ID AND O.OE_UUID = OP.OE_UUID
         INNER JOIN VD V ON V.TEN_ID = OP.TEN_ID AND V.VD_CD = O.VD_CD
          /* 온보딩평가그룹 평가시트 프로세스 */
          LEFT OUTER JOIN OBD_EVALSHT_PRCS OEP ON OEP.TEN_ID = OP.TEN_ID AND OEP.OBD_EVALSHT_PRCS_UUID = OP.OBD_EVALSHT_PRCS_UUID
          LEFT OUTER JOIN DTLCD_MULTLANG OEP_DTLMULT ON OEP_DTLMULT.TEN_ID = OEP.TEN_ID AND OEP_DTLMULT.CCD = 'E916' AND OEP_DTLMULT.DTLCD = OEP.PRCS_CCD AND OEP_DTLMULT.LANG_CCD = #{g.locale}
         /* 온보딩평가그룹 */
         INNER JOIN OEG OEG ON OEG.TEN_ID = O.TEN_ID AND OEG.OEG_UUID = O.OEG_UUID
         /* 협력사관리그룹 */
         WHERE OP.TEN_ID         = #{g.tenant}
           AND O.OE_UUID         = #{p.oe_uuid}
           AND O.OE_PRGS_STS_CCD = #{p.oe_prgs_sts_ccd}
       	 ORDER BY CAST(OEP.PRCS_SORT AS INT) </select>
	<update id="saveListOnboardingEvalCompleteOe">
        /* obd-monitoring.saveListOnboardingEvalCompleteOe : 온보딩평가 모니터링 - 조건부합격 저장 (온보딩평가 마감 저장) */
        UPDATE OE
           SET OE_ED_DT        = #{p.oe_ed_dt}
             , OE_PRGS_STS_CCD = 'EVAL_CLSG'  /* Forced Closing 시 요청 상태(E030), 요청 결과(E008) 모두 closing */
             , OE_RES_STS_CCD  = 'CLSG'
             , MODR_ID         = #{g.username}
             , MOD_DTTM        = #{g.now}
         WHERE TEN_ID          = #{g.tenant}
           AND OE_UUID         = #{p.oe_uuid}
    </update>
	<update id="saveListOnboardingEvalCompleteOePrcs">
        /* obd-monitoring.saveListOnboardingEvalCompleteOePrcs : 온보딩평가 모니터링 - 조건부합격 저장 (온보딩평가 프로세스 마감 저장) */
        UPDATE OE_PRCS
           SET OE_PRCS_STS_CCD = 'PRCS_CLSG'
             , MODR_ID         = #{g.username}
             , MOD_DTTM        = #{g.now}
         WHERE TEN_ID          = #{g.tenant}
           AND OE_UUID         = #{p.oe_uuid}
           AND OE_PRCS_STS_CCD IN ('EVAL_WTG', 'PRCS_WTG')
    </update>
	<update id="saveOnboardingEvalConditionalPass">
		/* obd-monitoring.saveOnboardingEvalConditionalPass : 온보딩평가 모니터링 - 조건부합격 저장 */
		UPDATE OE
		SET   OE_RES_STS_CCD = 'PRGSG'  /* 조건부합격시 우선 결과 상태를 진행중(PRGSG)으로 UPDATE */
		    , MODR_ID        = #{g.username}
            , MOD_DTTM       = #{g.now}
		WHERE TEN_ID       = #{g.tenant}
		  AND OE_UUID      = #{p.oe_uuid}
	</update>
	<update id="saveProcessConditionalPass">
        /* obd-monitoring.saveProcessConditionalPass : 온보딩평가 모니터링 - 조건부합격 저장 */
        UPDATE OE_PRCS
           SET OE_PRCS_STS_CCD    = #{p.oe_prcs_sts_ccd}
             , PRCS_CONL_PASS_RSN = #{p.prcs_conl_pass_rsn}
		<bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
             , EVAL_CMPLD_DT      = #{getFormatNow}
             , STS                = 'U'
             , MODR_ID            = #{g.username}
             , MOD_DTTM           = #{g.now}
         WHERE TEN_ID             = #{g.tenant}
           AND OE_PRCS_UUID       = #{p.oe_prcs_uuid}
    </update>
	<select id="findOnboardingEvalPrcsInfo" resultType="map">
        /* obd-monitoring.findOnboardingEvalPrcsInfo : 온보딩평가 프로세스 정보 조회 (for Complete OnboardingEvalPrcs) */
        SELECT OP.OE_PRCS_UUID
             , OP.TEN_ID
             , OP.OE_UUID
             , OP.OBD_EVALSHT_PRCS_UUID
             , O.VD_CD
             , OP.OE_PRCS_STS_CCD
             , OEP.EVALTMPL_UUID
             , OEP.PRE_OE_TCAPPL_YN           /* 이전 온보딩평가 인정 여부 */
             , OP.PRCS_EVAL_SC
             , OEP.PRCS_PASS_SC               /* 프로세스 합격점수 */
             , OEP.PRCS_WGT
            -- , OP.EVAL_CLS
             , OP.STS
             , OP.RMK
             , OEP.PRCS_CCD
             , OG.OEG_CD
             , OEP.PRCS_SORT
             , OEP.PRE_OE_FCD_PASS_TCAPPL_YN  /* 이전 강제 패스 인정 여부 */
             , OEP.AUTO_PRCSG_YN              /* 자동 처리 여부 */
           --  , OP.EVAL_FAIL_YN 과락여부
             , OEP.PTNL_VD_SLCTN_CRTRA_YN     /* 잠재 협력사 기준 여부 */
             , OP.EVAL_CMPLD_DT
             , OEP.PRE_OE_EFCTPD_MNTHS        /* 이전 온보딩평가 유효기간 개월 */
             , OEP.PRCS_EFCTPD_MNTHS          /* 프로세스 유효기간 개월 */
             , OEP.EVALTR_TYP_CCD
          FROM OE_PRCS OP
         INNER JOIN OE O
            ON O.TEN_ID  = OP.TEN_ID
           AND O.OE_UUID = OP.OE_UUID
         INNER JOIN OBD_EVALSHT_PRCS OEP
            ON OEP.TEN_ID                = OP.TEN_ID
           AND OEP.OBD_EVALSHT_PRCS_UUID = OP.OBD_EVALSHT_PRCS_UUID
           AND OEP.STS                  != 'D'
         INNER JOIN OEG OG
            ON OG.TEN_ID   = O.TEN_ID
           AND OG.OEG_UUID = O.OEG_UUID
         WHERE OP.TEN_ID       = #{g.tenant}
           AND OP.OE_PRCS_UUID = #{p.oe_prcs_uuid}
    </select>
	<update id="updateOnboardingEvalPrcsResultSts">
        /* obd-monitoring.updateOnboardingEvalPrcsResultSts : 온보딩평가 프로세스 평가 결과 UPDATE */
        UPDATE OE_PRCS
           SET
            <bind name="getFormatNow" value="g.getFormatNow(g.now,'yyyyMMdd')"/>
                  EVAL_CMPLD_DT = #{getFormatNow}  /* 평가 완료 일자 */
                , MODR_ID       = #{g.username}    /* 수정자 아이디 */
			    , MOD_DTTM      = #{g.now}         /* 수정 일시 */
	            , OE_PRCS_STS_CCD = (CASE WHEN (
	                                    (CASE WHEN PRCS_EVAL_SC IS NULL THEN 0 ELSE PRCS_EVAL_SC END)
	                                     <![CDATA[>=]]>
	                                    (CASE WHEN CAST(#{p.prcs_pass_sc} AS NUMERIC) IS NULL THEN -1 ELSE #{p.prcs_pass_sc} END)
	                                )
	                                THEN 'PRCS_PASS'  /* PRCS_PASS: 프로세스 합격 */
	                                ELSE 'PRCS_FLR'   /* PRCS_FLR: 프로세스 불합격 */ END
	            )  /* 온보딩평가 프로세스 상태 공통코드(E007) */  WHERE TEN_ID       = #{g.tenant}
            AND OE_PRCS_UUID = #{p.oe_prcs_uuid}
            AND OE_PRCS_STS_CCD NOT IN ('PRCS_PASS', 'PRCS_CONL_PASS', 'PRE_OE_RES_APPL')  /* PRCS_PASS: 프로세스 합격, PRCS_CONL_PASS: 프로세스 조건부 합격, PRE_OE_RES_APPL: 이전 온보딩평가 결과 적용 */
            AND OE_PRCS_STS_CCD NOT IN ('PRCS_FLR')  /* PRCS_FLR: 프로세스 불합격 */
    </update>
	<update id="updateOnboardingEvalReqResultFail">
		/* obd-monitoring.updateOnboardingEvalReqResultFail : 온보딩평가 결과 상태(E008) 업데이트 */
		UPDATE OE
		   SET OE_RES_STS_CCD = 'FAIL'
             , MODR_ID        = #{g.username}
             , MOD_DTTM       = #{g.now}
		 WHERE TEN_ID  = #{g.tenant}
		   AND OE_UUID = #{p.oe_uuid}
		   AND EXISTS (SELECT 1
		               FROM OE_PRCS OP
		               WHERE OP.TEN_ID       = #{g.tenant}
				         AND OP.OE_PRCS_UUID = #{p.oe_prcs_uuid}
			             AND OP.OE_PRCS_STS_CCD NOT IN ('PRCS_PASS', 'PRCS_CONL_PASS', 'PRE_OE_RES_APPL')
				         AND OP.OE_PRCS_STS_CCD IN ('PRCS_FLR'))  /* PRCS_FLR: 프로세스 불합격일 경우만 FAIL UPDATE */
	</update>
	<select id="findListReqInfo" resultType="map">
        /* obd-monitoring.findListReqInfo: 온보딩평가 요청 목록 팝업 조회 */
        SELECT DISTINCT OORG_CD AS CD
             , (
                         SELECT CASE WHEN 'ko_KR' = #{g.locale} THEN ORG.LOGIC_ORG_NM
                                     ELSE ORG.LOGIC_ORG_NM_EN
                                 END
                           FROM OORG OORG
                          INNER JOIN LOGIC_ORG ORG
                             ON ORG.TEN_ID            = OORG.TEN_ID
                            AND ORG.LOGIC_ORG_TYP_CCD = OORG.LOGIC_ORG_TYP_CCD
                            AND ORG.LOGIC_ORG_CD      = OORG.LOGIC_ORG_CD
                            AND ORG.STS              != 'D'
                          WHERE OORG.TEN_ID  = O.TEN_ID
                            AND OORG.OORG_CD = O.OORG_CD
                        ) AS CD_NM
             , 'ROOT' AS UP_CD
             , '' AS APRV_TARG_YN
             /*, '' AS RE_EVAL_YN*/
             , '' AS VMT_CCD
        FROM OE_VMG OV
       INNER JOIN OE O
          ON O.TEN_ID  = OV.TEN_ID
         AND O.OE_UUID = OV.OE_UUID
       WHERE OV.TEN_ID  = #{g.tenant}
         AND OV.OE_UUID = #{p.oe_uuid}
         AND OV.STS    != 'D'
        UNION ALL
        SELECT V.VMG_CD           AS CD
             , CASE WHEN 'ko_KR' = #{g.locale} THEN V.VMG_NM
                    ELSE V.VMG_NM_EN
                END AS CD_NM
             , O.OORG_CD          AS UP_CD
             , CASE WHEN OV.APVL_SUBJ_YN IS NULL OR OV.APVL_SUBJ_YN = '' 
                         THEN 'N'
                    ELSE OV.APVL_SUBJ_YN
               END AS APRV_TARG_YN
               /*CASE WHEN OV.RE_EVAL_YN IS NULL OR OV.RE_EVAL_YN = ''
                         THEN 'N'
                    ELSE OV.RE_EVAL_YN
               END AS RE_EVAL_YN*/
            , VMT.VMT_CCD
          FROM OE_VMG OV, OE O, VMG_OORG VO, VMG V, VMT
         WHERE OV.TEN_ID          = O.TEN_ID
           AND OV.TEN_ID          = VO.TEN_ID
           AND OV.OE_UUID         = O.OE_UUID
           AND OV.VMG_OORG_UUID   = VO.VMG_OORG_UUID
           AND OV.OE_UUID         = #{p.oe_uuid}
           AND OV.STS            != 'D'
           AND VO.STS            != 'D'
           AND V.STS             != 'D'
	       AND VO.VMG_UUID        = V.VMG_UUID
           AND V.TEN_ID           = VMT.TEN_ID
           AND V.VMT_UUID         = VMT.VMT_UUID
    </select>
	<select id="findListObdEvalDetailScoreInfo" resultType="map">
        /* obd-monitoring.findListObdEvalDetailScoreInfo : 온보딩평가 평가결과상세 목록 조회  */
        SELECT GEF.TEN_ID                /* 시스템아이디 */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.EF_GRP_UUID ELSE GEF.EF_GRP_UUID END) AS EF_GRP_UUID     /* 평가항목군 UUID */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.EF_UUID ELSE GEF.EF_UUID END) AS EF_UUID                 /* 평가항목 UUID */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.EF_CD ELSE GEF.EF_CD END) AS EF_CD                       /* 평가항목 코드 */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.EF_NM ELSE GEF.EF_NM END) AS EF_NM                       /* 평가항목 명 */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.ORGN_EF_UUID ELSE GEF.ORGN_EF_UUID END) AS ORGN_EF_UUID  /* 원본평가항목아이디 */
             , (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN EF.ORGN_EF_CD ELSE GEF.ORGN_EF_CD END) AS ORGN_EF_CD        /* 원본평가항목코드 */
             , EF.EVALFACT_TYP_CCD       /* 항목 유형 공통코드 */
             , EF.SORT                   /* 정렬 */
             , EF.EVALFACT_EXPLN         /* 평가항목 설명 */
             , EF.QUANT_VAL_UNIT         /* 정량 값 단위 */
             , FS.OE_UUID                /* 평가아이디 */
             , FS.EF_SC    AS TOT_EF_SC  /* 평가항목 점수 */
             		, CASE WHEN EF.EVALFACT_TYP_CCD = 'QUANT' THEN CAST(FS.QUANT_FMLA_VAL AS NUMERIC(20, 5))  /* QUANT: 정량 */
                    	ELSE NULLIF(1,1)
                 	END AS CALC_VAL      /* 계산식 값 */  , CASE WHEN EF.EVALFACT_TYP_CCD = 'QUANT' THEN EF.NULLV_DATFIL_METH_CCD
                    ELSE NULL
                END AS NULLV_DATFIL_METH_CCD  /* NULL값 데이터보정 방식 공통코드 */
             , GEF.EF_GRP_WGT
             , CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN NULL
                    ELSE GEF.EF_GRP_WGT
                END AS ORG_EF_GRP_WGT         /* 평가항목군 가중치 */
             , CASE WHEN EF.EF_GRP_UUID = 'ROOT' THEN NULLIF(1,1)
                    ELSE EF.EF_WGT
                END AS EF_WGT                 /* 평가항목 가중치 */
             , CASE WHEN EF.EF_GRP_UUID != 'ROOT' THEN NULLIF(1,1)
                    ELSE FS.EF_SC
                END AS EF_GRP_SC              /* 평가항목군 점수 */
             , CASE WHEN EF.EF_GRP_UUID = 'ROOT' THEN NULLIF(1,1)
                    ELSE FS.EF_SC
                END AS EF_SC                  /* 평가항목 점수 */
             , CASE WHEN EF.EF_GRP_UUID = 'ROOT' THEN NULLIF(1,1)
                    ELSE FS.SCALE_SC
                END AS SCALE_SC               /* 스케일 점수 */
             , CASE WHEN EF.EF_GRP_UUID = 'ROOT' THEN NULL
                    ELSE EF.ADD_CND_CCD
                END AS ADD_CND_CCD            /* 추가 조건 공통코드(가감점) */
          FROM ( SELECT ESEFR.TEN_ID          /* 테넌트 아이디 */
                      , OP.OE_UUID            /* 온보딩평가 UUID */
                      , ESEFR.EF_GRP_UUID     /* 평가항목군 UUID */
                      , ESEFR.EF_UUID         /* 평가항목 UUID */
                      , ESEFR.SCALE_SC        /* 스케일 점수 */
                      , ESEFR.EF_SC           /* 평가항목 점수 */
                      , ESEFR.QUANT_FMLA_VAL  /* (정량항목)계산 값 점수 */
                   FROM OE_PRCS OP
                  INNER JOIN EVAL_SUBJ_RES ESR
                     ON (    ESR.TEN_ID             = OP.TEN_ID
                         AND ESR.EVAL_SUBJ_RES_UUID = OP.EVAL_SUBJ_RES_UUID
                        )
                  INNER JOIN (
                              SELECT FSEGR.TEN_ID
                                   , FSEGR.EVAL_SUBJ_EFACTG_RES_UUID  AS EVAL_SUBJ_EF_RES_UUID
                                   , FSEGR.EVAL_SUBJ_RES_UUID
                                   , FSEGR.EVALTMPL_UUID
                                   , 'ROOT'                           AS EF_GRP_UUID
                                   , FSEGR.EVALTMPL_EFACTG_UUID       AS EF_UUID
                                   , FSEGR.EFACTG_UUID                AS ORGN_EF_UUID
                                   , FSEGR.EFACTG_SC                  AS EF_SC
                                   , NULL                             AS SCALE_SC
                                   , NULL                             AS QUANT_FMLA
                                   , NULL                             AS QUANT_FMLA_VAL
                                   , NULL                             AS QUANT_FMLA_EXPLN
                                   , NULL                             AS QUANT_EVALFACT_NULLV_YN
                                FROM EVAL_SUBJ_EFACTG_RES FSEGR  /* FSER : 평가 대상 평가항목군 결과 */
                               WHERE FSEGR.TEN_ID = #{g.tenant}
                                 AND FSEGR.STS   != 'D'
                               UNION ALL
                              SELECT FSER.TEN_ID
                                   , FSER.EVAL_SUBJ_EVALFACT_RES_UUID AS EVAL_SUBJ_EF_RES_UUID
                                   , FSER.EVAL_SUBJ_RES_UUID
                                   , FSER.EVALTMPL_UUID
                                   , FSER.EVALTMPL_EFACTG_UUID        AS EF_GRP_UUID
                                   , FSER.EVALTMPL_EVALFACT_UUID      AS EF_UUID
                                   , FSER.EVALFACT_UUID               AS ORGN_EF_UUID
                                   , FSER.EVALFACT_SC                 AS EF_SC
                                   , FSER.SCALE_SC
                                   , FSER.QUANT_FMLA
                                   , FSER.QUANT_FMLA_VAL
                                   , FSER.QUANT_FMLA_EXPLN
                                   , FSER.QUANT_EVALFACT_NULLV_YN
                                FROM EVAL_SUBJ_EVALFACT_RES FSER  /* FSER : 온보딩평가 요청 평가항목 결과 */
                               WHERE FSER.TEN_ID = #{g.tenant}
                                 AND FSER.STS   != 'D'
                             ) ESEFR
                     ON (    ESEFR.TEN_ID             = ESR.TEN_ID
                         AND ESEFR.EVAL_SUBJ_RES_UUID = ESR.EVAL_SUBJ_RES_UUID
                        )
                  WHERE OP.TEN_ID        = #{g.tenant}        /* 시스템아이디 */
                    AND OP.OE_PRCS_UUID  = #{p.oe_prcs_uuid}  /* 대상유형값 */
               ) FS  /* FS : 평가항목 결과 */
         INNER JOIN ( SELECT EG.TEN_ID
                           , 'ROOT'                      AS EF_GRP_UUID
                           , EEG.EVALTMPL_EFACTG_UUID    AS EF_UUID
                           , EG.EFACTG_UUID              AS ORGN_EF_UUID
                           , EG.EFACTG_CD                AS ORGN_EF_CD
                           , EEG.EVALTMPL_UUID
                           , EEG.EFACTG_WGT              AS EF_GRP_WGT
                           , 'ROOT'                      AS EF_CD
                           , EG.EFACTG_NM                AS EF_NM
                        FROM EFACTG EG
                       INNER JOIN EVALTMPL_EFACTG EEG
                          ON EEG.TEN_ID      = EG.TEN_ID
                         AND EEG.EFACTG_UUID = EG.EFACTG_UUID
                         AND EEG.STS        != 'D'
                       WHERE EG.TEN_ID = #{g.tenant}
                         AND EG.STS   != 'D'
                    ) GEF
            ON (
                    GEF.TEN_ID  = FS.TEN_ID
                AND GEF.EF_UUID = (CASE WHEN FS.EF_GRP_UUID != 'ROOT' THEN FS.EF_GRP_UUID ELSE FS.EF_UUID END)
               )
          LEFT OUTER JOIN ( SELECT EF.TEN_ID
                                 , EEF.EVALTMPL_EFACTG_UUID    AS EF_GRP_UUID
                                 , EEF.EVALTMPL_EVALFACT_UUID  AS EF_UUID
                                 , EF.EVALFACT_UUID            AS ORGN_EF_UUID
                                 , EF.EVALFACT_CD              AS ORGN_EF_CD
                                 , EEF.EVALTMPL_UUID
                                 , EEF.EVALFACT_WGT            AS EF_WGT
                                 , EEF.EVALFACT_EVALTR_AUTHTY_CCD
                                 , EEF.SLFCK_SUBJ_YN
                                 , EF.EVALFACT_CD              AS EF_CD
                                 , EF.EVALFACT_NM              AS EF_NM
                                 , EF.EVALFACT_TYP_CCD
                                 , EF.ADD_CND_CCD
                                 , EF.SCALE_APPL_YN
                                 , EF.QUANT_FMLA_EXPLN
                                 , EF.QUANT_FMLA
                                 , EF.QUALI_EVAL_METH_TYP_CCD
                                 , EF.SCALE_RNG_SETUP_CCD
                                 , EF.NULLV_DATFIL_METH_CCD
                                 , EF.EVALFACT_DTL_DSPY_TYP_CCD
                                 , EF.QUANT_VAL_UNIT
                                 , EF.SORT
                                 , EF.EVALFACT_EXPLN
                              FROM EVALFACT EF
                             INNER JOIN EVALTMPL_EVALFACT EEF
                                ON EEF.TEN_ID        = EF.TEN_ID
                               AND EEF.EVALFACT_UUID = EF.EVALFACT_UUID
                               AND EEF.STS          != 'D'
                             WHERE EF.TEN_ID  = #{g.tenant}
                               AND EF.CNFD_YN = 'Y'
                               AND EF.STS    != 'D'
                          ) EF
            ON (
                    EF.TEN_ID      = FS.TEN_ID
                AND EF.EF_GRP_UUID = FS.EF_GRP_UUID
                AND EF.EF_UUID     = FS.EF_UUID
               )
         WHERE FS.TEN_ID = #{g.tenant}  /* 시스템아이디 */
         ORDER BY EF.SORT, EF.EF_NM
    </select>
	<select id="findOePrcsInfo" resultType="map">
        /* obd-monitoring.findOePrcsInfo: 온보딩평가 프로세스 정보 조회 */
        SELECT OP.TEN_ID
             , OP.OE_PRCS_UUID
             , OP.EVAL_SUBJ_RES_UUID
             , OP.OBD_EVALSHT_PRCS_UUID
             , OEP.PRCS_CCD
             , DTLML.DTLCD_NM AS PRCS_CCD_NM
             , OEP.EVALTR_TYP_CCD
             , OP.OE_PRCS_STS_CCD
             , OP_STS_DTLMULT.DTLCD_NM AS OE_PRCS_STS_CCD_NM
             , O.OORG_CD
             , O.VD_CD
             , O.OE_UUID
             , CONCAT(CONCAT(OG.OEG_NM, ' - '), DTLML.DTLCD_NM) AS OE_NM
             , O.OE_PRGS_STS_CCD
             , OG.OEG_CD
             , OG.OEG_NM
             , CASE WHEN 'ko_KR' = #{g.locale} THEN V.VD_NM ELSE (CASE WHEN V.VD_NM_EN IS NULL OR V.VD_NM_EN = '' THEN V.VD_NM ELSE V.VD_NM_EN END) END AS VD_NM
             , (SELECT SUM(CASE WHEN EVAL_STS_CCD = 'SUBM' THEN 1 ELSE 0 END) FROM OE_PRCS_EVALTR OPE WHERE OPE.TEN_ID = OP.TEN_ID AND OPE.OE_PRCS_UUID = OP.OE_PRCS_UUID) AS EVAL_END_CNT  /* 완료된 절차 수 */
             , (SELECT SUM(CASE WHEN OPE.OE_PRCS_EVALTR_UUID IS NOT NULL  THEN 1 ELSE 0 END)
            	FROM OE_PRCS_EVALTR OPE WHERE OPE.TEN_ID = OP.TEN_ID AND OPE.OE_PRCS_UUID = OP.OE_PRCS_UUID) AS EVAL_TOT_CNT  /* 전체 절차 수 */
          FROM OE_PRCS OP
          LEFT OUTER JOIN DTLCD_MULTLANG OP_STS_DTLMULT
            ON OP_STS_DTLMULT.TEN_ID     = OP.TEN_ID
           AND OP_STS_DTLMULT.CCD        = 'E007'
           AND OP_STS_DTLMULT.DTLCD      = OP.OE_PRCS_STS_CCD
           AND OP_STS_DTLMULT.LANG_CCD   = #{g.locale}
         INNER JOIN OBD_EVALSHT_PRCS OEP
            ON OEP.TEN_ID                = OP.TEN_ID
           AND OEP.OBD_EVALSHT_PRCS_UUID = OP.OBD_EVALSHT_PRCS_UUID
           AND OEP.STS                  != 'D'
          LEFT OUTER JOIN DTLCD_MULTLANG DTLML  /* 프로세스 코드 명 */
            ON DTLML.TEN_ID              = OEP.TEN_ID
           AND DTLML.CCD                 = 'E916'
           AND DTLML.DTLCD               = OEP.PRCS_CCD
           AND DTLML.LANG_CCD            = #{g.locale}
         INNER JOIN OE O
            ON O.TEN_ID                  = OP.TEN_ID
           AND O.OE_UUID                 = OP.OE_UUID
         INNER JOIN VD V
            ON V.TEN_ID                  = O.TEN_ID
           AND V.VD_CD                   = O.VD_CD
         INNER JOIN OEG OG
            ON OG.TEN_ID                 = O.TEN_ID
           AND OG.OEG_UUID               = O.OEG_UUID
         WHERE OP.TEN_ID                 = #{g.tenant}
           AND OP.OE_PRCS_UUID           = #{p.oe_prcs_uuid}
    </select>
	<select id="findOePrcsInfoEvaltrGrp" resultType="map">
        /* obd-monitoring.findOePrcsInfoEvaltrGrp : 온보딩평가 프로세스 평가자 그룹 조회 */
        SELECT OP.OE_UUID
             , OP.OE_PRCS_UUID
             , OP.OBD_EVALSHT_PRCS_UUID
             , ET.EVALTMPL_UUID
             , ETEF.EVALFACT_EVALTR_AUTHTY_CCD
             , ( SELECT COUNT(CASE WHEN OPE.EVALTR_ID IS NULL OR OPE.EVALTR_ID = '' THEN NULL ELSE 1 END)
                   FROM OE_PRCS_EVALTR OPE
                  WHERE OPE.TEN_ID                     = OP.TEN_ID
                    AND OPE.OE_PRCS_UUID               = OP.OE_PRCS_UUID
                    AND OPE.EVALFACT_EVALTR_AUTHTY_CCD = ETEF.EVALFACT_EVALTR_AUTHTY_CCD
               ) AS EVALTR_CNT
             , ( SELECT COUNT(1)
                   FROM EVAL_SUBJ_EVALTR_RES ESER
                  WHERE ESER.TEN_ID                     = OP.TEN_ID
                    AND ESER.EVAL_SUBJ_RES_UUID         = OP.EVAL_SUBJ_RES_UUID
                    AND ESER.EVALFACT_EVALTR_AUTHTY_CCD = ETEF.EVALFACT_EVALTR_AUTHTY_CCD
                    AND ESER.EVAL_PRGS_STS_CCD          = 'SUBM'
               ) AS SUBMIT_CNT
          FROM OE_PRCS OP
         INNER JOIN OBD_EVALSHT_PRCS OEP
            ON OEP.TEN_ID                = OP.TEN_ID
           AND OEP.OBD_EVALSHT_PRCS_UUID = OP.OBD_EVALSHT_PRCS_UUID
           AND OEP.STS                  != 'D'
         INNER JOIN EVALTMPL ET
            ON ET.TEN_ID                 = OEP.TEN_ID
           AND ET.EVALTMPL_UUID          = OEP.EVALTMPL_UUID
           AND ET.STS                   != 'D'
         INNER JOIN EVALTMPL_EVALFACT ETEF
            ON ETEF.TEN_ID               = OEP.TEN_ID
           AND ETEF.EVALTMPL_UUID        = OEP.EVALTMPL_UUID
           AND ETEF.STS                 != 'D'
         WHERE OP.TEN_ID                 = #{g.tenant}
           AND OP.OE_PRCS_UUID           = #{p.oe_prcs_uuid}
           AND ETEF.EVALFACT_EVALTR_AUTHTY_CCD IS NOT NULL  /* 정량항목 조회 안함 조건 (TODO : 정량항목으로만 구성된 시트 조회시 수정) */
         GROUP BY OP.TEN_ID, OP.OE_UUID, OP.OE_PRCS_UUID, OP.EVAL_SUBJ_RES_UUID, ET.EVALTMPL_UUID, OP.OBD_EVALSHT_PRCS_UUID, ETEF.EVALFACT_EVALTR_AUTHTY_CCD
         ORDER BY ETEF.EVALFACT_EVALTR_AUTHTY_CCD
    </select>
	<select id="findListOePrcsEvaltr" resultType="map">
        /* obd-monitoring.findListOePrcsEvaltr : 온보딩평가 프로세스 평가 담당자 목록 조회 */
        SELECT OPE.TEN_ID
             , OPE.OE_PRCS_UUID
             , OPE.OE_PRCS_EVALTR_UUID
             , OEP.PRCS_CCD
             , OEP.EVALTR_TYP_CCD
			 , OEP.EVALDOC_LYT_TYP_CCD
             , O.OE_UUID
             , CONCAT(CONCAT(OG.OEG_NM, '-'), DTLML.DTLCD_NM) AS OE_NM
             , SUBSTR(O.OE_REQ_DT, 1, 4) AS OE_YR  , O.VD_CD
             , O.OORG_CD
             , OG.OEG_CD
             , ET.EVALTMPL_UUID
             , ESER.EVAL_SUBJ_EVALTR_RES_UUID
             , OP.EVAL_SUBJ_RES_UUID
             , ESER.EVAL_SUBJ_RES_UUID
             , ESER.EVALTR_ID
             , CASE WHEN 'ko_KR' = #{g.locale} THEN U.USR_NM ELSE U.USR_NM_EN END AS EVALTR_NM  /* 사용자명 */
             , ESER.EVAL_PRGS_STS_CCD
             , ESER.RMK
             , ESER.ATHG_UUID
             , ESER.EVALFACT_EVALTR_AUTHTY_CCD
             , ESER.EVALTR_SC
             , (CASE WHEN ESER.EVAL_PRGS_STS_CCD = 'SUBM' THEN 'Y' ELSE 'N' END) AS EVALTR_SUBMIT_YN
          FROM OE_PRCS OP
         INNER JOIN OBD_EVALSHT_PRCS OEP
            ON OEP.TEN_ID                = OP.TEN_ID
           AND OEP.OBD_EVALSHT_PRCS_UUID = OP.OBD_EVALSHT_PRCS_UUID
           AND OEP.STS                  != 'D'
         LEFT OUTER JOIN DTLCD_MULTLANG DTLML  /* 프로세스 코드 명 */
            ON DTLML.TEN_ID              = OEP.TEN_ID
           AND DTLML.CCD                 = 'E916'
           AND DTLML.DTLCD               = OEP.PRCS_CCD
           AND DTLML.LANG_CCD            = #{g.locale}
         INNER JOIN EVALTMPL ET
            ON ET.TEN_ID                 = OEP.TEN_ID
           AND ET.EVALTMPL_UUID          = OEP.EVALTMPL_UUID
           AND ET.STS                   != 'D'
         INNER JOIN OE_PRCS_EVALTR OPE
            ON OPE.TEN_ID                = OP.TEN_ID
           AND OPE.OE_PRCS_UUID          = OP.OE_PRCS_UUID
         INNER JOIN EVAL_SUBJ_EVALTR_RES ESER
            ON ESER.TEN_ID                    = OPE.TEN_ID
           AND ESER.EVAL_SUBJ_EVALTR_RES_UUID = OPE.EVAL_SUBJ_EVALTR_RES_UUID
         INNER JOIN OE O
            ON O.TEN_ID  = OP.TEN_ID
           AND O.OE_UUID = OP.OE_UUID
         INNER JOIN OEG OG
            ON OG.TEN_ID   = O.TEN_ID
           AND OG.OEG_UUID = O.OEG_UUID
          LEFT OUTER JOIN USR U
            ON U.TEN_ID = ESER.TEN_ID
           AND U.USR_ID = ESER.EVALTR_ID
         WHERE OP.TEN_ID  = #{g.tenant}
           AND OP.OE_UUID = #{p.oe_uuid}
         <if test="p.session_usr_id != null and p.session_usr_id != ''">
           AND OPE.EVALTR_ID = #{p.session_usr_id}
         </if>
         <if test="p.oe_prcs_uuid != null and p.oe_prcs_uuid != ''">
           AND OP.OE_PRCS_UUID = #{p.oe_prcs_uuid}
         </if>
         <if test="p.evalfact_evaltr_authty_ccd != null and p.evalfact_evaltr_authty_ccd != ''">
           AND ESER.EVALFACT_EVALTR_AUTHTY_CCD = #{p.evalfact_evaltr_authty_ccd}
         </if>
         ORDER BY ESER.EVALTR_ID, ESER.EVALFACT_EVALTR_AUTHTY_CCD ASC
    </select>
	<insert id="insertOePrcsEvaltrForManagenent">
        /* obd-monitoring.insertOePrcsEvaltrForManagenent : 온보딩평가그룹 온보딩평가 프로세스 담당자 생성 */
        INSERT INTO OE_PRCS_EVALTR
        (     TEN_ID                          /* 테넌트 아이디 */
            , OE_PRCS_EVALTR_UUID             /* 온보딩평가 프로세스 평가자 UUID */
            , EVAL_SUBJ_EVALTR_RES_UUID       /* 평가 대상 평가자 결과 UUID */
            , OE_PRCS_UUID                    /* 온보딩평가 프로세스 UUID */
            , EVALTR_ID                       /* 평가자 아이디 */
            , EVALFACT_EVALTR_AUTHTY_CCD      /* 평가항목 평가자 권한 공통코드 */
			, EVALTR_SC                       /* 평가자 점수 */
            , EVAL_STS_CCD                    /* 평가 상태 공통코드 */
            , RMK                             /* 비고 */
            , STS                             /* 상태 */
            , REGR_ID                         /* 등록자 아이디 */
            , REG_DTTM                        /* 등록 일시 */
			, MODR_ID                         /* 수정자 아이디 */
            , MOD_DTTM                        /* 수정 일시 */
        ) VALUES(
              #{g.tenant}
            , #{p.oe_prcs_evaltr_uuid}
            , NULL                            /* 평가 대상 평가자 결과 UUID */
            , #{p.oe_prcs_uuid}               /* 온보딩평가 프로세스 UUID */
            , #{p.evaltr_id}                  /* 평가자 아이디 */
            , #{p.evalfact_evaltr_authty_ccd} /* 평가항목 평가자 권한 공통코드 */
            , NULL                            /* 평가자 점수 */
            , 'WTG'                           /* 절차 상태 (WTG: 대기) */
            , NULL                            /* 비고 */
            , 'C'                             /* 상태 */
            , #{g.username}                   /* 등록자 아이디 */
            , #{g.now}                        /* 등록 일시 */
			, #{g.username}                   /* 수정자 아이디 */
			, #{g.now}                        /* 수정 일시 */
        )
    </insert>
	<delete id="deleteOePrcsEvaltr">
	    /* obd-monitoring.deleteOePrcsEvaltr : 온보딩평가 프로세스 담당자 정성평가 진행관리 삭제 */
	    DELETE FROM OE_PRCS_EVALTR
	     WHERE TEN_ID              = #{g.tenant}
	       AND OE_PRCS_EVALTR_UUID = #{p.oe_prcs_evaltr_uuid}
    </delete>
	<select id="findListEvartrOfIncompleteOePrcs" resultType="map">
        /* obd-monitoring.findListEvartrOfIncompleteOePrcs : 온보딩평가 프로세스 미제출 평가 담당자 목록 조회 */
        SELECT OPE.OE_PRCS_EVALTR_UUID
             , OPE.EVALFACT_EVALTR_AUTHTY_CCD
             , OPE.EVALTR_ID
             , ESER.EVAL_SUBJ_EVALTR_RES_UUID
          FROM OE_PRCS_EVALTR OPE
         INNER JOIN
               EVAL_SUBJ_EVALTR_RES ESER
            ON (    ESER.TEN_ID                    = OPE.TEN_ID
                AND ESER.EVAL_SUBJ_EVALTR_RES_UUID = OPE.EVAL_SUBJ_EVALTR_RES_UUID
               )
         WHERE OPE.TEN_ID              = #{g.tenant}
           AND OPE.OE_PRCS_UUID        = #{p.oe_prcs_uuid}
           AND ESER.EVAL_PRGS_STS_CCD != 'SUBM'  /* SUBM: 제출 */
    </select>
	<select id="findReqedOnboardingAprvProgYn" resultType="map">
	    /* obd-monitoring.findReqedOnboardingAprvProgYn : 온보딩평가 결재진행여부 조회 */
	    SELECT CASE WHEN EXISTS ( SELECT 1
	                                FROM OE_VMG OV
	                               INNER JOIN OE O
	                                  ON O.TEN_ID  = OV.TEN_ID
	                                 AND O.OE_UUID = OV.OE_UUID
	                               INNER JOIN VD_CHG_HISTREC VCH
	                                  ON VCH.TEN_ID                  = O.TEN_ID
	                                 AND VCH.VD_MST_CHG_HISTREC_UUID = O.VD_MST_CHG_HISTREC_UUID
	                               WHERE OV.TEN_ID     = #{g.tenant}
	                                 AND VCH.MOD_SEQNO = (SELECT MAX(MOD_SEQNO) FROM VD_CHG_HISTREC WHERE OV.TEN_ID = VCH.TEN_ID AND VD_CD = VCH.VD_CD)
	                                 AND VCH.CHG_TYP_CCD IN ('PO_POSS_VD_REG_REQ')  /* PO_POSS_VD_REG_REQ: 발주 협력사 등록 요청 */
	                            <choose>
	                                <when test="p.checkList != null and p.checkList.size() &gt; 0">
	                                 AND OV.OE_UUID IN
	                                    <foreach close=")" collection="p.checkList" item="item" open="(" separator=",">
	                                        #{item.oe_uuid}
	                                    </foreach>
	                                </when>
	                                <when test="p.oe_uuid != null and p.oe_uuid != ''">
	                                 AND OV.OE_UUID = #{p.oe_uuid}
	                                </when>
	                                <otherwise>
	                                 AND 1=0
	                                </otherwise>
	                            </choose>
	                            ) THEN 'Y'
	                ELSE 'N'
	           END AS APRV_PROG_YN
	      FROM DUM_TBL
    </select>
	<select id="findCreateOeYnByObdEvalsht" resultType="string">
		/* obd-monitoring.findCreateOeYnByObdEvalsht: 온보딩 평가시트 사용여부 체크 (OE 생성 여부) */
		SELECT CASE WHEN COUNT(O.OE_UUID) = 0 THEN 'N' ELSE 'Y' END AS IS_CREATE_OE_YN
		  FROM OE O
		 INNER JOIN OE_PRCS OP
		    ON OP.TEN_ID  = O.TEN_ID
		   AND OP.OE_UUID = O.OE_UUID
		   AND OP.STS    != 'D'
		 WHERE O.TEN_ID            = #{g.tenant}
		   AND O.STS              != 'D'
		   AND OP.OBD_EVALSHT_UUID = #{p.obd_evalsht_uuid}
	</select>
	<select id="findCreateOeYnByOeg" resultType="string">
		/* obd-monitoring.findCreateOeYnByOeg: 온보딩평가그룹 사용여부 체크 (OE 생성 여부) */
		SELECT CASE WHEN COUNT(O.OE_UUID) = 0 THEN 'N' ELSE 'Y' END AS IS_CREATE_OE_YN
		  FROM OE O
		 WHERE O.TEN_ID   = #{g.tenant}
		   AND O.OEG_UUID = #{p.oeg_uuid}
	</select>
</mapper>
