<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="survey-template">
	<select id="findListSurveyAnsTemplate" resultType="map">
		SELECT SURV_ANS_TMPL.SURV_ANS_TMPL_UUID
		     , SURV_ANS_TMPL.ANS_TYP_CCD
		     , FN_JSON_VALUE(SURV_ANS_TMPL.SURV_ANS_TMPL_NM, #{g.locale}) AS DISP_SURV_ANS_TMPL_NM
		     , LISTAGG(FN_JSON_VALUE(SURV_ANS_TMPL_OPT.OPT_NM, #{g.locale}), ' / ') WITHIN GROUP(ORDER BY SURV_ANS_TMPL_OPT.OPT_SORT) AS LIST_SURV_ANS_TMPL_OPT_NM
		     , SURV_ANS_TMPL.ATH_POSS_YN
		     , SURV_ANS_TMPL.ATH_MAND_YN
		     , SURV_ANS_TMPL.OTRS_ANS_YN
		  FROM SURV_ANS_TMPL
		 INNER JOIN DTLCD
		    ON DTLCD.TEN_ID = SURV_ANS_TMPL.TEN_ID
		   AND DTLCD.DTLCD = SURV_ANS_TMPL.ANS_TYP_CCD
		  LEFT OUTER JOIN SURV_ANS_TMPL_OPT
		    ON SURV_ANS_TMPL_OPT.TEN_ID = SURV_ANS_TMPL.TEN_ID
		   AND SURV_ANS_TMPL_OPT.SURV_ANS_TMPL_UUID = SURV_ANS_TMPL.SURV_ANS_TMPL_UUID
		 WHERE SURV_ANS_TMPL.TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL.STS != 'D'
		   AND DTLCD.CCD = 'C090'
		   <if test="p.ans_typ_ccd != null">
		       AND SURV_ANS_TMPL.ANS_TYP_CCD = #{p.ans_typ_ccd}
		   </if>
		   <if test="p.surv_ans_tmpl_nm != null and p.surv_ans_tmpl_nm != ''">
		       <bind name="namePattern" value="'%' + p.surv_ans_tmpl_nm + '%'"/>
		       AND UPPER(SURV_ANS_TMPL.SURV_ANS_TMPL_NM) LIKE UPPER(#{namePattern})
		   </if>
		 GROUP BY SURV_ANS_TMPL.SURV_ANS_TMPL_UUID
		        , SURV_ANS_TMPL.ANS_TYP_CCD
		        , DTLCD.DTLCD_SORT
		        , SURV_ANS_TMPL.SURV_ANS_TMPL_NM
		        , SURV_ANS_TMPL.ATH_POSS_YN
		        , SURV_ANS_TMPL.ATH_MAND_YN
		        , SURV_ANS_TMPL.OTRS_ANS_YN
		 ORDER BY DTLCD.DTLCD_SORT
		        , FN_JSON_VALUE(SURV_ANS_TMPL.SURV_ANS_TMPL_NM, #{g.locale})
	</select>
	<delete id="deleteSurveyAnsTemplate">
		DELETE
		  FROM SURV_ANS_TMPL
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL_UUID = #{p.surv_ans_tmpl_uuid}
	</delete>
	<select id="findSurveyAnsTemplateByUuid" resultType="map">
		SELECT SURV_ANS_TMPL_UUID
		     , SURV_ANS_TMPL_NM
		     , ANS_TYP_CCD
		     , ATH_POSS_YN
		     , ATH_MAND_YN
		     , OTRS_ANS_YN
		     , LNR_MIN_VAL_CCD
		     , LNR_MAX_VAL_CCD
		     , LNR_MIN_NM
		     , LNR_MAX_NM
		     , SHORTANS_INP_FORM_CCD
		     , REGEXP
		     , INP_LMT
		     , MAX_SEL_CNT
		     , ST_DT_LMT
		     , ED_DT_LMT
		     , RMK
		  FROM SURV_ANS_TMPL
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL_UUID = #{p.surv_ans_tmpl_uuid}
	</select>
	<select id="findListSurveyAnsTemplateOptionByTemplateUuid" resultType="map">
		SELECT SURV_ANS_TMPL_UUID
		     , SURV_ANS_TMPL_OPT_UUID
		     , OPT_NM
		     , FN_JSON_VALUE(OPT_NM, #{g.locale}) AS DISP_OPT_NM
		     , OPT_SC
		     , OPT_SORT
		  FROM SURV_ANS_TMPL_OPT
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL_UUID = #{p.surv_ans_tmpl_uuid}
		 ORDER BY OPT_SORT
	</select>
	<insert id="insertSurveyAnsTemplate">
		INSERT INTO SURV_ANS_TMPL (
			TEN_ID
			, SURV_ANS_TMPL_UUID
			, SURV_ANS_TMPL_NM
			, ANS_TYP_CCD
			, ATH_POSS_YN
			, ATH_MAND_YN
			, OTRS_ANS_YN
			, LNR_MIN_VAL_CCD
			, LNR_MAX_VAL_CCD
			, LNR_MIN_NM
			, LNR_MAX_NM
			, SHORTANS_INP_FORM_CCD
			, REGEXP
			, INP_LMT
			, MAX_SEL_CNT
			, ST_DT_LMT
			, ED_DT_LMT
			, RMK
			, STS
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.surv_ans_tmpl_uuid}
			, #{p.surv_ans_tmpl_nm}
			, #{p.ans_typ_ccd}
			, #{p.ath_poss_yn}
			, #{p.ath_mand_yn}
			, #{p.otrs_ans_yn}
			, #{p.lnr_min_val_ccd}
			, #{p.lnr_max_val_ccd}
			, #{p.lnr_min_nm}
			, #{p.lnr_max_nm}
			, #{p.shortans_inp_form_ccd}
			, #{p.regexp}
			, CAST(#{p.inp_lmt} AS FLOAT  )
			, CAST(#{p.max_sel_cnt} AS FLOAT  )
			, #{p.st_dt_lmt}
			, #{p.ed_dt_lmt}
			, #{p.rmk}
			, 'C'
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateSurveyAnsTemplate">
		UPDATE SURV_ANS_TMPL
		   SET SURV_ANS_TMPL_NM = #{p.surv_ans_tmpl_nm}
		     , ANS_TYP_CCD = #{p.ans_typ_ccd}
		     , ATH_POSS_YN = #{p.ath_poss_yn}
		     , ATH_MAND_YN = #{p.ath_mand_yn}
		     , OTRS_ANS_YN = #{p.otrs_ans_yn}
		     , LNR_MIN_VAL_CCD = #{p.lnr_min_val_ccd}
		     , LNR_MAX_VAL_CCD = #{p.lnr_max_val_ccd}
		     , LNR_MIN_NM = #{p.lnr_min_nm}
		     , LNR_MAX_NM = #{p.lnr_max_nm}
		     , SHORTANS_INP_FORM_CCD = #{p.shortans_inp_form_ccd}
		     , REGEXP = #{p.regexp}
		     , INP_LMT = #{p.inp_lmt}
		     , RMK = #{p.rmk}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL_UUID = #{p.surv_ans_tmpl_uuid}
	</update>
	<delete id="deleteAllSurveyAnsTemplateOptionByTemplate">
		DELETE
		  FROM SURV_ANS_TMPL_OPT
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_ANS_TMPL_UUID = #{p.surv_ans_tmpl_uuid}
	</delete>
	<insert id="insertSurveyAnsTemplateOption">
		INSERT INTO SURV_ANS_TMPL_OPT (
			TEN_ID
			, SURV_ANS_TMPL_UUID
			, SURV_ANS_TMPL_OPT_UUID
			, OPT_NM
			, OPT_SC
			, OPT_SORT
			, RMK
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.surv_ans_tmpl_uuid}
			, #{p.surv_ans_tmpl_opt_uuid}
			, #{p.opt_nm}
			, #{p.opt_sc}
			, CAST(#{p.opt_sort} AS INT)
			, #{p.rmk}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<select id="findListSurveyTemplate" resultType="map">
		SELECT SURV_TMPL_UUID
		     , SURV_TYP_CCD
		     , FN_JSON_VALUE(SURV_TMPL_NM, #{g.locale}) AS DISP_SURV_TMPL_NM
		     , STAT_METH_CCD
		     , LYT_CCD
		  FROM SURV_TMPL
		 WHERE TEN_ID = #{g.tenant}
		   <if test="p.surv_typ_ccd != null">
		       AND SURV_TYP_CCD = #{p.surv_typ_ccd}
		   </if>
		   <if test="p.surv_tmpl_nm != null and p.surv_tmpl_nm != ''">
		       <bind name="namePattern" value="'%' + p.surv_tmpl_nm + '%'"/>
		       AND UPPER(SURV_TMPL_NM) LIKE #{namePattern}
		   </if>
		   <if test="p.except_surv_tmpl_uuid != null">
		       AND SURV_TMPL_UUID != #{p.except_surv_tmpl_uuid}
		   </if>
	</select>
	<delete id="deleteSurveyTemplateAnsBySurveyTemplateUuid">
		DELETE
		  FROM SURV_TMPL_ANS
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</delete>
	<delete id="deleteSurveyTemplateQnBySurveyTemplateUuid">
		DELETE
		  FROM SURV_TMPL_QN
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</delete>
	<delete id="deleteSurveyTemplateSectBySurveyTemplateUuid">
		DELETE
		  FROM SURV_TMPL_SECT
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</delete>
	<delete id="deleteSurveyTemplate">
		DELETE
		  FROM SURV_TMPL
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</delete>
	<resultMap id="resultMap-findSurveyTemplateByUuid" type="map">
        <result column="FRONT_COVER_CONT" javaType="string" property="front_cover_cont" typeHandler="stringClob"/>
        <result column="BACK_COVER_CONT" javaType="string" property="back_cover_cont" typeHandler="stringClob"/>
    </resultMap>
	<select id="findSurveyTemplateByUuid" resultMap="resultMap-findSurveyTemplateByUuid">
		SELECT SURV_TMPL_UUID
		     , SURV_TYP_CCD
		     , SURV_TMPL_NM
		     , FN_JSON_VALUE(SURV_TMPL_NM, #{g.locale}) AS DISP_SURV_TMPL_NM
		     , ELEM_PD_VAL
		     , ELEM_PD_TYP_CCD
		     , STAT_METH_CCD
		     , STAT_CRTRA_SC
		     , LYT_CCD
		     , SECT_ORD_RAND_YN
		     , QN_ORD_RAND_YN
		     , ANS_ORD_RAND_YN
		     , QN_NO_DSPY_YN
		     , FRONT_COVER_YN
		     , FRONT_COVER_CONT
		     , BACK_COVER_YN
		     , BACK_COVER_CONT
		     , RMK
		  FROM SURV_TMPL
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</select>
	<select id="findListSurveyTemplateSectBySurveyTemplateUuid" resultType="map">
		SELECT SURV_TMPL_UUID
		     , SURV_TMPL_UUID AS SURV_UUID
		     , SURV_TMPL_SECT_UUID
		     , SURV_TMPL_SECT_UUID AS SURV_SECT_UUID
		     , SURV_TMPL_SECT_CD AS SURV_SECT_CD
		     , SURV_TMPL_SECT_NM AS SURV_SECT_NM
		     , FN_JSON_VALUE(SURV_TMPL_SECT_NM, #{g.locale}) AS DISP_SURV_SECT_NM
		     , SURV_TMPL_SECT_EXPLN AS SURV_SECT_EXPLN
		     , FN_JSON_VALUE(SURV_TMPL_SECT_EXPLN, #{g.locale}) AS DISP_SURV_SECT_EXPLN
		     , SURV_TMPL_SECT_SORT AS SURV_SECT_SORT
		     , SURV_TMPL_SECT_RAND_SORT AS SURV_SECT_RAND_SORT
		  FROM SURV_TMPL_SECT
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
		 <choose>
		     <when test="p.sect_ord_rand_yn != null and &quot;Y&quot; eq p.sect_ord_rand_yn.toString()">
		         ORDER BY SURV_TMPL_SECT_RAND_SORT
		     </when>
		     <otherwise>
		         ORDER BY SURV_TMPL_SECT_SORT
		     </otherwise>
		 </choose>
	</select>
	<select id="findListSurveyTemplateQnBySurveyTemplateUuid" resultType="map">
		SELECT SURV_TMPL_UUID
		     , SURV_TMPL_UUID AS SURV_UUID
		     , SURV_TMPL_SECT_UUID
		     , SURV_TMPL_SECT_UUID AS SURV_SECT_UUID
		     , SURV_TMPL_QN_UUID
		     , SURV_TMPL_QN_UUID AS SURV_QN_UUID
		     , SURV_TMPL_QN_CD AS SURV_QN_CD
		     , SURV_TMPL_QN_NM AS SURV_QN_NM
		     , FN_JSON_VALUE(SURV_TMPL_QN_NM, #{g.locale}) AS DISP_SURV_QN_NM
		     , SURV_TMPL_QN_EXPLN AS SURV_QN_EXPLN
		     , FN_JSON_VALUE(SURV_TMPL_QN_EXPLN, #{g.locale}) AS DISP_SURV_QN_EXPLN
		     , SURV_TMPL_QN_SORT AS SURV_QN_SORT
		     , SURV_TMPL_QN_RAND_SORT AS SURV_QN_RAND_SORT
		     , CMNT_ADD_YN
		     , ANS_MAND_YN
		     , ANS_TYP_CCD
		     , ATH_POSS_YN
		     , ATH_MAND_YN
		     , OTRS_ANS_YN
		     , LNR_MIN_VAL_CCD
		     , LNR_MAX_VAL_CCD
		     , LNR_MIN_NM
		     , FN_JSON_VALUE(LNR_MIN_NM, #{g.locale}) AS DISP_LNR_MIN_NM
		     , LNR_MAX_NM
		     , FN_JSON_VALUE(LNR_MAX_NM, #{g.locale}) AS DISP_LNR_MAX_NM
		     , SHORTANS_INP_FORM_CCD
		     , REGEXP
		     , INP_LMT
		     , MAX_SEL_CNT
		     , ST_DT_LMT
		     , ED_DT_LMT
		     , GRID_RESP_YN
		     , PAR_SURV_TMPL_QN_UUID
		     , PAR_SURV_TMPL_QN_UUID AS PAR_SURV_QN_UUID
		     , PAR_SURV_TMPL_ANS_OPT_UUID
		     , PAR_SURV_TMPL_ANS_OPT_UUID AS PAR_SURV_ANS_OPT_UUID
		     , (
		        SELECT OPT_NM
		          FROM SURV_TMPL_ANS
		         WHERE TEN_ID = SURV_TMPL_QN.TEN_ID
		           AND SURV_TMPL_ANS_OPT_UUID = SURV_TMPL_QN.PAR_SURV_TMPL_ANS_OPT_UUID
		       ) AS PAR_SURV_ANS_OPT_NM
		  FROM SURV_TMPL_QN
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
		 <choose>
		     <when test="p.qn_ord_rand_yn != null and &quot;Y&quot; eq p.qn_ord_rand_yn.toString()">
		         ORDER BY SURV_TMPL_QN_RAND_SORT
		     </when>
		     <otherwise>
		         ORDER BY SURV_TMPL_QN_SORT
		     </otherwise>
		 </choose>
	</select>
	<select id="findListSurveyTemplateAnsBySurveyTemplateUuid" resultType="map">
		SELECT SURV_TMPL_UUID
		     , SURV_TMPL_UUID AS SURV_UUID
		     , SURV_TMPL_SECT_UUID
		     , SURV_TMPL_SECT_UUID AS SURV_SECT_UUID
		     , SURV_TMPL_QN_UUID
		     , SURV_TMPL_QN_UUID AS SURV_QN_UUID
		     , SURV_TMPL_ANS_OPT_UUID
		     , SURV_TMPL_ANS_OPT_UUID AS SURV_ANS_OPT_UUID
		     , OPT_NM
		     , FN_JSON_VALUE(OPT_NM, #{g.locale}) AS DISP_OPT_NM
		     , OPT_SC
		     , OPT_SORT
		     , OPT_RAND_SORT
		  FROM SURV_TMPL_ANS
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
		 <choose>
		     <when test="p.ans_ord_rand_yn != null and &quot;Y&quot; eq p.ans_ord_rand_yn.toString()">
		         ORDER BY OPT_RAND_SORT
		     </when>
		     <otherwise>
		         ORDER BY OPT_SORT
		     </otherwise>
		 </choose>
	</select>
	<insert id="insertSurveyTemplate">
		INSERT INTO SURV_TMPL (
			TEN_ID
			, SURV_TMPL_UUID
			, SURV_TYP_CCD
			, SURV_TMPL_NM
			, ELEM_PD_VAL
			, ELEM_PD_TYP_CCD
			, STAT_METH_CCD
			, STAT_CRTRA_SC
			, LYT_CCD
			, SECT_ORD_RAND_YN
			, QN_ORD_RAND_YN
			, ANS_ORD_RAND_YN
			, QN_NO_DSPY_YN
			, FRONT_COVER_YN
			, FRONT_COVER_CONT
			, BACK_COVER_YN
			, BACK_COVER_CONT
			, RMK
			, REGR_ID
			, REG_DTTM
		) VALUES (
			#{g.tenant}
			, #{p.surv_tmpl_uuid}
			, #{p.surv_typ_ccd}
			, #{p.surv_tmpl_nm}
			, #{p.elem_pd_val}
			, #{p.elem_pd_typ_ccd}
			, #{p.stat_meth_ccd}
			, #{p.stat_crtra_sc}
			, #{p.lyt_ccd}
			, #{p.sect_ord_rand_yn}
			, #{p.qn_ord_rand_yn}
			, #{p.ans_ord_rand_yn}
			, #{p.qn_no_dspy_yn}
			, #{p.front_cover_yn}
			, #{p.front_cover_cont}
			, #{p.back_cover_yn}
			, #{p.back_cover_cont}
			, #{p.rmk}
			, #{g.username}
			, #{g.now}
		)
	</insert>
	<update id="updateSurveyTemplate">
		UPDATE SURV_TMPL
		   SET SURV_TYP_CCD = #{p.surv_typ_ccd}
		     , SURV_TMPL_NM = #{p.surv_tmpl_nm}
		     , ELEM_PD_VAL = #{p.elem_pd_val}
		     , ELEM_PD_TYP_CCD = #{p.elem_pd_typ_ccd}
		     , STAT_METH_CCD = #{p.stat_meth_ccd}
		     , STAT_CRTRA_SC = #{p.stat_crtra_sc}
		     , LYT_CCD = #{p.lyt_ccd}
		     , SECT_ORD_RAND_YN = #{p.sect_ord_rand_yn}
		     , QN_ORD_RAND_YN = #{p.qn_ord_rand_yn}
		     , ANS_ORD_RAND_YN = #{p.ans_ord_rand_yn}
		     , QN_NO_DSPY_YN = #{p.qn_no_dspy_yn}
		     , FRONT_COVER_YN = #{p.front_cover_yn}
		     , FRONT_COVER_CONT = #{p.front_cover_cont}
		     , BACK_COVER_YN = #{p.back_cover_yn}
		     , BACK_COVER_CONT = #{p.back_cover_cont}
		     , RMK = #{p.rmk}
		     , MODR_ID = #{g.username}
		     , MOD_DTTM = #{g.now}
		 WHERE TEN_ID = #{g.tenant}
		   AND SURV_TMPL_UUID = #{p.surv_tmpl_uuid}
	</update>
	<insert id="insertSurveyTemplateSect">
		INSERT INTO SURV_TMPL_SECT (
			TEN_ID
			, SURV_TMPL_UUID
			, SURV_TMPL_SECT_UUID
			, SURV_TMPL_SECT_CD
			, SURV_TMPL_SECT_NM
			, SURV_TMPL_SECT_EXPLN
			, SURV_TMPL_SECT_SORT
			, SURV_TMPL_SECT_RAND_SORT
		) VALUES (
			#{g.tenant}
			, #{p.surv_tmpl_uuid}
			, #{p.surv_tmpl_sect_uuid}
			, #{p.surv_sect_cd}
			, #{p.surv_sect_nm}
			, #{p.surv_sect_expln}
			, CAST(#{p.surv_sect_sort} AS INT)
			, CAST(#{p.surv_sect_rand_sort} AS INT)
		)
	</insert>
	<insert id="insertSurveyTemplateQn">
		INSERT INTO SURV_TMPL_QN (
			TEN_ID
			, SURV_TMPL_UUID
			, SURV_TMPL_SECT_UUID
			, SURV_TMPL_QN_UUID
			, SURV_TMPL_QN_CD
			, SURV_TMPL_QN_NM
			, SURV_TMPL_QN_EXPLN
			, CMNT_ADD_YN
			, ANS_MAND_YN
			, ANS_TYP_CCD
			, ATH_POSS_YN
			, ATH_MAND_YN
			, OTRS_ANS_YN
			, LNR_MIN_VAL_CCD
			, LNR_MAX_VAL_CCD
			, LNR_MIN_NM
			, LNR_MAX_NM
			, SHORTANS_INP_FORM_CCD
			, REGEXP
			, INP_LMT
			, MAX_SEL_CNT
			, ST_DT_LMT
			, ED_DT_LMT
			, GRID_RESP_YN
			, PAR_SURV_TMPL_QN_UUID
			, PAR_SURV_TMPL_ANS_OPT_UUID
			, SURV_TMPL_QN_SORT
			, SURV_TMPL_QN_RAND_SORT
		) VALUES (
			#{g.tenant}
			, #{p.surv_tmpl_uuid}
			, #{p.surv_tmpl_sect_uuid}
			, #{p.surv_tmpl_qn_uuid}
			, #{p.surv_qn_cd}
			, #{p.surv_qn_nm}
			, #{p.surv_qn_expln}
			, #{p.cmnt_add_yn}
			, #{p.ans_mand_yn}
			, #{p.ans_typ_ccd}
			, #{p.ath_poss_yn}
			, #{p.ath_mand_yn}
			, #{p.otrs_ans_yn}
			, #{p.lnr_min_val_ccd}
			, #{p.lnr_max_val_ccd}
			, #{p.lnr_min_nm}
			, #{p.lnr_max_nm}
			, #{p.shortans_inp_form_ccd}
			, #{p.regexp}
			, CAST(#{p.inp_lmt} AS FLOAT  )
			, CAST(#{p.max_sel_cnt} AS FLOAT  )
			, #{p.st_dt_lmt}
			, #{p.ed_dt_lmt}
			, #{p.grid_resp_yn}
			, #{p.par_surv_tmpl_qn_uuid}
			, #{p.par_surv_tmpl_ans_opt_uuid}
			, CAST(#{p.surv_qn_sort} AS INT)
			, CAST(#{p.surv_qn_rand_sort} AS INT)
		)
	</insert>
	<insert id="insertSurveyTemplateAn">
		INSERT INTO SURV_TMPL_ANS (
			TEN_ID
			, SURV_TMPL_UUID
			, SURV_TMPL_SECT_UUID
			, SURV_TMPL_QN_UUID
			, SURV_TMPL_ANS_OPT_UUID
			, OPT_NM
			, OPT_SC
			, OPT_SORT
			, OPT_RAND_SORT
		) VALUES (
			#{g.tenant}
			, #{p.surv_tmpl_uuid}
			, #{p.surv_tmpl_sect_uuid}
			, #{p.surv_tmpl_qn_uuid}
			, #{p.surv_tmpl_ans_opt_uuid}
			, #{p.opt_nm}
			, #{p.opt_sc}
			, CAST(#{p.opt_sort} AS INT)
			, CAST(#{p.opt_rand_sort} AS INT)
		)
	</insert>
</mapper>
