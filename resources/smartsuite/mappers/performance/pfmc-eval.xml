<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="pfmc-eval">
	<select id="findListPerformanceEvalFulfill" resultType="map">
		/* pfmc-eval.findListPerformanceEvalFulfill: 퍼포먼스평가 수행 목록 조회 (findListEvalPerform) */
		SELECT P.TEN_ID
		     , P.OORG_CD
		     , P.PE_UUID
		     , P.PE_STS_CCD     /* 평가 상태 */
		     , P.EVAL_CD        /* 평가 코드 */
		     , P.EVAL_NM        /* 평가 명 */
		     , P.EVAL_SUBJ_YR   /* 평가 년도 */
		     , P.SLFCK_SUBJ_YN  /* 자체점검 대상여부 */
		     , P.PE_ED_YN       /* 퍼포먼스평가 종료여부 */
		     , P.PE_ED_DT       /* 퍼포먼스평가 종료일자 */
			 , PSECNT.FUL_CNT   AS END_CNT           /* 수행건수 */
			 , PSECNT.N_FUL_CNT AS FAIL_CNT          /* 미수행건수 */
			 , PSECNT.TOT_CNT   AS TOT_CNT           /* 대상 건수 */
			 , CASE WHEN PSECNT.FUL_CNT IS NULL OR PSECNT.TOT_CNT IS NULL OR PSECNT.TOT_CNT = 0 THEN NULLIF(1,1)
			   ELSE ROUND((PSECNT.FUL_CNT / PSECNT.TOT_CNT) * 100, 2)  END AS END_PER
		FROM PE P /* 퍼포먼스평가 */
		INNER JOIN ( SELECT PSE.TEN_ID
							, PP.PE_UUID
							, SUM(CASE WHEN ESER.EVAL_PRGS_STS_CCD = 'SUBM' THEN 1 ELSE 0 END) AS FUL_CNT
							, SUM(CASE WHEN ESER.EVAL_PRGS_STS_CCD = 'SUBM' THEN 0 ELSE 1 END) AS N_FUL_CNT
							, COUNT(1) TOT_CNT
					FROM PE_SUBJ_EVALTR PSE /* 퍼포먼스평가 대상 평가자 */
					INNER JOIN EVAL_SUBJ_EVALTR_RES ESER ON PSE.TEN_ID = ESER.TEN_ID AND PSE.EVAL_SUBJ_EVALTR_RES_UUID = ESER.EVAL_SUBJ_EVALTR_RES_UUID /* 평가대상 평가자 결과 */
					INNER JOIN PE_SUBJ PS ON PSE.TEN_ID = PS.TEN_ID AND PSE.PE_SUBJ_UUID = PS.PE_SUBJ_UUID /* 퍼포먼스평가 대상 */
					INNER JOIN PE_PEG PP ON PSE.TEN_ID = PP.TEN_ID AND PS.PE_PEG_UUID = PP.PE_PEG_UUID /* 퍼포먼스평가 퍼포먼스평가그룹 */
					INNER JOIN PEG PEG ON PP.TEN_ID = PEG.TEN_ID AND PP.PEG_UUID = PEG.PEG_UUID /* 퍼포먼스평가그룹 */
					WHERE PSE.TEN_ID  = #{g.tenant}
					AND PSE.EVALTR_ID = #{g.username}
					AND PSE.STS != 'D'
					AND PS.STS != 'D'
				<if test="p.peg_cd != null and p.peg_cd != ''">
					AND PEG.PEG_CD = #{p.peg_cd}
				</if>
					GROUP BY PSE.TEN_ID, PP.PE_UUID) PSECNT /* PSECNT : 평가자별 평가 수행현황 */
		ON  PSECNT.TEN_ID  = P.TEN_ID
		AND PSECNT.PE_UUID = P.PE_UUID
		WHERE P.TEN_ID = #{g.tenant}
		  AND P.STS != 'D'
		  AND P.OORG_CD = #{p.oorg_cd}
		<choose>
			<when test="p.pe_sts_ccd != null and p.pe_sts_ccd != ''">
			AND P.PE_STS_CCD = #{p.pe_sts_ccd}
			</when>
		  	<otherwise>
			AND P.PE_STS_CCD IN ('QUALI_EVAL_PRGSG', 'EVAL_RES_CALC_CMPLD') /* 정성평가, 집계완료만 조회 */
		  	</otherwise>
		</choose>
		<if test="p.eval_nm != null and p.eval_nm != ''">
			<bind name="eval_nm" value="'%' + p.eval_nm + '%'"/>
			AND P.EVAL_NM LIKE #{eval_nm}
		</if>
		<if test="p.eval_subj_yr != null and p.eval_subj_yr != ''">
			AND P.EVAL_SUBJ_YR = #{p.eval_subj_yr} </if>
	</select>
	<select id="findPerformanceEvalFulfillInfo" resultType="map">
		/* pfmc-eval.findPerformanceEvalFulfillInfo: 퍼포먼스평가 수행 정보 조회 */
		SELECT P.TEN_ID
			 , P.OORG_CD
			 , P.PE_UUID        /* 퍼포먼스평가 UUID */
			 , P.EVAL_CD        /* 평가 코드 */
			 , P.EVAL_NM        /* 평가명 */
		     , P.EVAL_SUBJ_YR   /* 평가 연도 */
		     , P.PE_STS_CCD     /* 퍼포먼스평가 상태 */
		     , P.VD_APPEAL_POSS_YN	/* 이의제기 가능 여부 */
		     , P.IMPROV_REQ_APPL_YN     /* 개선요청 적용 여부 */
		     , P.DIFF_APPL_YN           /* 차별화 적용 여부 */
		FROM PE P
		WHERE P.TEN_ID = #{g.tenant}
		  AND P.PE_UUID = #{p.pe_uuid}
		  AND P.STS != 'D'
	</select>
	<select id="findPerformanceEvalSubjectList" resultType="map">
		/* pfmc-eval.findPerformanceEvalSubjectList: 퍼포먼스평가 수행 대상 정보 조회 */
		SELECT P.TEN_ID
		     , 'PE' AS EVAL_TASK_TYP_CCD
			 , P.OORG_CD
			 , P.PE_UUID                 /* 퍼포먼스 평가 UUID */
			 , PSE.EVALTR_ID             /* 평가자 ID */
		     , ( SELECT CASE WHEN #{g.locale} = 'ko_KR' OR (USR_NM_EN IS NULL OR USR_NM_EN = '') THEN USR_NM ELSE USR_NM_EN END
		         FROM USR
		         WHERE TEN_ID = #{g.tenant}
				 AND USR_ID = PSE.EVALTR_ID ) AS EVALTR_NM
		     , PS.VD_CD
		     , VD.ERP_VD_CD
			 , CASE WHEN #{g.locale} = 'ko_KR' OR (VD.VD_NM_EN IS NULL OR VD.VD_NM_EN = '') THEN VD.VD_NM ELSE VD_NM_EN END AS VD_NM
		     , PS.PFMC_EVALSHT_UUID           /* 퍼포먼스 평가 시트 UUID */
		     , PEG.PEG_CD                     /* 퍼포먼스 평가그룹 코드 */
		     , PEG.PEG_NM                     /* 퍼포먼스 평가그룹 명 */
		     , PS.VMG_OORG_UUID               /* 협력사관리그룹 운영조직 UUID */
		     , VMG.VMG_CD                     /* 협력사관리그룹 코드 */
		     , VMG.VMG_TYP_CCD                /* 협력사관리그룹 유형 공통코드 */
		     , CASE WHEN #{g.locale} = 'ko_KR' OR (VMG.VMG_NM_EN IS NULL OR VMG.VMG_NM_EN = '') THEN VMG.VMG_NM ELSE VMG.VMG_NM_EN END AS VMG_NM  /* 협력사관리그룹 명 */
		     , PESHT.EVALTMPL_UUID            /* 평가템플릿 UUID */
			 , PESHT.EVALSHT_CD               /* 평가시트 코드 */
		     , PESHT.EVALDOC_LYT_TYP_CCD      /* 평가문서 레이아웃 유형 */
		     , PESHT.EVALTR_TYP_CCD           /* 평가자 유형 */
		     , PSE.SLFCK_EVALTR_YN            /* 자체점검 평가자 여부 */
		     , PSE.EVALFACT_EVALTR_AUTHTY_CCD /* 평가항목 평가자 권한 공통코드 */
		     , ESER.EVAL_PRGS_STS_CCD         /* 평가 진행 상태 공통코드 */
		     , ESER.EVALTR_SC                 /* 점수 */
		     , ESER.ATHG_UUID                 /* 첨부파일(평가대상 평가자 결과) */
		     , ( SELECT COUNT(1)
		         FROM ATHF
		         WHERE TEN_ID = #{g.tenant}
		           AND ATHG_UUID = ESER.ATHG_UUID) AS ATT_CNT
		     , PS.PE_SUBJ_UUID                /* 퍼포먼스평가 대상 UUID*/
		     , PSE.PE_SUBJ_EVALTR_UUID        /* 퍼포먼스평가 대상 평가자 UUID */
		     , ESER.EVAL_SUBJ_RES_UUID        /* 평가 대상 결과 UUID */
		     , PSE.EVAL_SUBJ_EVALTR_RES_UUID  /* 평가 대상 평가자 결과 UUID */
		FROM PE_SUBJ PS /* 퍼포먼스평가 대상 */
		INNER JOIN PE_PEG PP ON PS.TEN_ID = PP.TEN_ID AND PS.PE_PEG_UUID = PP.PE_PEG_UUID /* 퍼포먼스평가 퍼포먼스평가그룹 */
		INNER JOIN PEG PEG ON PP.TEN_ID = PEG.TEN_ID AND PP.PEG_UUID = PEG.PEG_UUID
		INNER JOIN PE P ON PS.TEN_ID = P.TEN_ID AND PP.PE_UUID = P.PE_UUID /* 퍼포먼스평가 */
		INNER JOIN PE_SUBJ_EVALTR PSE ON PS.TEN_ID = PSE.TEN_ID AND PS.PE_SUBJ_UUID = PSE.PE_SUBJ_UUID /* 퍼포먼스평가 대상 평가자 */
		INNER JOIN EVAL_SUBJ_EVALTR_RES ESER ON PSE.TEN_ID = ESER.TEN_ID AND PSE.EVAL_SUBJ_EVALTR_RES_UUID = ESER.EVAL_SUBJ_EVALTR_RES_UUID /* 평가대상 평가자 결과 */
		LEFT OUTER JOIN PFMC_EVALSHT PESHT ON PS.TEN_ID = PESHT.TEN_ID AND PESHT.PFMC_EVALSHT_UUID = PS.PFMC_EVALSHT_UUID /* 퍼포먼스평가 시트 */
		LEFT OUTER JOIN VD VD ON PS.TEN_ID = VD.TEN_ID AND VD.VD_CD = PS.VD_CD
		LEFT OUTER JOIN VMG_OORG VO ON PS.TEN_ID = VO.TEN_ID AND PS.VMG_OORG_UUID = VO.VMG_OORG_UUID /* 협력사관리그룹 */
		LEFT OUTER JOIN VMG VMG ON VO.TEN_ID = VMG.TEN_ID AND VO.VMG_UUID = VMG.VMG_UUID /* 협력사관리그룹 */
		WHERE PS.TEN_ID = #{g.tenant}
		  AND P.PE_UUID = #{p.pe_uuid}
	  <choose>
	    <when test="p.evaltr_id != null and p.evaltr_id !=''">
		  AND PSE.EVALTR_ID = #{p.evaltr_id}
	    </when>
	    <when test="p.evaltr_typ_ccd != null and p.evaltr_typ_ccd eq 'VD'">
		  AND PSE.EVALTR_ID = #{p.vd_cd}
	    </when>
	    <otherwise>
		  AND PSE.EVALTR_ID = #{g.username}
	    </otherwise>
	  </choose>
		  AND PS.STS != 'D'
		  AND PSE.STS != 'D'
		ORDER BY PESHT.EVALSHT_CD, VMG.VMG_TYP_CCD, VMG.VMG_CD, PS.VD_CD
	</select>
	<select id="findCreatePeYnByPfmcEvalsht" resultType="string">
		/* pfmc-eval.findCreatePeYnByPfmcEvalsht: 퍼포먼스 평가시트 사용여부 체크 (PE 생성 여부) */
		SELECT CASE WHEN COUNT(P.PE_UUID) = 0 THEN 'N' ELSE 'Y' END AS IS_CREATE_PE_YN
		  FROM PE P
		 INNER JOIN PE_PEG PP
		    ON PP.TEN_ID = P.TEN_ID
		   AND PP.PE_UUID = P.PE_UUID
		   AND PP.STS != 'D'
		 WHERE P.TEN_ID = #{g.tenant}
		   AND P.STS != 'D'
		   AND PP.PFMC_EVALSHT_UUID = #{p.pfmc_evalsht_uuid}
	</select>
	<select id="findCreatePeYnByPeg" resultType="string">
		/* pfmc-eval.findCreatePeYnByPeg: 퍼포먼스평가그룹 사용여부 체크 (PE 생성 여부) */
		SELECT CASE WHEN COUNT(P.PE_UUID) = 0 THEN 'N' ELSE 'Y' END AS IS_CREATE_PE_YN
		  FROM PE P
		 INNER JOIN PE_PEG PP
		    ON PP.TEN_ID = P.TEN_ID
		   AND PP.PE_UUID = P.PE_UUID
		   AND PP.STS != 'D'
		 WHERE P.TEN_ID = #{g.tenant}
		   AND P.STS != 'D'
		   AND PP.PEG_UUID = #{p.peg_uuid}
	</select>
	<select id="findVendorPfmcEvalInfoList" resultType="map">
	/* pfmc-eval.findVendorPfmcEvalInfoList : 협력사별 퍼포먼스 평가 결과 리스트 조회 */
		SELECT PE.EVAL_SUBJ_YR AS EVAL_YR
		     , 'PE' AS EVAL_TASK_TYP_CCD
		     , PE.OORG_CD
			 , (SELECT CASE WHEN 'ko_KR' = #{g.locale} THEN ORG.LOGIC_ORG_NM
			           ELSE ORG.LOGIC_ORG_NM_EN END
			     FROM OORG OORG
			    INNER JOIN LOGIC_ORG ORG
			       ON ORG.TEN_ID = OORG.TEN_ID
			      AND ORG.LOGIC_ORG_TYP_CCD = OORG.LOGIC_ORG_TYP_CCD
			      AND ORG.LOGIC_ORG_CD = OORG.LOGIC_ORG_CD
			      AND ORG.STS != 'D'
			 	WHERE OORG.TEN_ID = PE.TEN_ID
			 	  AND OORG.OORG_CD = PE.OORG_CD) AS OORG_NM
		     , PE.EVAL_NM
			 , (SELECT CASE WHEN 'ko_KR' = #{g.locale} THEN VMG_NM
			           ELSE VMG_NM_EN END
			    FROM VMG
			    INNER JOIN VMG_OORG VO
			    ON VO.TEN_ID = VMG.TEN_ID
			    AND VO.VMG_UUID = VMG.VMG_UUID
			    WHERE VO.TEN_ID = PSUBJ.TEN_ID
			    AND VO.VMG_OORG_UUID = PSUBJ.VMG_OORG_UUID) AS VMG_NM
		     , PSRES.EVAL_SC
		     , PSRES.EVAL_GRD_CD
		     , CONCAT(CONCAT(CONCAT('[', PSRES.EVAL_GRD_CD),'] '),
		          (SELECT EVAL_GRD.EVAL_GRD_NM
		             FROM PE_EVAL_GRD EVAL_GRD
		            WHERE EVAL_GRD.TEN_ID = PSRES.TEN_ID
		              AND EVAL_GRD.PE_PEG_UUID = PSUBJ.PE_PEG_UUID
		              AND EVAL_GRD.EVAL_GRD_CD = PSRES.EVAL_GRD_CD
		              AND EVAL_GRD.STS != 'D')) AS EVAL_GRD_NM
			 , PSRES.RANK
		  FROM PE PE
		 INNER JOIN PE_PEG PPEG
		    ON PE.TEN_ID = PPEG.TEN_ID
		   AND PE.PE_UUID = PPEG.PE_UUID
		   AND PPEG.STS != 'D'
		   AND PE.STS != 'D'
		 INNER JOIN PE_SUBJ PSUBJ
		    ON PPEG.TEN_ID = PSUBJ.TEN_ID
		   AND PPEG.PE_PEG_UUID = PSUBJ.PE_PEG_UUID
		   AND PSUBJ.STS != 'D'
		 INNER JOIN PE_SUBJ_RES PSRES
		    ON PSUBJ.TEN_ID = PSRES.TEN_ID
		   AND PSUBJ.PE_SUBJ_UUID = PSRES.PE_SUBJ_UUID
		   AND PSRES.STS != 'D'
		 INNER JOIN VD
		    ON PSUBJ.TEN_ID = VD.TEN_ID
		   AND PSUBJ.VD_CD = VD.VD_CD
		   AND VD.STS != 'D'
		 WHERE PE.TEN_ID = #{g.tenant}
		   AND VD.VD_CD = #{g.vd_cd}
		   AND PE.PE_STS_CCD = 'APVD' /* 승인완료 (평가 수행상태 R301) */
		<if test="p.eval_nm != null and p.eval_nm != ''">
		   <bind name="p_eval_nm" value="'%' + p.eval_nm + '%'"/>
		   AND PE.EVAL_NM LIKE #{p_eval_nm}
		 </if>
		 ORDER BY CAST(PE.EVAL_SUBJ_YR AS INTEGER) DESC
	</select>
</mapper>
